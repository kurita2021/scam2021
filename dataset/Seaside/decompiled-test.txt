testEncodedLatin1Url  self assert: (String with: Character space with: (Character codePoint: 233) with: (Character codePoint: 228)) urlEncodedGives: '%20%E9%E4'-=JUAMPI=-addValue: arg1  values add: arg1-=JUAMPI=-testTableColumnGroup  self assert: [:arg1 |  arg1 tableColumnGroup ] gives: '<colgroup></colgroup>'.  self assert: [:arg1 |  arg1 tableColumnGroup           character: '.';           characterOffset: 2 ] gives: '<colgroup char="." charoff="2"></colgroup>'.  self assert: [:arg1 |  arg1 tableColumnGroup           align: 'right';           verticalAlign: 'top' ] gives: '<colgroup align="right" valign="top"></colgroup>'.  self assert: [:arg1 |  arg1 tableColumnGroup           span: 3;           width: '20' ] gives: '<colgroup span="3" width="20"></colgroup>'-=JUAMPI=-next  | tmp1 |  tmp1 := self selectionIndex \\ classes size + 1.  self selected: (classes at: tmp1)-=JUAMPI=-onContextMenu: arg1  self document scriptGenerator event: 'contextmenu' do: arg1 on: self-=JUAMPI=-version  ^version-=JUAMPI=-style  ^self add: (WAStyleElement root: self)-=JUAMPI=-confirm: arg1  ^self wait: [:arg2 |  self confirm: arg1 onAnswer: arg2 ]-=JUAMPI=-<= arg1  ^self quality <= arg1 quality-=JUAMPI=-removeFromRemovals  self expression removals: (self removeAll: self selectedRemovals from: self expression removals)-=JUAMPI=-day: arg1  day := arg1-=JUAMPI=-initializeOn: arg1  self initialize-=JUAMPI=-notFound  self ifResetPossible: [ self response           notFound;           contentType: WAMimeType textHtml ].  self response nextPutAll: (WAHtmlCanvas builder           fullDocument: true;           rootBlock: [:arg1 |  arg1 title: 'Not Found' ];           render: [:arg2 |  arg2 heading: [ arg2 text: 'Error: "'.                    arg2 render: self request url.                    arg2 text: '" not found' ] ])-=JUAMPI=-rawAddAllToPath: arg1  arg1 do: [:arg2 |  self rawAddToPath: arg2 ]-=JUAMPI=-addTelevision  self addMedia: 'tv'-=JUAMPI=-printMilliSeconds: arg1  ^arg1 > 2000 ifTrue: [ self printDuration: (Duration milliseconds: arg1 greaseInteger) ] ifFalse: [ arg1 > 2 ifTrue: [ arg1 greaseInteger printString , ' ms' ] ifFalse: [ (GRNumberPrinter new precision: 2) , ' ms' print: arg1 ] ]-=JUAMPI=-application  ^self parent-=JUAMPI=-renderContentOn: arg1  self childrenDo: [:arg2 |  arg1 render: arg2 ]-=JUAMPI=-renderContentOn: arg1  arg1 select     list: self options;     selected: self selection;     callback: [:arg2 |  self selection: arg2 ]-=JUAMPI=-renderContentOn: arg1  self renderExplanationOn: arg1.  arg1 table: [ self renderLabel: 'Codec:' value: self requestContext codec on: arg1.        self renderLabel: 'Session:' value: self requestContext session on: arg1.        self renderLabel: 'Application:' value: self requestContext application on: arg1.        self renderLabel: 'Request:' value: self requestContext request on: arg1.        self renderLabel: 'Response:' value: self requestContext response on: arg1.        self renderRequestHandlersOn: arg1.        self renderPropertiesOn: arg1 ]-=JUAMPI=-renderConfigurationOn: arg1  arg1 form: [ arg1 paragraph: [ self renderTypeOn: arg1.              arg1 space.              self renderStartOn: arg1.              arg1 space.              self renderReversedOn: arg1.              arg1 space.              arg1 submitButton ] ]-=JUAMPI=-hash  ^self host hash bitXor: self path hash-=JUAMPI=-stream  ^contentsStream-=JUAMPI=-unableToResumeResponse  | tmp1 |  tmp1 := WAHtmlCanvas builder     fullDocument: true;     rootBlock: [:arg1 |  arg1 title: 'Unable to proceed' ];     render: [:arg2 |  arg2 heading           level1;           with: 'Unable to proceed - hit the back button, and try again'.        arg2 paragraph: 'Some exceptions cannot be resumed. You will usually see this page if you hit Proceed while debugging one of these exceptions. Your request was aborted but you can retry it by refreshing the page.' ].  self requestContext respond: [:arg3 |  arg3           internalError;           contentType: self application contentType;           nextPutAll: tmp1 ]-=JUAMPI=-cellspacing: arg1  self attributes at: 'cellspacing' put: arg1-=JUAMPI=-testHandleFileRequest  | tmp1 |  self requestContextWithUrl: '/root/files/WATestingFiles/sample.js'.  self requestContext consumer     next;     next.  tmp1 := self responseAfter: [ handler handle: self requestContext ].  self assert: tmp1 status = 200.  self assert: tmp1 contentType main = 'application'.  self assert: tmp1 contentType sub = 'javascript'.  self assert: tmp1 contents = WATestingFiles new sampleJs-=JUAMPI=-utf16beString  ^self asString: #(0 220 0 98 0 232 0 114 0 115 0 116 0 114 0 238 0 241 0 103 0 233)-=JUAMPI=-stringForValue: arg1  ^arg1 isNil ifFalse: [ arg1 greaseString ]-=JUAMPI=-testEncodedXmlUnicde  | tmp1 tmp2 tmp3 tmp4 |  tmp1 := Character codePoint: 16r2028.  tmp2 := Character codePoint: 16r2028.  tmp2 := Character codePoint: 16r2028.  tmp3 := Character codePoint: 16r2603.  tmp4 := (String with: tmp1) , (String with: tmp2) , (String with: tmp3).  self assert: tmp4 xmlEncodedGives: tmp4-=JUAMPI=-preferenceAt: arg1  ^self configuration at: arg1-=JUAMPI=-builder  ^super builder     resourceUrl: (WAUrl absolute: self resourceBaseUrl);     yourself-=JUAMPI=-batchSize: arg1  batcher batchSize: arg1-=JUAMPI=-updateRoot: arg1  super updateRoot: arg1.  arg1 stylesheet url: WAExamplesLibrary / #todoCss.  arg1 javascript url: JQDeploymentLibrary / #jQueryJs-=JUAMPI=-childrenOf: arg1  | tmp1 |  tmp1 := self childrenBlock value: arg1.  ^tmp1 ifNil: [ Array new ]-=JUAMPI=-testAddAllFilesIn  | tmp1 tmp2 tmp3 |  tmp1 := FileSystem disk workingDirectory.  tmp1 = FileSystem root ifTrue: [ tmp1 := FileLocator imageDirectory ].  tmp2 := tmp1 / 'XXXUsedBySeasideTests'.  GRPlatform current ensureExistenceOfFolder: tmp2 pathString.  [ [ (tmp2 / '.Seaside_Store') ensureCreateFile.  (tmp2 / 'foo') ensureCreateFile.  GRPlatform current doSilently: [ tmp3 := WAFileLibrary subclass: #XXXTestFileLibrary instanceVariableNames: '' classVariableNames: '' poolDictionaries: '' category: 'Uncategorized'.        [ tmp3 addAllFilesIn: tmp2 fullName.        self assert: tmp3 selectors size = 1 ] ensure: [ tmp3 removeFromSystem ] ] ] ensure: [ tmp2 children do: [:arg1 |  arg1 delete ] ] ] ensure: [ tmp2 delete ]-=JUAMPI=-removeAll: arg1 from: arg2  ^arg2 reject: [:arg3 |  arg1 includes: arg3 ]-=JUAMPI=-parseProperty  | tmp1 tmp2 |  tmp1 := self parseString.  self expectChar: $:.  tmp2 := self parseValue.  ^self createProperty: tmp1 with: tmp2-=JUAMPI=-nextId  ^lastId := 'id' , self callbacks advanceKey-=JUAMPI=-testSettingRegularPath  | tmp1 |  tmp1 := WACookie new     key: 'name';     value: 'homer';     path: '/springfield/powerplant';     yourself.  self assert: tmp1 path equals: '/springfield/powerplant'.  self assert: tmp1 pathUnencoded equals: '/springfield/powerplant'.  self assert: tmp1 pathEncoded equals: '/springfield/powerplant'-=JUAMPI=-onVolumeChange: arg1  self document scriptGenerator event: 'volumechange' do: arg1 on: self-=JUAMPI=-testRefreshAfterLocation  self response refreshAfter: 3 seconds location: 'http://www.seaside.st/'.  self assertLines: #('HTTP/1.1 200 OK' 'Refresh: 3; http://www.seaside.st/' 'Content-Length: 0' '')-=JUAMPI=-openOn: arg1  super openOn: arg1.  self writePreambleOn: arg1-=JUAMPI=-month  ^month-=JUAMPI=-renderConfigurationOn: arg1  self subclassResponsibility-=JUAMPI=-addCc: arg1  ^self cc add: arg1-=JUAMPI=-pathStringSafeUnencoded  | tmp1 |  tmp1 := WriteStream on: (String new: self pathStringUnencodedSize).  self pathUnencodedOn: tmp1.  ^tmp1 contents-=JUAMPI=-keyFromContext: arg1  self subclassResponsibility-=JUAMPI=-renderGroup: arg1 named: arg2 on: arg3  arg3 div     class: 'group';     with: [ arg3 div           class: 'groupTitle';           with: [ arg3 label: arg2.              self renderActionsOn: arg3 ].        self collapsed ifFalse: [ self showHelp ifTrue: [ arg3 div                       class: 'help';                       with: [ arg3 code: (self class helpTextFor: group) ] ] ifFalse: [ arg3 div                       class: 'groupContent';                       with: arg1 ] ] ]-=JUAMPI=-renderButtonsOn: arg1  arg1 paragraph: [ dialog ifTrue: [ arg1 submitButton on: #ok of: self ].        arg1 submitButton on: #apply of: self.        arg1 cancelButton on: #cancel of: self ]-=JUAMPI=-isServerRunning  ^self serverInstance isRunning-=JUAMPI=-testDeleteSessionCookieDomain  | tmp1 tmp2 tmp3 tmp4 |  tmp2 := self requestWithMethod: 'GET'.  tmp2 setCookies: (Array with: (WARequestCookie key: '_s' value: 'goner')).  tmp3 := WABufferedResponse new.  tmp1 := WARequestContext request: tmp2 response: tmp3.  [ handler handle: tmp1 ] on: WAResponseNotification do: [:arg1 |   ].  self assert: tmp3 status = 302.  self assert: tmp3 cookies size = 1.  tmp4 := tmp3 cookies first.  self assert: tmp4 domain = 'www.seaside.st'-=JUAMPI=-attributeAt: arg1 ifAbsent: arg2  ^self allAttributes at: arg1 ifAbsent: arg2-=JUAMPI=-flush  -=JUAMPI=-classesWithManyInstances  ^Array streamContents: [:arg1 |  Smalltalk globals keysAndValuesDo: [:arg2 :arg3 |  ((arg3 isKindOf: Class) and: [ arg2 == arg3 name ]) ifTrue: [ | tmp1 |                    tmp1 := Smalltalk globals at: arg2.                    (self shouldConsider: tmp1) ifTrue: [ arg1 nextPut: tmp1 ] ] ] ]-=JUAMPI=-testUrlOf  self assert: (WATestingFiles / #samplePng) greaseString = '/files/WATestingFiles/sample.png'-=JUAMPI=-request: arg1 label: arg2  ^self wait: [:arg3 |  self request: arg1 label: arg2 onAnswer: arg3 ]-=JUAMPI=-tableData  ^self brush: WATableDataTag new-=JUAMPI=-browserSessionIDCookieKey  ^'seaside_browser_session'-=JUAMPI=-size  ^dictionary size-=JUAMPI=-ensureId  ^self attributes at: 'id' ifAbsentPut: [ canvas nextId ]-=JUAMPI=-buildDescription  | tmp1 |  tmp1 := WAConfigurationDescription new.  self describeOn: tmp1.  ^description := tmp1-=JUAMPI=-renderContentOn: arg1  self renderExplanationOn: arg1.  self renderLinksOn: arg1-=JUAMPI=-document  ^document-=JUAMPI=-nextPutAll: arg1  self subclassResponsibility-=JUAMPI=-actionUrl  ^actionUrl-=JUAMPI=-testLanguageName  | tmp1 |  tmp1 := WALocale fromString: 'de'.  self assert: tmp1 languageName = 'German'.  tmp1 := WALocale fromString: 'gsw'.  self assert: tmp1 languageName = 'Swiss German; Alemannic; Alsatian'-=JUAMPI=-cookies  ^self requestContext request cookies-=JUAMPI=-testTakeServerParametersFromRequestBase  | tmp1 |  tmp1 := (WARequest method: 'GET' uri: (WAUrl new           scheme: 'https';           yourself))     setHeaders: (Dictionary new           at: 'host' put: 'www.thehost.com:1337';           yourself);     yourself.  url takeServerParametersFromRequest: tmp1.  self assert: url greaseString = 'https://www.thehost.com:1337/'-=JUAMPI=-renderRow: arg1 index: arg2 on: arg3  self renderHeadingForRow: arg1 on: arg3.  self datesDo: [:arg4 |  self renderCellForDate: arg4 row: arg1 index: arg2 on: arg3 ] separatedBy: [ self renderHeadingSpacerOn: arg3 ]-=JUAMPI=-handleFiltered: arg1  arg1 request isPrefetch ifTrue: [ self handlePrefetch: arg1 ] ifFalse: [ (self isImplemented: arg1 request method) ifTrue: [ super handleFiltered: arg1 ] ifFalse: [ arg1 responseGenerator                 notImplemented;                 respond ] ]-=JUAMPI=-testWithoutValue  self should: [ WACurrentRequestContext value ] raise: WARequestContextNotFound-=JUAMPI=-addHaloVisitor: arg1  visitor := visitor addHaloVisitor: arg1-=JUAMPI=-<= arg1  ^self = arg1 or: [ self < arg1 ]-=JUAMPI=-renderContentOn: arg1  arg1 table     cellspacing: 0;     cellpadding: 0;     style: 'width: 100%';     with: [ arg1 tableRow: [ arg1 tableData                 verticalAlign: 'top';                 style: 'padding: 4px; width: 250px;';                 with: [ self renderDispatcherOn: arg1 ].              arg1 tableData                 verticalAlign: 'top';                 style: 'padding: 4px';                 with: [ self renderEditorOn: arg1 ] ] ]-=JUAMPI=-next  ^path removeFirst-=JUAMPI=-testNoFieldCookieHandlerPresent  | tmp1 tmp2 tmp3 |  registry := self createRegistryWithCookiesEnabled.  tmp3 := self registerNewHandler.  tmp2 := self createRequestContextWithFieldKey: nil cookieKey: tmp3.  tmp1 := self dispatch: tmp2 to: registry.  self assertNoCookies: tmp1.  self assertDispatched: tmp1-=JUAMPI=-handle: arg1  arg1 push: self during: [ self filter handleFiltered: arg1 ]-=JUAMPI=-addCallback  self hasCallback ifFalse: [ canvas flush.        ^self ].  canvas hiddenInput     callback: [ callbackBlock value: self setValueWithNewTime ];     with: nil-=JUAMPI=-index: arg1  valueBlock := [:arg2 |  arg2 at: arg1 ]-=JUAMPI=-absoluteExamples  ^#('http://www.seaside.st/' 'http://www.seaside.st:8080/' 'http://lukas@www.seaside.st/' 'http://lukas:renggli@www.seaside.st/' 'http://www.seaside.st/resources' 'http://www.seaside.st/styles/favicon.png' 'http://www.seaside.st/%24%26%2B%2C%2F%3A%3B%3D%3F%40' 'http://www.seaside.st/#top' 'http://www.seaside.st/styles#top' 'http://www.seaside.st/about/screenshots?_c' 'http://www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn' 'http://www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ' 'http://www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ&_n&47' 'http://www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ&_n&47#149361951' 'http://www.seaside.st/;jsessionid=42?redirectcounter=1' 'http://www.seaside.st/seaside/files;old/WAStandardFiles;key1=value1,value3;key2=value2/seaside.jpg;jsessionid=42?redirectcounter=1' 'http://www.seaside.st/seaside/WAStandardFiles;session%3Aid=42?redirectcounter=1' 'http://lukas:renggli@www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ&_n&47#149361951' 'http://lukas:renggli@www.seaside.st:8080/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ&_n&47#149361951')-=JUAMPI=-states  ^Array with: self-=JUAMPI=-at: arg1 put: arg2  | tmp1 tmp2 |  tmp1 := false.  tmp2 := WABulkReapingCacheEntry value: arg2.  dictionary at: arg1 ifAbsentPut: [ tmp1 := true.        tmp2 ].  tmp1 ifTrue: [ ^arg2 ].  dictionary at: arg1 put: tmp2.  ^arg2-=JUAMPI=-requestFor: arg1  ^(WARequest method: (self requestMethodFor: arg1) uri: (self requestUrlFor: arg1) version: (self requestVersionFor: arg1))     setHeaders: (self requestHeadersFor: arg1);     setBody: (self requestBodyFor: arg1);     setPostFields: (self requestFieldsFor: arg1);     setCookies: (self requestCookiesFor: arg1);     setRemoteAddress: (self requestAddressFor: arg1);     setSslSessionId: (self sslSessionIdFor: arg1);     yourself-=JUAMPI=-children  ^Array with: navigation-=JUAMPI=-testForm  | tmp1 tmp2 |  self formClassExists ifFalse: [ ^self ].  tmp1 := WADocumentHandler document: self sampleForm mimeType: self sampleForm defaultMimeType fileName: nil.  tmp2 := WARequestContext request: WARequest new response: WABufferedResponse new.  [ tmp1 handle: tmp2 ] on: WAResponseNotification do: [:arg1 |   ].  self assert: tmp2 response notNil-=JUAMPI=-initializeOn: arg1  super initializeOn: arg1.  contentsStream := arg1-=JUAMPI=-inlineWithFileName: arg1  arg1 notNil ifTrue: [ self headerAt: 'Content-Disposition' put: 'inline; filename="' , arg1 greaseString , '"' ]-=JUAMPI=-testAddKeyOfSessionToUrlCookieAlreadyPresent  | tmp1 tmp2 tmp3 |  tmp1 := self requestContext.  tmp3 := WARequestCookie key: strategy keyCookieName value: 'The_Metaphor'.  tmp1 request setCookies: (Array with: tmp3).  tmp2 := tmp1 request uri copy.  strategy addKey: 'The_Metaphor' toUrl: tmp2.  self assert: tmp2 greaseString = '/1/2'-=JUAMPI=-startRow  ^rowSelectionStart min: rowSelectionEnd-=JUAMPI=-postCopy  super postCopy.  expressions := expressions copy.  parents := parents copy-=JUAMPI=-newHandler  ^WARegistry new-=JUAMPI=-verifyRequest: arg1  ^self authenticator verifyPassword: arg1 password forUser: arg1 user-=JUAMPI=-addKey: arg1 toContext: arg2  ^(self strategyFor: arg2) addKey: arg1 toContext: arg2-=JUAMPI=-removeExpressionAt: arg1  ^self removeExpressionAt: arg1 ifAbsent: [ nil ]-=JUAMPI=-jumpToAnchor: arg1  | tmp1 |  tmp1 := self requestContext handlers detect: [:arg2 |  arg2 isActionContinuation ] ifNone: [ WAIllegalStateException signal: 'You can only send #jumpToAnchor: from within a callback' ].  tmp1 jumpToAnchor: arg1-=JUAMPI=-testExpirePrinting  | tmp1 |  tmp1 := WACookie key: 'foo' value: 'bar'.  tmp1 expiry: (DateAndTime year: 2003 day: 4 hour: 5 minute: 6 second: 7 offset: Duration zero).  self assert: tmp1 rfc6265String = 'foo=bar; expires=Sat, 04-Jan-2003 05:06:07 GMT; path=/'-=JUAMPI=-setUp  handler := WALegacyRedirectionHandler new-=JUAMPI=-realm  ^realm ifNil: [ realm := 'Seaside' ]-=JUAMPI=-deployFiles  GRPlatform current ensureExistenceOfFolder: self name.  self fileSelectors do: [:arg1 |  | tmp1 |        tmp1 := self asFileAndFoldername: arg1.        GRPlatform current ensureExistenceOfFolder: tmp1 first.        GRPlatform current write: (self fileResourceOf: arg1) contents value toFile: tmp1 second inFolder: tmp1 first ]-=JUAMPI=-onSelect: arg1  self document scriptGenerator event: 'select' do: arg1 on: self-=JUAMPI=-addXmlNamespaces  self htmlAttributes     at: 'xmlns' put: 'http://www.w3.org/1999/xhtml';     at: 'xml:lang' put: 'en';     at: 'lang' put: 'en'-=JUAMPI=-summary  ^self tag: 'summary'-=JUAMPI=-context  ^context-=JUAMPI=-visitPainter: arg1  arg1 updateRoot: self root-=JUAMPI=-value: arg1  value := arg1-=JUAMPI=-libraries  ^(self preferenceAt: #libraries) collect: [:arg1 |  arg1 value ]-=JUAMPI=-handleFiltered: arg1  self responseForContext: arg1-=JUAMPI=-delay  ^delay ifNil: [ 1 ]-=JUAMPI=-createRequest  ^WARequest new-=JUAMPI=-maximumRelativeAge: arg1  maximumRelativeAge := arg1 asUnsignedInteger-=JUAMPI=-valueForField: arg1  ^arg1-=JUAMPI=-children  ^super children copyWith: cacheEditor-=JUAMPI=-allPresentersDo: arg1  (WAAllPresenterGuide client: (WAPluggablePresenterVisitor block: arg1)) start: self-=JUAMPI=-low: arg1  self attributeAt: 'low' put: arg1-=JUAMPI=-initialize  super initialize.  ipStrategy := WAIPSessionTrackingStrategy new.  cookieStrategy := WACookieOnlySessionTrackingStrategy new-=JUAMPI=-initialize  super initialize.  self     rows: 'auto';     columns: 'auto'-=JUAMPI=-dateAndTime: arg1  dateSelector date: arg1 asDate.  timeSelector time: arg1 asTime-=JUAMPI=-subscript  ^self tag: 'sub'-=JUAMPI=-destroy  self shouldDestroy ifTrue: [ self request destroy.        self response destroy.        handlers := request := response := codec := properties := nil ]-=JUAMPI=-defaultConfiguration  ^WAUserConfiguration new     addParent: WARequestHandlingConfiguration instance;     yourself-=JUAMPI=-type  ^'range'-=JUAMPI=-renderRow: arg1 named: arg2 on: arg3  arg3 tableRow: [ arg3 tableData: [ self renderRowName: arg1 named: arg2 on: arg3 ].        arg3 tableData: [ self renderRowDescription: arg1 on: arg3 ] ]-=JUAMPI=-resume: arg1  self open: arg1.  ^self basicResume: arg1-=JUAMPI=-canStop: arg1  ^arg1 isStopped not-=JUAMPI=-renderContext  ^WARenderContext new     actionUrl: WAUrl new;     document: (WAHtmlDocument on: (WriteStream on: String new));     yourself-=JUAMPI=-initialRequest: arg1  super initialRequest: arg1.  self requestContext consumer nextIfPresentDo: [:arg2 |  classes do: [:arg3 |  arg3 name greaseString = arg2 ifTrue: [ self selected: arg3 ] ] ]-=JUAMPI=-deleteCookieAt: arg1  self deleteCookie: (WACookie key: arg1 value: '')-=JUAMPI=-startDate: arg1  self clearSelection.  super startDate: arg1-=JUAMPI=-renderSpacerRowOn: arg1  arg1 div     class: 'dialog-spacer';     with: [ arg1 space ]-=JUAMPI=-attributes: arg1  attributes := arg1-=JUAMPI=-canSelect: arg1  ^canSelectBlock value: arg1-=JUAMPI=-lineBreakOpportunity: arg1  self lineBreakOpportunity with: arg1-=JUAMPI=-gone  self status: WAResponse statusGone-=JUAMPI=-initialize  super initialize.  self urlencoded: 'urlencoded'.  self multipart: 'multipart'.  self get: 'get'-=JUAMPI=-setHeaders: arg1  headers := arg1-=JUAMPI=-valueWithArguments: arg1  arg1 size = 1 ifFalse: [ ^GRInvalidArgumentCount signal: 'Continuations can only be resumed with one argument.' ].  self value: arg1 first-=JUAMPI=-beSubmit  type := 'submit'-=JUAMPI=-priority  ^200-=JUAMPI=-pathElementsIn: arg1 do: arg2  GRPlatform subStringsIn: arg1 splitBy: $/ do: arg2-=JUAMPI=-lastId  ^lastId-=JUAMPI=-clear  dictionary do: [:arg1 |  self cacheEntryRemoved: arg1 value ].  dictionary removeAll-=JUAMPI=-initializeWithUrl: arg1  self initialize.  url := arg1-=JUAMPI=-serverPort: arg1  self preferenceAt: #serverPort put: arg1-=JUAMPI=-initialize  super initialize.  self altText: ''-=JUAMPI=-memorySvg  ^'<?xml version="1.0" encoding="UTF-8" standalone="no"?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg   xmlns:dc="http://purl.org/dc/elements/1.1/"   xmlns:cc="http://creativecommons.org/ns#"   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"   xmlns:svg="http://www.w3.org/2000/svg"   xmlns="http://www.w3.org/2000/svg"   xmlns:xlink="http://www.w3.org/1999/xlink"   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"   width="48px"   height="48px"   id="svg1306"   sodipodi:version="0.32"   inkscape:version="0.46"   sodipodi:docbase="/home/jimmac/src/cvs/tango-icon-theme/scalable/apps"   sodipodi:docname="utilities-system-monitor.svg"   inkscape:output_extension="org.inkscape.output.svg.inkscape">  <defs     id="defs1308">    <inkscape:perspective       sodipodi:type="inkscape:persp3d"       inkscape:vp_x="0 : 24 : 1"       inkscape:vp_y="0 : 1000 : 0"       inkscape:vp_z="48 : 24 : 1"       inkscape:persp3d-origin="24 : 16 : 1"       id="perspective69" />    <radialGradient       inkscape:collect="always"       xlink:href="#linearGradient5060"       id="radialGradient5031"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(-2.774389,0,0,1.969706,112.7623,-872.8854)"       cx="605.71429"       cy="486.64789"       fx="605.71429"       fy="486.64789"       r="117.14286" />    <linearGradient       inkscape:collect="always"       id="linearGradient5060">      <stop         style="stop-color:black;stop-opacity:1;"         offset="0"         id="stop5062" />      <stop         style="stop-color:black;stop-opacity:0;"         offset="1"         id="stop5064" />    </linearGradient>    <radialGradient       inkscape:collect="always"       xlink:href="#linearGradient5060"       id="radialGradient5029"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(2.774389,0,0,1.969706,-1891.633,-872.8854)"       cx="605.71429"       cy="486.64789"       fx="605.71429"       fy="486.64789"       r="117.14286" />    <linearGradient       id="linearGradient5048">      <stop         style="stop-color:black;stop-opacity:0;"         offset="0"         id="stop5050" />      <stop         id="stop5056"         offset="0.5"         style="stop-color:black;stop-opacity:1;" />      <stop         style="stop-color:black;stop-opacity:0;"         offset="1"         id="stop5052" />    </linearGradient>    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient5048"       id="linearGradient5027"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(2.774389,0,0,1.969706,-1892.179,-872.8854)"       x1="302.85715"       y1="366.64789"       x2="302.85715"       y2="609.50507" />    <linearGradient       inkscape:collect="always"       id="linearGradient2223">      <stop         style="stop-color:#ffffff;stop-opacity:1;"         offset="0"         id="stop2225" />      <stop         style="stop-color:#ffffff;stop-opacity:0;"         offset="1"         id="stop2229" />    </linearGradient>    <linearGradient       id="linearGradient2222">      <stop         style="stop-color:#5187d6;stop-opacity:1;"         offset="0"         id="stop2224" />      <stop         style="stop-color:#1e4580;stop-opacity:1;"         offset="1"         id="stop2227" />    </linearGradient>    <linearGradient       id="linearGradient3090">      <stop         style="stop-color:#626c07;stop-opacity:1;"         offset="0"         id="stop3092" />      <stop         style="stop-color:#313603;stop-opacity:1;"         offset="1"         id="stop3094" />    </linearGradient>    <linearGradient       inkscape:collect="always"       id="linearGradient2238">      <stop         style="stop-color:#ffffff;stop-opacity:1;"         offset="0"         id="stop2240" />      <stop         style="stop-color:#ffffff;stop-opacity:0;"         offset="1"         id="stop2242" />    </linearGradient>    <linearGradient       id="linearGradient2224">      <stop         style="stop-color:#32342f;stop-opacity:0.54639173;"         offset="0.0000000"         id="stop2226" />      <stop         style="stop-color:#32342f;stop-opacity:0;"         offset="1"         id="stop2228" />    </linearGradient>    <linearGradient       id="linearGradient2214">      <stop         style="stop-color:#a9aaa7;stop-opacity:1.0000000;"         offset="0.0000000"         id="stop2216" />      <stop         style="stop-color:#676964;stop-opacity:1.0000000;"         offset="1.0000000"         id="stop2218" />    </linearGradient>    <linearGradient       id="linearGradient2206">      <stop         style="stop-color:#c3c6c0;stop-opacity:1.0000000;"         offset="0.0000000"         id="stop2208" />      <stop         style="stop-color:#e8eae6;stop-opacity:1.0000000;"         offset="1.0000000"         id="stop2210" />    </linearGradient>    <linearGradient       id="linearGradient2198">      <stop         style="stop-color:#32342f;stop-opacity:1;"         offset="0"         id="stop2200" />      <stop         style="stop-color:#171816;stop-opacity:1.0000000;"         offset="1.0000000"         id="stop2202" />    </linearGradient>    <linearGradient       inkscape:collect="always"       id="linearGradient2180">      <stop         style="stop-color:#ffffff;stop-opacity:1;"         offset="0"         id="stop2182" />      <stop         style="stop-color:#ffffff;stop-opacity:0;"         offset="1"         id="stop2184" />    </linearGradient>    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2206"       id="linearGradient2212"       x1="25.861118"       y1="26.133587"       x2="18.300278"       y2="19.567596"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(0.952387,0.000000,0.000000,1.018339,1.142599,-1.941627)" />    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2214"       id="linearGradient2220"       x1="0.0012142062"       y1="24.012266"       x2="47.998765"       y2="24.012266"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(0.952387,0.000000,0.000000,1.018339,1.142599,-1.941627)" />    <radialGradient       inkscape:collect="always"       xlink:href="#linearGradient2224"       id="radialGradient2230"       cx="24.041630"       cy="42.242130"       fx="24.041630"       fy="42.242130"       r="17.576654"       gradientTransform="matrix(1.000000,0.000000,0.000000,0.304598,-5.757924e-16,29.37527)"       gradientUnits="userSpaceOnUse" />    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2238"       id="linearGradient2244"       x1="20.338758"       y1="19.636894"       x2="46.092255"       y2="39.708324"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(0.952387,0.000000,0.000000,1.015657,1.142599,-0.876325)" />    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2180"       id="linearGradient1340"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(3.809547,0.000000,0.000000,1.750325,-16.00036,-15.78719)"       x1="8.8207808"       y1="12.53757"       x2="12.499243"       y2="24.238262" />    <radialGradient       inkscape:collect="always"       xlink:href="#linearGradient2222"       id="radialGradient2229"       cx="23.994133"       cy="32.266911"       fx="23.994133"       fy="32.266911"       r="19.088932"       gradientTransform="matrix(1.768625,-1.961257e-23,1.552064e-23,1.387102,-18.44248,-15.29268)"       gradientUnits="userSpaceOnUse" />    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2223"       id="linearGradient2231"       x1="35.694206"       y1="37.333858"       x2="15.044075"       y2="5.9588566"       gradientUnits="userSpaceOnUse" />  </defs>  <sodipodi:namedview     id="base"     pagecolor="#ffffff"     bordercolor="#666666"     borderopacity="0.25490196"     inkscape:pageopacity="0.0"     inkscape:pageshadow="2"     inkscape:zoom="1"     inkscape:cx="-105.4283"     inkscape:cy="21.335249"     inkscape:current-layer="layer1"     showgrid="false"     inkscape:grid-bbox="true"     inkscape:document-units="px"     inkscape:window-width="1064"     inkscape:window-height="782"     inkscape:window-x="370"     inkscape:window-y="66"     inkscape:showpageshadow="false"     fill="#204a87" />  <metadata     id="metadata1311">    <rdf:RDF>      <cc:Work         rdf:about="">        <dc:format>image/svg+xml</dc:format>        <dc:type           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />        <dc:title>System Monitor</dc:title>        <dc:date>2005-10-10</dc:date>        <dc:creator>          <cc:Agent>            <dc:title>Andreas Nilsson</dc:title>          </cc:Agent>        </dc:creator>        <dc:subject>          <rdf:Bag>            <rdf:li>system</rdf:li>            <rdf:li>monitor</rdf:li>            <rdf:li>performance</rdf:li>          </rdf:Bag>        </dc:subject>        <cc:license           rdf:resource="http://creativecommons.org/licenses/publicdomain/" />        <dc:contributor>          <cc:Agent>            <dc:title>Jakub Steiner</dc:title>          </cc:Agent>        </dc:contributor>      </cc:Work>      <cc:License         rdf:about="http://creativecommons.org/licenses/publicdomain/">        <cc:permits           rdf:resource="http://creativecommons.org/ns#Reproduction" />        <cc:permits           rdf:resource="http://creativecommons.org/ns#Distribution" />        <cc:permits           rdf:resource="http://creativecommons.org/ns#DerivativeWorks" />      </cc:License>    </rdf:RDF>  </metadata>  <g     id="layer1"     inkscape:label="Layer 1"     inkscape:groupmode="layer">    <g       id="g5022"       transform="matrix(2.454499e-2,0,0,2.086758e-2,45.89369,40.09109)">      <rect         y="-150.69685"         x="-1559.2523"         height="478.35718"         width="1339.6335"         id="rect4173"         style="opacity:0.40206185;color:black;fill:url(#linearGradient5027);fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible" />      <path         sodipodi:nodetypes="cccc"         id="path5058"         d="M -219.61876,-150.68038 C -219.61876,-150.68038 -219.61876,327.65041 -219.61876,327.65041 C -76.744594,328.55086 125.78146,220.48075 125.78138,88.454235 C 125.78138,-43.572302 -33.655436,-150.68036 -219.61876,-150.68038 z "         style="opacity:0.40206185;color:black;fill:url(#radialGradient5029);fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible" />      <path         style="opacity:0.40206185;color:black;fill:url(#radialGradient5031);fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"         d="M -1559.2523,-150.68038 C -1559.2523,-150.68038 -1559.2523,327.65041 -1559.2523,327.65041 C -1702.1265,328.55086 -1904.6525,220.48075 -1904.6525,88.454235 C -1904.6525,-43.572302 -1745.2157,-150.68036 -1559.2523,-150.68038 z "         id="path5018"         sodipodi:nodetypes="cccc" />    </g>    <rect       style="opacity:1;fill:url(#linearGradient2212);fill-opacity:1;fill-rule:evenodd;stroke:url(#linearGradient2220);stroke-width:0.9999997;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"       id="rect1316"       width="44.759838"       height="41.701817"       x="1.6199486"       y="1.6600797"       rx="4.5659914"       ry="4.5659928" />    <rect       style="opacity:1;fill:url(#radialGradient2229);fill-opacity:1;fill-rule:evenodd;stroke:#173562;stroke-width:0.99999982;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"       id="rect1314"       width="37.177864"       height="28.954594"       x="5.4052019"       y="5.4815545"       rx="1.6946707"       ry="1.694671" />    <path       style="opacity:1;fill:#ecffd9;fill-opacity:1;fill-rule:evenodd;stroke:#c3ea9b;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:0.41618497"       d="M 12.390689,20.935247 L 6.3688614,20.935247 L 6.3688614,22.152253 L 14.087646,22.152253 L 15.493568,16.239132 L 18.956082,29.936652 L 22.164804,19.116952 L 25.059348,25.028755 L 28.946308,21.516786 L 41.654736,21.516786 L 41.654736,19.457141 L 28.505235,19.457141 L 25.335019,22.596741 L 22.059557,15.937588 L 19.049723,24.112486 L 15.78119,11.248712 L 12.390689,20.935247 z "       id="path2188"       sodipodi:nodetypes="ccccccccccccccccc" />    <rect       style="opacity:1;fill:none;fill-opacity:1;fill-rule:evenodd;stroke:url(#linearGradient2244);stroke-width:0.99999982;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"       id="rect2232"       width="42.894741"       height="39.646549"       x="2.553669"       y="2.6544337"       rx="4.1303334"       ry="4.1303344" />    <path       sodipodi:nodetypes="ccccccccccccccccc"       id="path3088"       d="M 11.515689,20.012278 L 6.3688614,20.012278 L 6.3688614,23.061029 L 14.962646,22.936029 L 15.618568,19.893387 L 18.963229,32.601726 L 22.539804,21.135091 L 25.059348,26.551191 L 29.321308,22.442609 L 41.654736,22.317609 L 40.904736,18.408071 L 28.505235,18.283071 L 25.460019,21.456026 L 22.059557,13.665616 L 19.424723,20.604266 L 15.90619,8.333659 L 11.515689,20.012278 z "       style="opacity:0.38068183;fill:#ecffd9;fill-opacity:1;fill-rule:evenodd;stroke:#c3ea9b;stroke-width:1.00000036;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.41618497" />    <path       style="opacity:0.43181817;fill:url(#linearGradient1340);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"       d="M 6.84375,6.96875 L 6.84375,15.795073 C 10.513653,16.483179 14.582567,16.875 18.875,16.875 C 27.810295,16.875 35.812258,15.21019 41.15625,12.596829 L 41.15625,6.96875 L 6.84375,6.96875 z "       id="rect2178"       sodipodi:nodetypes="ccsccc" />    <g       id="g3126"       style="opacity:0.07954544;fill:#000000;fill-opacity:1;stroke:#000000;stroke-opacity:1"       transform="translate(0.187500,0.687500)">      <path         style="opacity:1;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"         d="M 39.125,37.8125 L 38.0625,37.34375 C 37.805688,37.204184 37.500156,37.125 37.1875,37.125 C 36.187,37.125 35.375,37.937 35.375,38.9375 C 35.375,39.938 36.187,40.75 37.1875,40.75 C 38.156734,40.75 38.951426,39.988481 39,39.03125 C 39.000392,39.02353 38.999705,39.007745 39,39 L 39.125,37.8125 z "         id="path3120"         sodipodi:nodetypes="ccsssscc" />      <path         sodipodi:nodetypes="ccsssscc"         id="path3122"         d="M 28.992526,37.544659 L 28.893139,38.709836 C 28.855813,38.999729 28.892396,39.313228 29.005385,39.604754 C 29.366952,40.537636 30.417519,41.001313 31.350402,40.639747 C 32.283284,40.27818 32.746961,39.227613 32.385394,38.29473 C 32.035127,37.391001 31.037884,36.925219 30.127792,37.225858 C 30.120452,37.228282 30.105982,37.234627 30.098654,37.237151 L 28.992526,37.544659 z "         style="opacity:1;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible" />      <path         style="opacity:1;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"         d="M 25.5,37.8125 L 24.5625,37.34375 C 24.305688,37.204184 24.000156,37.125 23.6875,37.125 C 22.687,37.125 21.875,37.937 21.875,38.9375 C 21.875,39.938 22.687,40.75 23.6875,40.75 C 24.656734,40.75 25.451426,39.988481 25.5,39.03125 C 25.500392,39.02353 25.499705,39.007745 25.5,39 L 25.5,37.8125 z "         id="path3124"         sodipodi:nodetypes="ccsssscc" />    </g>    <path       style="opacity:1;color:#000000;fill:#e0e2df;fill-opacity:1;fill-rule:nonzero;stroke:#9b9d99;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"       d="M 39.125,37.8125 L 38.0625,37.34375 C 37.805688,37.204184 37.500156,37.125 37.1875,37.125 C 36.187,37.125 35.375,37.937 35.375,38.9375 C 35.375,39.938 36.187,40.75 37.1875,40.75 C 38.156734,40.75 38.951426,39.988481 39,39.03125 C 39.000392,39.02353 38.999705,39.007745 39,39 L 39.125,37.8125 z "       id="path3111"       sodipodi:nodetypes="ccsssscc" />    <path       sodipodi:nodetypes="ccsssscc"       id="path3116"       d="M 28.992526,37.544659 L 28.893139,38.709836 C 28.855813,38.999729 28.892396,39.313228 29.005385,39.604754 C 29.366952,40.537636 30.417519,41.001313 31.350402,40.639747 C 32.283284,40.27818 32.746961,39.227613 32.385394,38.29473 C 32.035127,37.391001 31.037884,36.925219 30.127792,37.225858 C 30.120452,37.228282 30.105982,37.234627 30.098654,37.237151 L 28.992526,37.544659 z "       style="opacity:1;color:#000000;fill:#e0e2df;fill-opacity:1;fill-rule:nonzero;stroke:#9b9d99;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible" />    <path       style="opacity:1;color:#000000;fill:#e0e2df;fill-opacity:1;fill-rule:nonzero;stroke:#9b9d99;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"       d="M 25.5,37.8125 L 24.5625,37.34375 C 24.305688,37.204184 24.000156,37.125 23.6875,37.125 C 22.687,37.125 21.875,37.937 21.875,38.9375 C 21.875,39.938 22.687,40.75 23.6875,40.75 C 24.656734,40.75 25.451426,39.988481 25.5,39.03125 C 25.500392,39.02353 25.499705,39.007745 25.5,39 L 25.5,37.8125 z "       id="path3118"       sodipodi:nodetypes="ccsssscc" />    <rect       ry="2.5696716"       rx="2.5696716"       y="4.635767"       x="4.3192058"       height="30.646179"       width="39.349869"       id="rect2221"       style="opacity:0.57386364;fill:none;fill-opacity:1;fill-rule:evenodd;stroke:url(#linearGradient2231);stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />  </g></svg>'-=JUAMPI=-selectedRemovals  ^(selectionsCurrent select: [:arg1 |  arg1 key = #remove ]) collect: [:arg2 |  arg2 value ]-=JUAMPI=-renderCellForDate: arg1 row: arg2 index: arg3 on: arg4  arg4 tableData: [ arg4 space ]-=JUAMPI=-testHolder  | tmp1 tmp2 tmp3 tmp4 |  tmp1 := WAValueHolder new.  tmp2 := tmp1 snapshotCopy.  tmp1 contents: 1.  tmp3 := tmp1 snapshotCopy.  tmp1 contents: 2.  tmp4 := tmp1 snapshotCopy.  tmp1 restoreFromSnapshot: tmp2.  self assert: tmp1 contents isNil.  tmp1 restoreFromSnapshot: tmp3.  self assert: tmp1 contents equals: 1.  tmp1 restoreFromSnapshot: tmp4.  self assert: tmp1 contents equals: 2-=JUAMPI=-printOn: arg1  super printOn: arg1.  arg1     nextPutAll: ' contents: ';     print: self contents-=JUAMPI=-date  (self privateIsValidDay: day monthNumber: month year: year) ifFalse: [ self error: 'Invalid date' ].  ^self dateClass year: year month: month day: day-=JUAMPI=-allSelectors  ^(class class selectors select: [:arg1 |  arg1 beginsWithSubCollection: self selectorPrefix ]) sorted-=JUAMPI=-sourceSet: arg1  self attributes at: 'srcset' put: arg1-=JUAMPI=-pathParameterAt: arg1 key: arg2 ifAbsent: arg3  ^self privatePathParameterMapAt: arg1 ifPresentDo: [:arg4 |  arg4 at: arg2 ifAbsent: arg3 ] ifAbsent: arg3-=JUAMPI=-potentialFilters  ^WAConfiguredRequestFilter allSubclasses-=JUAMPI=-visitStringAttribute: arg1  self visitAttribute: arg1-=JUAMPI=-initialize  super initialize.  tree := WATree new     root: Collection;     labelBlock: [:arg1 |  arg1 name ];     childrenBlock: [:arg1 |  arg1 subclasses ];     selectBlock: [:arg1 |  selected := arg1 name ];     canSelectBlock: [:arg1 |  arg1 subclasses notEmpty ];     yourself-=JUAMPI=-hash  ^self document hash-=JUAMPI=-makePlainTextAndPerform: arg1  self ifResetPossible: [ | tmp1 tmp2 |        tmp2 := self response.        tmp2 perform: arg1.        tmp1 := WAMimeType textPlain.        tmp1 charset: self requestContext charSet.        tmp2 contentType: tmp1 ]-=JUAMPI=-context  ^context-=JUAMPI=-initialize  super initialize.  expressions := Dictionary new.  parents := OrderedCollection new-=JUAMPI=-testCookieAfterCommit  self response flush.  self should: [ self response addCookie: WACookie new ] raise: WAIllegalStateException-=JUAMPI=-count  ^512-=JUAMPI=-callbacks  ^self context callbacks-=JUAMPI=-testPathEncoding  | tmp1 tmp2 |  tmp1 := WARequestCookie fromString: '$Version="1";                 Customer="WILE_E_COYOTE"; $Path="/%20"' codec: GRNullCodec new.  self assert: tmp1 size = 1.  tmp2 := tmp1 first.  self assert: tmp2 path = '/ '.  self assert: tmp2 pathUnencoded = '/ '.  self assert: tmp2 pathEncoded = '/%20'-=JUAMPI=-renderContentOn: arg1  arg1 header: [ arg1 heading           level1;           with: [ arg1 anchor                 url: 'http://www.elharo.com/blog';                 with: 'Mokka mit Schlag' ] ].  arg1 section: [ arg1 article: [ arg1 heading                 level2;                 with: [ arg1 anchor                       url: '/blog/birding/2007/04/23/spring-comes-and-goes-in-sussex-county/';                       with: 'Spring Comes (and Goes) in Sussex County' ].              arg1 paragraph: 'Yesterday I joined the Brooklyn Bird Club for our annual trip to Western New Jersey, specifically Hyper Humus, a relatively recently discovered hot spot. It started out as a nice winter morning when we arrived at the site at 7:30 A.M., progressed to Spring around 10:00 A.M., and reached early summer by 10:15.' ].        arg1 article: [ arg1 heading                 level2;                 with: [ arg1 anchor                       url: '/blog/birding/2007/04/23/but-does-it-count-for-your-life-list/';                       with: 'But does it count for your life list?' ].              arg1 paragraph: [ arg1 text: 'Seems you can now go '.                    arg1 anchor                       url: 'http://www.wired.com/science/discoveries/news/ 2007/04/cone_sf';                       with: 'bird watching via the Internet'.                    arg1 text: '. I haven''t been able to test it out yet (20 user limit apparently) but this is certainly cool. Personally, I can''t imagine it replacing actually being out in the field by any small amount. On the other hand, I''ve always found it quite sad to meet senior birders who are no longer able to hold binoculars steady or get to the park. I can imagine this might be of some interest to them. At least one elderly birder did a big year on TV, after he could no longer get out so much. This certainly tops that.' ] ] ].  arg1 navigation: [ arg1 anchor           url: '/blog/page/2/';           with: '<< Previous Entries' ].  arg1 navigation: [ arg1 unorderedList: [ arg1 listItem: [ arg1 heading                       level2;                       with: 'Info'.                    arg1 unorderedList: [ arg1 listItem: [ arg1 anchor                                   url: '/blog/comment-policy/';                                   with: 'Comment Policy' ].                          arg1 listItem: [ arg1 anchor                                   url: '/blog/todo-list/';                                   with: 'Todo List' ] ] ].              arg1 listItem: [ arg1 heading                       level2;                       with: 'Archives'.                    arg1 unorderedList: [ arg1 listItem: [ arg1 anchor                                   url: '/blog/2007/04/';                                   with: 'April 2007' ].                          arg1 listItem: [ arg1 anchor                                   url: '/blog/2007/02/';                                   with: 'February 2007' ] ] ].              arg1 listItem: [ arg1 anchor                       url: '/blog/2007/01/';                       with: 'January 2007' ] ] ].  arg1 aside: [ arg1 heading level3 with: '.xf-value'.        arg1 paragraph: [ arg1 text: 'The '.              arg1 code: '.xf-value'.              arg1 text: ' selector used here styles the input field value but not its label. This is actually inconsistent with the current CSS3 draft. The example really should use the '.              arg1 code: '::value'.              arg1 text: 'pseudo-class instead like so:' ].        arg1 preformatted: 'input::value { width: 20em; }#ccnumber::value { width: 18em }#zip::value { width: 12em }#state::value { width: 3em  }'.        arg1 paragraph: 'However, Firefox doesn''t yet support this syntax' ].  arg1 footer: [ arg1 paragraph: 'Copyright 2007 Elliotte Rusty Harold' ]-=JUAMPI=-testNoMarkerOnCall  | tmp1 tmp2 |  tmp1 := false.  tmp2 := false.  self should: [ self callcc: [:arg1 |  tmp1 := true ].        tmp2 := true ] raise: Error.  self deny: tmp1.  self deny: tmp2-=JUAMPI=-writeLoadScriptsOn: arg1  self loadScripts do: [:arg2 |  arg1 stream javascript: arg2.        arg1 nextPut: $; ]-=JUAMPI=-mainJpg  ^#(255 216 255 224 0 16 74 70 73 70 0 1 1 1 0 72 0 72 0 0 255 225 0 22 69 120 105 102 0 0 77 77 0 42 0 0 0 8 0 0 0 0 0 0 255 219 0 67 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 255 219 0 67 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 255 192 0 17 8 0 4 2 152 3 1 34 0 2 17 1 3 17 1 255 196 0 24 0 1 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 7 9 10 255 196 0 38 16 0 2 3 0 1 1 8 3 1 0 0 0 0 0 0 0 0 1 17 81 145 7 2 6 8 9 40 49 54 116 195 65 103 129 183 255 196 0 20 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 196 0 20 17 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 218 0 12 3 1 0 2 17 3 17 0 63 0 235 191 191 103 181 250 190 7 87 216 85 254 17 73 62 9 229 249 83 230 63 181 191 230 188 74 0 26 177 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 94 137 47 225 32 0 0 0 0 0 132 253 84 145 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 140 168 241 117 73 112 55 16 66 75 204 143 100 255 0 31 173 121 108 0 44 254 226 126 215 233 248 29 63 88 0 15 255 217) asByteArray-=JUAMPI=-type  ^'number'-=JUAMPI=-isValid  ^validationError isNil-=JUAMPI=-renderDetailsOn: arg1  arg1 heading     level2;     with: '<details>'.  arg1 details: [ arg1 summary: '[Sibley, 2000]'.        arg1 paragraph: 'Sibley, David Allen, The Sibley Guide to Birds, (New York: Chanticleer Press, 2000) p. 247' ]-=JUAMPI=-writeDiscardOn: arg1  (self discard notNil and: [ self discard ]) ifTrue: [ arg1 nextPutAll: '; Discard' ]-=JUAMPI=-contents: arg1  contents := GRPlatform current convertToSmalltalkNewlines: arg1-=JUAMPI=-urlForDocument: arg1 mimeType: arg2 fileName: arg3  | tmp1 |  tmp1 := WADocumentHandler document: arg1 mimeType: arg2 fileName: arg3.  ^self requestContext session register: tmp1-=JUAMPI=-beHidden  self hidden: true-=JUAMPI=-renderColumnsOn: arg1  arg1 div     class: 'columns';     with: [ self columns do: [:arg2 |  arg1 form                 class: 'column';                 with: [ | tmp1 |                    tmp1 := self model perform: (arg2 , 'List') asSymbol.                    arg1 div: [ arg1 select                             size: 10;                             list: tmp1;                             attributeAt: 'onchange' put: 'submit()';                             selected: (tmp1 at: (self model perform: (arg2 , 'ListIndex') asSymbol) ifAbsent: [ nil ]);                             callback: [:arg3 |  self model perform: (arg2 , 'ListIndex:') asSymbol with: (tmp1 indexOf: arg3) ] ] ] ] ]-=JUAMPI=-seasideMimeType  ^self-=JUAMPI=-top: arg1  features at: #top put: arg1-=JUAMPI=-boolean: arg1  ^self addAttribute: (WABooleanAttribute key: arg1)-=JUAMPI=-editMemoryVMParameterAt: arg1 named: arg2  self show: ((WAVMParameterEditor paramterIndex: arg1)           addMessage: arg2;           yourself)-=JUAMPI=-notFound  | tmp1 |  self makePlainTextAndPerform: #notFound.  tmp1 := self response.  self request url pathUnencodedOn: tmp1.  tmp1 nextPutAll: ' not found'-=JUAMPI=-hash  ^(self mimeType hash bitXor: self fileName hash) bitXor: self contents hash-=JUAMPI=-expectedMimeType  ^WAMimeType textHtml-=JUAMPI=-initialize  super initialize.  self initializeFields-=JUAMPI=-tabIndex: arg1  self attributes at: 'tabindex' put: arg1-=JUAMPI=-toggleHelp  self showHelp: self showHelp not.  self showHelp ifTrue: [ self collapsed: false ]-=JUAMPI=-openTag: arg1 attributes: arg2 closed: arg3  stream     nextPut: $<;     nextPutAll: arg1.  arg2 encodeOn: self.  arg3 ifTrue: [ stream nextPut: $/ ].  stream nextPut: $>-=JUAMPI=-testCantReset  | tmp1 |  tmp1 := self response     status: WAResponse statusNotFound;     attachmentWithFileName: 'upload.csv';     nextPutAll: 'the content';     resetIfPossible.  self deny: tmp1.  self assertLines: #('HTTP/1.1 404 Not Found' 'Content-Disposition: attachment; filename="upload.csv"' '' 'the content')-=JUAMPI=-testBlockTemps  | tmp1 |  #(1 2 3) do: [:arg1 |  | tmp2 |        tmp2 := arg1.        tmp ifNil: [ tmp2 := self callcc: [:arg2 |  tmp := arg2.                    [:arg3 |   ] ] ].        tmp2 value: tmp2.        tmp2 := 17 ].  tmp1 := self callcc: [:arg2 |  tmp value: arg2.        42 ].  self assert: tmp1 = 1-=JUAMPI=-associationsDo: arg1  delegates do: [:arg2 |  arg2 associationsDo: arg1 ]-=JUAMPI=-classListIndex  ^(self classesInTheSelectedPackage sorted: [:arg1 :arg2 |  arg1 name <= arg2 name ]) indexOf: selectedClass-=JUAMPI=-renderFigureOn: arg1  arg1 heading     level2;     with: '<figure>'.  arg1 figure: [ arg1 image           url: WATestingFiles / #samplePng;           altText: 'sample'.        arg1 figureCaption: 'A Sample Icon' ]-=JUAMPI=-hash  ^self main hash bitXor: self sub hash-=JUAMPI=-colorForDate: arg1 rowIndex: arg2  ^(self hasSelection and: [ self selectionContainsDate: arg1 rowIndex: arg2 ]) ifTrue: [ 'lightgrey' ] ifFalse: [ 'white' ]-=JUAMPI=-asSpecCommand  ^super asSpecCommand     iconName: #smallInspectIt;     yourself-=JUAMPI=-testAbsoluteUrlForResourceWithoutBase  | tmp1 |  tmp1 := WARenderContext new.  tmp1 resourceUrl: nil.  self assert: (tmp1 absoluteUrlForResource: nil) isNil.  self assert: ((tmp1 absoluteUrlForResource: 'bar') isKindOf: WAUrl).  self assert: (tmp1 absoluteUrlForResource: 'bar') greaseString = '/bar'.  self assert: ((tmp1 absoluteUrlForResource: '/bar') isKindOf: WAUrl).  self assert: (tmp1 absoluteUrlForResource: '/bar') greaseString = '/bar'.  self assert: ((tmp1 absoluteUrlForResource: '') isKindOf: WAUrl).  self assert: (tmp1 absoluteUrlForResource: '') greaseString = '/'.  self assert: ((tmp1 absoluteUrlForResource: 'http://localhost/foo') isKindOf: WAUrl).  self assert: (tmp1 absoluteUrlForResource: 'http://localhost/foo') greaseString = 'http://localhost/foo'-=JUAMPI=-renderValuesOn: arg1  | tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 |  tmp3 := SmalltalkImage current vm getParameters.  tmp4 := tmp3 at: 7.  tmp5 := tmp3 at: 8.  tmp1 := tmp3 at: 9.  tmp6 := tmp3 at: 10.  tmp2 := tmp3 at: 11.  self renderLabel: 'Full GCs' value: tmp4 value: (self printMilliSeconds: tmp5) value: (self printMilliSeconds: tmp5 dividedBy: tmp4) on: arg1.  self renderLabel: 'Incremental GCs' value: tmp1 value: (self printMilliSeconds: tmp6) value: (self printMilliSeconds: tmp6 dividedBy: tmp1) on: arg1.  self renderLabel: 'Tenures' value: tmp2 on: arg1.  tmp2 isZero ifFalse: [ self renderLabel: 'Avg. GCs/tenure' value: (tmp1 / tmp2) greaseInteger on: arg1 ]-=JUAMPI=-forbidden  | tmp1 |  self makePlainTextAndPerform: #forbidden.  tmp1 := self response.  tmp1 nextPutAll: 'Error: you are forbidden to access "'.  self request url pathUnencodedOn: tmp1.  tmp1 nextPutAll: '"'-=JUAMPI=-newSession  ^self sessionClass new     configuration: (WAUserConfiguration new           addParent: self configuration;           yourself);     yourself-=JUAMPI=-accept: arg1  arg1 visitPainter: self-=JUAMPI=-renderHeadingOn: arg1  arg1 div     class: 'header';     with: [ arg1 heading           level1;           class: 'welcome';           with: self title.        arg1 heading           level2;           class: 'congrats';           with: 'Congratulations, you have a working Seaside environment.' ]-=JUAMPI=-meta  ^self add: (WAMetaElement root: self)-=JUAMPI=-unhandledExceptionClass  ^Exception-=JUAMPI=-printOn: arg1  super printOn: arg1.  arg1     nextPutAll: ' cacheDuration: ';     print: self cacheDuration.  arg1     nextPutAll: ' filepath: ';     print: self filepath.  arg1     nextPutAll: ' mimeType: ';     print: self mimeType.  arg1     nextPutAll: ' contents: ';     print: (self contents greaseString truncateWithElipsisTo: 100)-=JUAMPI=-testAtIfAbsent  one at: 'foo' put: 1.  two at: 'bar' put: 2.  self assert: (merged at: 'foo' ifAbsent: [ true ]) = 1.  self assert: (merged at: 'bar' ifAbsent: [ true ]) = 2.  two at: 'foo' put: 3.  self assert: (merged at: 'foo' ifAbsent: [ true ]) = 1.  self assert: (merged at: 'zork' ifAbsent: [ true ])-=JUAMPI=-binary  self subclassResponsibility-=JUAMPI=-renderSubItemsOn: arg1  super renderSubItemsOn: arg1.  arg1 render: cacheEditor-=JUAMPI=-testMimeType  | tmp1 |  tmp1 := WATestingMetadataFileLibrary default.  self assert: (tmp1 mimetypeOf: #imgglyphiconshalflingsPng) = WAMimeType imagePng.  self assert: (tmp1 mimetypeOf: #jsbootstrapJs) = 'application/javascript' seasideMimeType-=JUAMPI=-handleAnswer: arg1 continueWith: arg2  (self validate: arg1) ifTrue: [ arg2 value ]-=JUAMPI=-labels: arg1  labelBlock := arg1-=JUAMPI=-renderRadioButtonsCustomOn: arg1  self renderLabel: 'Radiogroup (Custom)' input: [ arg1 radioGroup: [:arg2 |  self elements do: [:arg3 |  arg1 label: [ arg1 radioButton                             group: arg2;                             selected: radioCustom = arg3;                             callback: [ radioCustom := arg3 ].                          arg1 text: arg3 ].                    arg1 break ] ] ] output: radioCustom printString on: arg1-=JUAMPI=-renderContentOn: arg1  arg1 table     class: 'DateTable';     with: [ arg1 tableRow: [ self renderMonthHeadingsOn: arg1 ].        arg1 tableRow: [ self renderDayHeadingsOn: arg1 ].        rows keysAndValuesDo: [:arg2 :arg3 |  arg1 tableRow: [ self renderRow: arg3 index: arg2 on: arg1 ] ] ]-=JUAMPI=-rows: arg1  self clearSelection.  super rows: arg1-=JUAMPI=-createRequest  ^WARequest method: 'GET' uri: '/1/2'-=JUAMPI=-testMapCallback  | tmp1 |  tmp1 := registry store: (WAMapCallback on: [:arg1 |  log add: arg1 ]).  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '?1,2';                 yourself) ] raise: WARenderNotification.  self assertLog: (Array with: 1 @ 2).  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '?1,23';                 yourself) ] raise: WARenderNotification.  self assertLog: (Array with: 1 @ 23).  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '?12,34';                 yourself) ] raise: WARenderNotification.  self assertLog: (Array with: 12 @ 34).  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '';                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '1,2';                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '?1';                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '?1,';                 yourself) ] raise: WARenderNotification.  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '?1x2';                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: tmp1 put: '?a,b';                 yourself) ] raise: WARenderNotification.  self assertLog: #()-=JUAMPI=-ensure  [ self go ] ensure: [ self inform: 'ensure' ]-=JUAMPI=-limit  ^limit ifNil: [ limit := self defaultLimit min: self frameCount ]-=JUAMPI=-testAsFileAndFoldername  | tmp1 |  tmp1 := WATestingMetadataFileLibrary default.  self assert: (tmp1 asFileAndFoldername: #mainCss) first equals: tmp1 name-=JUAMPI=-showHelp  self model plusButtonHit-=JUAMPI=-exceptionClass  ^exceptionClass ifNil: [ exceptionClass := WAValidationNotification ]-=JUAMPI=-renderMonthHeadingOn: arg1  arg1 form: [ arg1 div: [ arg1 select                 list: (1 to: 12);                 on: #monthIndex of: self;                 labels: [:arg2 |  Date nameOfMonth: arg2 ].              arg1 textInput                 maxLength: 4;                 on: #year of: self.              arg1 submitButton text: 'Refresh' ] ]-=JUAMPI=-date: arg1  day := arg1 dayOfMonth.  month := arg1 monthIndex.  year := arg1 year-=JUAMPI=-initialize  super initialize.  properties := Dictionary new.  self hasAdvancedAttributes: self hasAdvancedAttributesDefault.  self displayAdvancedAttributes: false.  self collapsed: self collapsedByDefault.  self showHelp: false-=JUAMPI=-value  ^value-=JUAMPI=-evaluate  ^self object class compilerClass new evaluate: input in: thisContext to: self object-=JUAMPI=-stop: arg1  (self canStop: arg1) ifTrue: [ arg1 basicStop ]-=JUAMPI=-onRender: arg1  renderBlock := arg1-=JUAMPI=-columns: arg1  columns := arg1-=JUAMPI=-percent: arg1  ^GRSequentialPrinter new , (GRNumberPrinter new           separator: $.;           precision: 2;           accuracy: 0.1;           yourself) , ' %' print: arg1 * 100-=JUAMPI=-sessionIdFromContext: arg1  ^arg1 request forwardedFor ifNil: [ arg1 request remoteAddress ]-=JUAMPI=-updateStates: arg1  super updateStates: arg1.  decoration isNil ifFalse: [ arg1 register: decoration ]-=JUAMPI=-nextPutAllFast: arg1  | tmp1 tmp2 |  tmp1 := 1.  tmp2 := ByteString findFirstInString: arg1 inSet: table startingAt: tmp1.  tmp2 = 0 ifTrue: [ ^stream nextPutAll: arg1 ].  [ tmp2 > tmp1 ifTrue: [ stream greaseNext: tmp2 - tmp1 putAll: arg1 startingAt: tmp1 ].  delegate nextPut: (arg1 at: tmp2).  tmp1 := tmp2 + 1.  tmp2 := ByteString findFirstInString: arg1 inSet: table startingAt: tmp1.  tmp2 = 0 ] whileFalse.  stream greaseNext: arg1 size - tmp1 + 1 putAll: arg1 startingAt: tmp1-=JUAMPI=-isModify  ^self expression notNil and: [ self isOverride not ]-=JUAMPI=-minutes: arg1  minutes := arg1 greaseInteger ifNil: [ 0 ]-=JUAMPI=-document: arg1 mimeType: arg2  self document: arg1 mimeType: arg2 fileName: nil-=JUAMPI=-openBrush  super openBrush.  key jsonOn: canvas.  self document stream nextPutAll: ': '-=JUAMPI=-starting  status := #starting-=JUAMPI=-renderContentOn: arg1  self renderHeadingOn: arg1.  self renderDispatcherOn: arg1-=JUAMPI=-accept: arg1  arg1 visitPasswordAttribute: self-=JUAMPI=-size  ^self rawContents size-=JUAMPI=-parseNumberInteger  | tmp1 |  tmp1 := 0.  [ stream atEnd not and: [ stream peek isDigit ] ] whileTrue: [ tmp1 := 10 * tmp1 + (stream next greaseInteger - 48) ].  ^tmp1-=JUAMPI=-testStore  | tmp1 |  tmp1 := WAPrecomputedKeyGenerator keys: #(1 1 1 2 2 2 3).  WAKeyGenerator use: tmp1 during: [ self assert: (cache store: 'key1') = 1.        self assert: (cache store: 'key2') = 2.        self assert: (cache store: 'key3') = 3 ]-=JUAMPI=-respond  WAResponseNotification signal-=JUAMPI=-remove: arg1  self subclassResponsibility-=JUAMPI=-port  ^port-=JUAMPI=-renderFormOn: arg1  groups do: [:arg2 |  arg1 render: arg2 ]-=JUAMPI=-logger  ^(JSLogger context: self context)     rendererClass: self species;     yourself-=JUAMPI=-processes  ^(Process allSubInstances reject: [:arg1 |  arg1 isTerminated or: [ arg1 = Processor activeProcess ] ]) sorted: [:arg2 :arg3 |  arg2 priority >= arg3 priority ]-=JUAMPI=-selection  ^selection-=JUAMPI=-charset: arg1  self attributes at: 'charset' put: arg1-=JUAMPI=-tag  ^'script'-=JUAMPI=-value: arg1  self attributeAt: 'value' put: arg1-=JUAMPI=-destroy  super destroy.  bufferedStream := nil.  externalStream := nil-=JUAMPI=-renderEntityTableFootOn: arg1  arg1 tableFoot: [ arg1 tableRow: [ arg1 tableData                 align: 'center';                 colSpan: 7;                 with: '5 entities shown' ] ]-=JUAMPI=-callback: arg1  self name: (self storeCallback: (WAValueCallback on: arg1)).  self value: self value-=JUAMPI=-postCopyForRenderContext: arg1  super postCopyForRenderContext: arg1.  renderContext := arg1-=JUAMPI=-renderPartsOn: arg1  self renderHaltOn: arg1.  self renderErrorOn: arg1.  self renderPostErrorOn: arg1.  self renderRenderErrorOn: arg1.  self renderResumableErrorOn: arg1.  self renderWarningOn: arg1.  self renderDeprecatedOn: arg1-=JUAMPI=-defaultConfiguration  self subclassResponsibility-=JUAMPI=-second: arg1  second := arg1-=JUAMPI=-renderContentOn: arg1  arg1 render: self delegate-=JUAMPI=-testCanResetIfNoBody  | tmp1 |  tmp1 := self response     status: WAResponse statusNotFound;     attachmentWithFileName: 'upload.csv';     resetIfPossible.  self assert: tmp1.  self assertLines: #('HTTP/1.1 200 OK' 'Content-Length: 0' '')-=JUAMPI=-hasTotal: arg1  hasTotal := arg1-=JUAMPI=-describeOn: arg1  (arg1 string: #login)     group: #authentication;     comment: 'The username for this application.'.  (arg1 password: #passwordHash)     group: #authentication;     comment: 'The password for this application.';     label: 'Password'-=JUAMPI=-renderPhaseContinuationClasses  ^self continuationClasses select: [:arg1 |  arg1 isRenderLoopContinuation and: [ arg1 isRenderContinuation ] ]-=JUAMPI=-assert: arg1 gives: arg2  | tmp1 |  arg1 value: (attributes := WAHtmlAttributes new).  (WAHtmlDocument on: (tmp1 := WriteStream on: String new) codec: self requestContext codec) print: attributes.  self assert: tmp1 contents = arg2 description: 'Expected ' , arg2 printString , ', but got ' , tmp1 contents printString resumable: true-=JUAMPI=-renderValuesOn: arg1  self processes do: [:arg2 |  self renderProcess: arg2 on: arg1 ]-=JUAMPI=-at: arg1 append: arg2 separator: arg3  arg2 isNil ifFalse: [ | tmp1 |        tmp1 := self at: arg1 ifAbsentPut: [ arg2 ].        tmp1 ~~ arg2 ifTrue: [ tmp1 isConcatenatedHtmlAttributeValue ifTrue: [ tmp1 addValue: arg2 ] ifFalse: [ self at: arg1 put: (WAConcatenatedHtmlAttributeValue separator: arg3 value: tmp1 value: arg2) ] ] ]-=JUAMPI=-text: arg1  self flush.  super text: arg1-=JUAMPI=-selection  ^selection contents-=JUAMPI=-handlerClass  ^WAHtmlFileHandlerListing-=JUAMPI=-search: arg1  search := arg1-=JUAMPI=-isAttributeInheritedOn: arg1  ^attributeInheritors includes: arg1-=JUAMPI=-addTo: arg1  ^self to add: arg1-=JUAMPI=-optimum: arg1  self attributeAt: 'optimum' put: arg1-=JUAMPI=-ruby: arg1  self ruby with: arg1-=JUAMPI=-filter: arg1  filter := arg1-=JUAMPI=-tag  ^'time'-=JUAMPI=-writeSameSiteOn: arg1  sameSite isNil ifTrue: [ ^self ].  arg1     nextPutAll: '; SameSite=';     nextPutAll: sameSite-=JUAMPI=-writeVersionOn: arg1  arg1 nextPutAll: '; Version='.  arg1 print: self version-=JUAMPI=-setEmptyPage  editor := WADispatcherEmptyPage on: self-=JUAMPI=-handleExceptionsDuring: arg1  ^arg1 on: self do: [:arg2 |  [ self handleException: arg2 ] on: Error do: [:arg3 |  self internalError: arg3 ] ]-=JUAMPI=-children  ^Array with: self component-=JUAMPI=-testLinkElementWithContent  self assertRoot: [:arg1 |  arg1 stylesheet add: 'div > em { color: blue; }' ] gives: '<title></title><style type="text/css">div > em { color: blue; }</style>'.  self assertRoot: [:arg1 |  arg1 stylesheet add: 'E[foo$="bar"]' ] gives: '<title></title><style type="text/css">E[foo$="bar"]</style>'-=JUAMPI=-renderHeaderOn: arg1  arg1 heading     level2;     with: '<header>'.  arg1 header: [ arg1 paragraph: 'Welcome to...'.        arg1 heading           level1;           with: 'Voidwars!' ]-=JUAMPI=-renderExplanationOn: arg1  arg1 paragraph: [ arg1 text: 'This test serves three purposes:'.        arg1 orderedList: [ arg1 listItem: 'First it is a regression test, earlier versions of Seaside could only handle a limited number of callbacks per page. The oldest links (low numbers) would use their callback. Clicking on any link should display this number with a button.'.              arg1 listItem: 'Second it serves as a raw rendering speed benchmark.'.              arg1 listItem: 'Third it tests WASession >> #jumpToAnchor:. After confirming the number you should return to the page and be automatically at the place where the link is.' ] ]-=JUAMPI=-childrenBlock: arg1  childrenBlock := arg1-=JUAMPI=-testCompileByteArrayWithCacheSource  | tmp1 tmp2 tmp3 tmp4 tmp5 |  self useCompileUseNewCompiler: false during: [ self deny: GRPharoPlatform current useByteArrayLiterals.        tmp1 := WATestingFiles default.        tmp2 := (1 to: 255) asByteArray.        tmp3 := WAFile new           contentType: WAMimeType imageJpeg;           contents: tmp2;           fileName: 'demo.jpeg';           yourself.        tmp1 addFile: tmp3.        [ tmp4 := WATestingFiles sourceCodeAt: #demoJpeg.        tmp5 := 'demoJpeg	^ #(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255) asByteArray'.        self assert: tmp4 greaseString = tmp5 ] ensure: [ tmp1 removeFile: tmp3 fileName ] ]-=JUAMPI=-addField: arg1 value: arg2  arg1 isEmpty ifFalse: [ self queryFields at: arg1 add: arg2 ]-=JUAMPI=-parse  | tmp1 |  tmp1 := self     whitespace;     parseValue.  self whitespace.  stream atEnd ifFalse: [ self error: 'end of input expected' ].  ^tmp1-=JUAMPI=-months  ^1 to: 12-=JUAMPI=-accept: arg1  arg1 visitComponent: self-=JUAMPI=-bePrevious  self relationship: 'previous'-=JUAMPI=-registerPassenger: arg1 named: arg2  | tmp1 |  tmp1 := JSPassenger new.  tmp1     setKey: arg2 callbacks: callbacks;     setObject: arg1.  callbacks at: (tmp1 convertKey: arg2) put: tmp1.  ^arg2-=JUAMPI=-contents  ^contents-=JUAMPI=-level4  level := 4-=JUAMPI=-register: arg1  ^adaptors add: arg1-=JUAMPI=-postCopy  super postCopy.  document := document copy-=JUAMPI=-minutes  ^minutes-=JUAMPI=-sampleForm  ^(Smalltalk classNamed: #Form) extent: 16 @ 16 depth: 1 fromArray: #(0 0 0 50331648 25165824 12582912 281018368 415236096 264241152 132120576 7340032 3670016 1572864 0 0 0) offset: 0 @ 0-=JUAMPI=-testDictionary  | tmp1 tmp2 tmp3 tmp4 tmp5 |  tmp1 := Dictionary new.  tmp1     at: 1 put: #a;     at: 2 put: #b.  tmp2 := tmp1 snapshotCopy.  tmp1 at: 3 put: #c.  tmp3 := tmp1 snapshotCopy.  tmp1 at: 3 put: #d.  tmp4 := tmp1 snapshotCopy.  tmp1 removeKey: 1.  tmp5 := tmp1 snapshotCopy.  tmp1 restoreFromSnapshot: tmp2.  self assert: tmp1 size equals: 2.  self assert: (tmp1 at: 1 ifAbsent: [  ]) equals: #a.  self assert: (tmp1 at: 2 ifAbsent: [  ]) equals: #b.  self assert: (tmp1 at: 3 ifAbsent: [  ]) isNil.  self assert: (tmp1 at: 4 ifAbsent: [  ]) isNil.  tmp1 restoreFromSnapshot: tmp3.  self assert: (tmp1 at: 1 ifAbsent: [  ]) equals: #a.  self assert: (tmp1 at: 2 ifAbsent: [  ]) equals: #b.  self assert: (tmp1 at: 3 ifAbsent: [  ]) equals: #c.  self assert: (tmp1 at: 4 ifAbsent: [  ]) isNil.  tmp1 restoreFromSnapshot: tmp4.  self assert: (tmp1 at: 1 ifAbsent: [  ]) equals: #a.  self assert: (tmp1 at: 2 ifAbsent: [  ]) equals: #b.  self assert: (tmp1 at: 3 ifAbsent: [  ]) equals: #d.  self assert: (tmp1 at: 4 ifAbsent: [  ]) isNil.  tmp1 restoreFromSnapshot: tmp5.  self assert: (tmp1 at: 1 ifAbsent: [  ]) isNil.  self assert: (tmp1 at: 2 ifAbsent: [  ]) equals: #b.  self assert: (tmp1 at: 3 ifAbsent: [  ]) equals: #d.  self assert: (tmp1 at: 4 ifAbsent: [  ]) isNil.  tmp1 at: 2 put: #!.  tmp1 restoreFromSnapshot: tmp5.  self assert: (tmp1 at: 1 ifAbsent: [  ]) isNil.  self assert: (tmp1 at: 2 ifAbsent: [  ]) equals: #b.  self assert: (tmp1 at: 3 ifAbsent: [  ]) equals: #d.  self assert: (tmp1 at: 4 ifAbsent: [  ]) isNil-=JUAMPI=-renderResumeOn: arg1  arg1 form: [ arg1 text: 'UI Process is suspended. '.        arg1 submitButton           callback: [ self resume ];           text: 'Resume' ]-=JUAMPI=-testNextKey  self assert: registry nextKey = '1'.  registry increaseKey.  self assert: registry nextKey = '2'.  self assert: registry nextKey = '2'-=JUAMPI=-initialize  super initialize.  self label: ''-=JUAMPI=-contentType  | tmp1 |  tmp1 := self headerAt: 'content-type'.  ^tmp1 isNil ifFalse: [ WAMimeType fromString: tmp1 ]-=JUAMPI=-initialize  super initialize.  configuration := self defaultConfiguration.  filter := WAValueHolder with: self-=JUAMPI=-testStringWithFilename  self createAndVerifyTextDocumentNamed: 'toolbar.css' hasAttachment: 'attachment; filename="toolbar.css"'-=JUAMPI=-onMouseUp: arg1  self document scriptGenerator event: 'mouseup' do: arg1 on: self-=JUAMPI=-renderMouseClickOn: arg1  arg1 div: [ arg1 map           title: 'Click here';           callback: [:arg2 |  self click: arg2 + self offset ];           with: [ arg1 image form: self form ] ]-=JUAMPI=-renderYearNavigationOn: arg1  arg1 span     class: 'calendarPrevious';     with: [ arg1 anchor           callback: [ self year: self year - 1 ];           with: self year - 1 ].  arg1 space.  arg1 span     class: 'calendarNext';     with: [ arg1 anchor           callback: [ self year: self year + 1 ];           with: self year + 1 ]-=JUAMPI=-datesDo: arg1 separatedBy: arg2  | tmp1 |  tmp1 := datesCache first monthIndex.  datesCache do: [:arg3 |  arg3 monthIndex = tmp1 ifFalse: [ tmp1 := arg3 monthIndex.              arg2 value ].        arg1 value: arg3 ].  arg2 value-=JUAMPI=-priority  ^400-=JUAMPI=-execute  self adaptor ifNotNil: [:arg1 |  arg1 isRunning ifFalse: [ ^self ].        WebBrowser openOn: 'http://localhost:' , arg1 port asString ]-=JUAMPI=-initialize  super initialize.  semaphore := GRPlatform current semaphoreClass forMutualExclusion.  owner := GRPlatform current newTransientValueHolder-=JUAMPI=-updateRoot: arg1  super updateRoot: arg1.  WAToolFiles default updateRoot: arg1.  WADevelopmentFiles default updateRoot: arg1-=JUAMPI=-testHandleListing  | tmp1 |  self requestContextWithUrl: '/root/files/WATestingFiles/'.  requestContext consumer     next;     next.  tmp1 := self responseAfter: [ handler handle: self requestContext ].  self assertListing: tmp1.  self requestContextWithUrl: '/root/files/WATestingFiles'.  requestContext consumer     next;     next.  tmp1 := self responseAfter: [ handler handle: self requestContext ].  self assertListing: tmp1.  self requestContextWithUrl: '/root/files/'.  requestContext consumer     next;     next.  tmp1 := self responseAfter: [ handler handle: self requestContext ].  self assertListing: tmp1.  self requestContextWithUrl: '/root/files'.  requestContext consumer     next;     next.  tmp1 := self responseAfter: [ handler handle: self requestContext ].  self assertListing: tmp1-=JUAMPI=-renderContentOn: arg1  arg1 paragraph: [ arg1 text: 'You can see your component in action here: '.        arg1 anchor           target: '_blank';           url: '/' , self componentName;           with: '/' , self componentName ].  arg1 paragraph: [ arg1           text: 'Now go find the class ';           code: self componentName;           text: ' in your Smalltalk image. First, try changing the displayed text by changing the ';           code: '#renderContentOn:';           text: ' method. Then you can experiment further based on what you''ve seen in the examples and what you read in the '.        arg1 anchor           url: 'http://book.seaside.st/';           with: 'documentation.' ].  arg1 paragraph: [ arg1 text: 'Want to '.        arg1 anchor           callback: [ self answer ];           with: 'create another component'.        arg1 text: '?' ]-=JUAMPI=-collapsed: arg1  ^self propertyAt: #collapsed put: arg1-=JUAMPI=-attributeAt: arg1 put: arg2  ^self attributes at: arg1 put: arg2-=JUAMPI=-renderKeyGeneratorOn: arg1  arg1 form: [ arg1 keyGenerator callback: [:arg2 |  key := arg2 ].        arg1 submitButton ]-=JUAMPI=-name  ^self class name greaseString-=JUAMPI=-testCopy  | tmp1 tmp2 |  cache at: 1 put: '1'.  cache at: 2 put: '2'.  tmp1 := cache copy.  tmp1 at: 1 put: '1a'.  tmp1 at: 3 put: '3'.  self assert: (cache at: 1 ifAbsent: [ self assert: false ]) = '1'.  self assert: (cache at: 2 ifAbsent: [ self assert: false ]) = '2'.  tmp2 := false.  cache at: 3 ifAbsent: [ tmp2 := true ].  self assert: tmp2.  self assert: (tmp1 at: 1 ifAbsent: [ self assert: false ]) = '1a'.  self assert: (cache at: 2 ifAbsent: [ self assert: false ]) = '2'.  self assert: (tmp1 at: 3 ifAbsent: [ self assert: false ]) = '3'-=JUAMPI=-headers  ^headers-=JUAMPI=-testHeadersAtPut  self assert: (self response headerAt: 'foo' put: 'bar') = 'bar'.  self assert: (self response headerAt: 'foo') = 'bar'.  self assert: (self response headerAt: 'foo' put: 'zork') = 'zork'.  self assert: (self response headerAt: 'foo') = 'zork'.  self assert: self response headers size = 1-=JUAMPI=-testAddToPathWithLeadingSlash  url addToPath: '/files/WAStandardFiles/seaside.jpg'.  self assert: url path size = 3.  self assert: url path first = 'files'.  self assert: url path second = 'WAStandardFiles'.  self assert: url path third = 'seaside.jpg'.  self assert: url greaseString = '/files/WAStandardFiles/seaside.jpg'-=JUAMPI=-priority  ^900-=JUAMPI=-renderExplanationOn: arg1  arg1 paragraph: 'This tests whether the sever adapter correctly passes the tailing slash of the request URL to the request context.'.  arg1 paragraph: 'Click each of the links below, and the status should change from "not run" to "success".'-=JUAMPI=-childrenDo: arg1  self cache keysAndValuesDo: [:arg2 :arg3 |  arg1 value: arg3 ]-=JUAMPI=-isHtml  ^false-=JUAMPI=-callback: arg1  arg1 argumentCount > 0 ifTrue: [ GRInvalidArgumentCount signal: 'Buttons expect a niladic callback.' ].  self name: (self storeCallback: (WAActionCallback on: arg1))-=JUAMPI=-testHandler  | tmp1 tmp2 |  tmp1 := handler addFilter: WARequestFilter new.  tmp2 := handler addFilter: WARequestFilter new.  self assert: handler handler = handler.  self assert: tmp1 handler = handler.  self assert: tmp2 handler = handler-=JUAMPI=-onCut: arg1  self document scriptGenerator event: 'cut' do: arg1 on: self-=JUAMPI=-title  ^'Task'-=JUAMPI=-renderChooseCheeseCodeOn: arg1  arg1 preformatted     class: #codeSample;     with: [ arg1 span           class: #patternUnary;           with: 'chooseCheese'.        arg1 break.        arg1 span           class: #instanceVar;           with: '    cheese'.        arg1 text: ' := '.        arg1 span           class: #self;           with: 'self'.        arg1 break.        arg1 text: '        chooseFrom: '.        arg1 span           class: #symbol;           with: '#'.        arg1 text: '( '.        arg1 span           class: #string;           with: '''Greyerzer'' ''Tilsiter'' ''Sbrinz'''.        arg1 text: ' )'.        arg1 break.        arg1 text: '        caption: '.        arg1 span           class: #string;           with: '''What''''s your favorite cheese?'''.        arg1 text: '.'.        arg1 break.        arg1 span           class: #instanceVar;           with: '    cheese'.        arg1 text: ' isNil ifTrue: [ '.        arg1 span           class: #self;           with: 'self'.        arg1 text: ' chooseCheese ]' ]-=JUAMPI=-endDateSelection  ^dateSelectionStart isNil ifFalse: [ dateSelectionStart max: dateSelectionEnd ]-=JUAMPI=-renderContentOn: arg1  arg1 anchor     class: self cssClass;     url: (arg1 actionUrl withField: 'terminate');     with: self label-=JUAMPI=-raiseWarning  self notify: 'Test Warning'.  self inform: 'To be displayed' onAnswer: [  ]-=JUAMPI=-includes: arg1  ^byValue includesKey: arg1-=JUAMPI=-form: arg1  self extent: arg1 extent.  self document: arg1-=JUAMPI=-user  | tmp1 |  ^(tmp1 := self authorization) isNil ifFalse: [ tmp1 copyUpTo: $: ]-=JUAMPI=-initializeWithException: arg1  self initialize.  exception := arg1-=JUAMPI=-cssClass  ^'wa-action'-=JUAMPI=-defaultAction: arg1  defaultAction := arg1-=JUAMPI=-valueFromString: arg1  ^arg1 isEmptyOrNil ifFalse: [ WAUrl absolute: arg1 ]-=JUAMPI=-marked  ^self tag: 'mark'-=JUAMPI=-renderCookiesRequiredStatementOn: arg1  arg1 text: 'Sorry, but this application requires cookies to be enabled'-=JUAMPI=-acceptDecorated: arg1  arg1 visitDecorationsOfComponent: self-=JUAMPI=-showTask  selection contents notNil ifTrue: [ self show: selection contents new ]-=JUAMPI=-testByteArrayWithoutFilename  self createAndVerifyBinaryDocumentNamed: nil hasAttachment: nil-=JUAMPI=-chooseObject: arg1 named: arg2  path pushSegment: arg1 name: arg2.  selected := nil-=JUAMPI=-ie  self addToCondition: ' IE'-=JUAMPI=-input: arg1  input := arg1-=JUAMPI=-httpVersion  ^'HTTP/1.1'-=JUAMPI=-initialize  super initialize.  self input: 'a text'-=JUAMPI=-bePopup  self type: 'popup'-=JUAMPI=-document: arg1 fileName: arg2  self document: arg1 mimeType: self typeOrNil fileName: arg2-=JUAMPI=-expectedLibrariesContents  ^handler libraries first name-=JUAMPI=-sample  ^self tag: 'samp'-=JUAMPI=-source: arg1  self source with: arg1-=JUAMPI=-renderExplanationOn: arg1  arg1 paragraph: 'The purpose of this test is to make sure WAContext and WACurrentContext work correctly. For each label you should see the print string of one or several matching objects. For the ''Request Handlers'' the first object should be a WASession or subclass, the second a WAApplication and then one or several WADispatchers matching the path.'-=JUAMPI=-logon  user isEmptyOrNil ifTrue: [ self inform: 'Nope !' onAnswer: [  ] ] ifFalse: [ state := #ON.        test ifTrue: [ self inform: 'Logged on' onAnswer: [  ] ] ]-=JUAMPI=-initialize  super initialize.  handlers := WABidirectionalCache new-=JUAMPI=-onKeyPress: arg1  self document scriptGenerator event: 'keypress' do: arg1 on: self-=JUAMPI=-type  ^'text'-=JUAMPI=-renderBreakOn: arg1  self renderInline: [:arg2 |  arg2 break ] factor: 1 / 50 key: #seasideBR on: arg1-=JUAMPI=-stream  self subclassResponsibility-=JUAMPI=-handler  ^handler-=JUAMPI=-parents  ^#()-=JUAMPI=-valueFor: arg1  ^self valuesAt: self nextKey put: arg1-=JUAMPI=-configuration  ^configuration-=JUAMPI=-testAsMIMEDocumentByteArray  | tmp1 tmp2 |  tmp1 := WABlockMimeDocument onBlock: [ #(1 2 3 4) asByteArray ].  self assert: tmp1 contentType = WAMimeType applicationOctetStream.  tmp2 := tmp1 content.  self assert: tmp2 size = 4.  self assert: tmp2 class = ByteArray.  1 to: 4 do: [:arg1 |  self assert: (tmp2 at: arg1) = arg1 ]-=JUAMPI=-render: arg1  self flush.  super render: arg1-=JUAMPI=-at: arg1 putClass: arg2  ^self at: arg1 put: (GRPlatform current bindingOf: arg2)-=JUAMPI=-show: arg1  self show: arg1 onAnswer: [:arg2 |   ]-=JUAMPI=-testNoMarkerOnValue  | tmp1 tmp2 tmp3 |  tmp2 := false.  tmp3 := false.  self shouldnt: [ self markDiscardingResultOf: [ | tmp4 |              tmp4 := self callcc: [:arg1 |  tmp1 := arg1.                    tmp2 := true ].              tmp3 := true.              tmp4 ] ] raise: Error.  self assert: tmp2.  self assert: tmp3.  tmp2 := false.  tmp3 := false.  self assert: (tmp1 value: 123) = 123.  self deny: tmp2.  self assert: tmp3-=JUAMPI=-handleDefault: arg1  self handle: arg1 registering: self newSession-=JUAMPI=-numArgs  self subclassResponsibility-=JUAMPI=-toggleUIProcess  | tmp1 |  tmp1 := self uiProcess.  tmp1 isSuspended ifTrue: [ tmp1 resume ] ifFalse: [ tmp1 suspend ]-=JUAMPI=-selected: arg1  current contents: arg1 new.  (current contents respondsTo: #parent:) ifTrue: [ current contents parent: self ]-=JUAMPI=-children  ^Array with: self componentCreator-=JUAMPI=-testAtPut  1 to: 100 do: [:arg1 |  | tmp1 tmp2 |        tmp1 := false.        cache at: arg1 ifAbsent: [ tmp1 := true ].        self assert: tmp1.        tmp2 := cache at: arg1 put: arg1 greaseString.        self assert: tmp2 = arg1 greaseString.        tmp2 := cache at: arg1 ifAbsent: [ self assert: false ].        self assert: tmp2 = arg1 greaseString ]-=JUAMPI=-beUp  self relationship: 'up'-=JUAMPI=-renderExplanationOn: arg1  arg1 paragraph: [ arg1 text: 'This is a functional test for WATree.'.        arg1 orderedList: [ arg1 listItem: 'Clicking on ''+'' should expand a node'.              arg1 listItem: 'Clicking on ''-'' should collapse a node'.              arg1 listItem: 'Clicking on a node should display its name after ''Selected:'''.              arg1 listItem: 'Leaf nodes should not be clickable' ] ]-=JUAMPI=-buildTable  ^WATableReport new     rows: instances values;     columns: (Array with: (WAReportColumn new                 title: 'Class';                 selector: #name;                 sortBlock: [:arg1 :arg2 |  arg1 < arg2 ];                 yourself) with: (WAReportColumn new                 title: 'Instances';                 selector: #count;                 sortBlock: [:arg1 :arg2 |  arg1 > arg2 ];                 cssClass: 'right';                 hasTotal: true;                 yourself) with: (WAReportColumn new                 title: 'Total Size';                 selector: #size;                 sortBlock: [:arg1 :arg2 |  arg1 > arg2 ];                 formatBlock: [:arg3 |  formatter print: arg3 ];                 cssClass: 'right';                 hasTotal: true;                 yourself));     yourself-=JUAMPI=-describeOn: arg1  (arg1 list: #fileHandlerListingClass)     beAdvanced;     options: [ self listingClasses ];     default: WAForbiddenFileHandlerListing.  (arg1 url: #resourceBaseUrl)     group: #server;     comment: 'Sets the base URL for generated URLs.'.  (arg1 boolean: #useXSendfile)     beAdvanced;     group: #server;     comment: 'Sets whether to use the X-Sendfile header to stream file library contents.';     default: false.  (arg1 string: #xSendfileBaseDirectory)     beAdvanced;     group: #server;     comment: 'The directory in which the deployed file libraries are.'-=JUAMPI=-initializeWithSeparator: arg1 value: arg2 value: arg3  self initialize.  separator := arg1.  values := OrderedCollection new: 4.  values add: arg2.  values add: arg3-=JUAMPI=-value  ^value-=JUAMPI=-clearAttribute: arg1  self configuration removeExpressionAt: arg1 key-=JUAMPI=-form  ^zoom ifFalse: [ Display copy ] ifTrue: [ self topWindow imageForm ]-=JUAMPI=-initialize  super initialize.  count := 1-=JUAMPI=-handler: arg1  handler := arg1-=JUAMPI=-source: arg1 visitor: arg2  | tmp1 |  arg1 div     class: 'wa-halo-source';     with: [ tmp1 := arg1 context copy.        tmp1 disableHalos.        tmp1 document: (WAPrettyPrintedDocument context: arg1 context).        (WARenderVisitor context: tmp1) start: self root.        tmp1 document close ]-=JUAMPI=-renderActionsOn: arg1  arg1 paragraph: [ arg1 anchor           callback: [ self authentication ];           with: 'Basic Authentication'.        arg1 text: ' (admin/seaside)'.        arg1 break.        arg1 anchor           callback: [ self protectorByRemoteAddress ];           with: 'Session Protector by remote address'.        arg1 break.        arg1 anchor           callback: [ self protectorByBrowserSessionCookie ];           with: 'Session Protector by session cookie' ].  arg1 horizontalRule.  arg1 paragraph: self children-=JUAMPI=-multiplier  ^multiplier-=JUAMPI=-initializeWithClient: arg1  self initialize.  client := arg1-=JUAMPI=-input: arg1  input := arg1-=JUAMPI=-removeDelegation  self delegations notEmpty ifTrue: [ self removeDecoration: self delegations first ]-=JUAMPI=-at: arg1 addAll: arg2 removeAll: arg3  ^self storeExpression: ((WAAddRemoveExpression key: arg1)           additions: arg2;           removals: arg3;           yourself) forAttribute: (self attributeAt: arg1)-=JUAMPI=-children  ^Array with: batcher-=JUAMPI=-onLoadedData: arg1  self document scriptGenerator event: 'loadeddata' do: arg1 on: self-=JUAMPI=-register: arg1  arg1 isNil ifFalse: [ objects at: arg1 put: arg1 snapshotCopy ]-=JUAMPI=-demoJpegContent  ^#(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255) asByteArray-=JUAMPI=-addKey: arg1 toContext: arg2  self subclassResponsibility-=JUAMPI=-renderContentOn: arg1  | tmp1 tmp2 |  tmp1 := nil.  arg1 div     class: 'trail';     with: [ root visiblePresentersDo: [:arg2 |  (arg2 isDecoration and: [ arg2 isDelegation ]) ifTrue: [ (arg2 decoratedComponent respondsTo: #trailName) ifTrue: [ tmp1 := arg2.                          arg1 anchor                             callback: [ arg2 remove ];                             with: (arg2 decoratedComponent perform: #trailName).                          arg1 span                             class: 'separator';                             with: self separator ] ] ].        tmp2 := tmp1 isNil ifTrue: [ root ] ifFalse: [ tmp1 delegate ].        (tmp2 respondsTo: #trailName) ifTrue: [ arg1 text: (tmp2 perform: #trailName) ] ]-=JUAMPI=-testRfc1  | tmp1 |  tmp1 := WAAccept fromString: 'audio/*; q=0.2, audio/basic'.  self assert: tmp1 size = 2.  self assert: tmp1 at: 1 main: 'audio' sub: '*' quality: 0.2.  self assert: tmp1 at: 2 main: 'audio' sub: 'basic' quality: 1.0-=JUAMPI=-openingConditionClass  ^WAOpeningConditionalComment-=JUAMPI=-testAddKeyToUrl  | tmp1 tmp2 |  tmp1 := self requestContext.  tmp2 := tmp1 request uri copy.  strategy addKey: 'The_Metaphor' toUrl: tmp2.  self assert: tmp2 greaseString = '/catspajamassc2?_s=The_Metaphor'-=JUAMPI=-configurationComponent  ^WAHandlerEditor on: self-=JUAMPI=-codetype: arg1  self attributes at: 'codetype' put: arg1-=JUAMPI=-withLineBreaksAndUrls: arg1  | tmp1 |  arg1 ifNil: [ ^self ].  tmp1 := arg1 readStream.  [ tmp1 atEnd ] whileFalse: [ self withUrls: tmp1 nextLine.        tmp1 atEnd ifFalse: [ self break ] ]-=JUAMPI=-with: arg1  self attributes at: 'type' ifAbsentPut: [ 'text/javascript' ].  super with: [ arg1 isNil ifFalse: [ self document nextPutAll: arg1 greaseString ] ]-=JUAMPI=-addParent: arg1  (self parents includes: arg1) ifTrue: [ ^arg1 ].  (self canAddParent: arg1) ifTrue: [ self clearSearchContexts.        parents add: arg1 ] ifFalse: [ WAConfigurationError signal: 'Cannot add this configuration as a parent. Would this cause a circular ancestry graph?' ].  ^arg1-=JUAMPI=-label  ^self brush: WALabelTag new-=JUAMPI=-initializeOn: arg1  self initialize.  dispatcher := arg1-=JUAMPI=-openBrush  self document openArray-=JUAMPI=-initialize  super initialize.  self     name: 'Remove adaptor';     description: 'Remove the currently selected seaside adaptor'-=JUAMPI=-isResumable  ^false-=JUAMPI=-responseForLibraries  context respond: [:arg1 |  arg1 contentType: WAMimeType textPlain.        handler libraries do: [:arg2 |  arg1 stream                 nextPutAll: arg2 name;                 crlf ] ]-=JUAMPI=-renderConfigurationOn: arg1  | tmp1 |  tmp1 := WAValueHolder new.  arg1 form: [ arg1 table: [ arg1 tableRow: [ arg1 tableData: [ arg1 select                             list: self libraries;                             callback: [:arg2 |  tmp1 contents: arg2 ];                             size: 10 ].                    arg1 tableData: [ arg1 anchor                             title: 'Configure selected file library';                             class: 'large';                             onClick: 'return submitForm(this)';                             callback: [ tmp1 contents isNil ifFalse: [ self configureLibrary: tmp1 contents default ] ];                             with: 'Configure' ] ] ] ]-=JUAMPI=-value: arg1 with: arg2  self selected: (arg2 isSelected: arg1).  self value: (arg2 valueFor: arg1)-=JUAMPI=-table: arg1  self table with: arg1-=JUAMPI=-testEquals  | tmp1 tmp2 |  tmp1 := WAMimeType fromString: 'text/html'.  tmp2 := WAMimeType fromString: 'text/html'.  self assert: tmp1 = tmp2.  self assert: tmp1 hash = tmp2 hash.  tmp2 charset: 'utf-8'.  self assert: tmp1 = tmp2.  self assert: tmp1 hash = tmp2 hash.  tmp1 charset: 'iso-8859-1'.  self assert: tmp1 = tmp2.  self assert: tmp1 hash = tmp2 hash.  tmp2 := WAMimeType fromString: 'text/xml'.  self deny: tmp1 = tmp2-=JUAMPI=-isOptional  ^isOptional-=JUAMPI=-radioButton: arg1  ^self radioButton with: arg1-=JUAMPI=-respond  WAResponseNotification signal-=JUAMPI=-scrollbars: arg1  features at: #scrollbars put: arg1-=JUAMPI=-table  ^table ifNil: [ table := self buildTable ]-=JUAMPI=-type: arg1  self attributeAt: 'type' put: arg1-=JUAMPI=-basicUrl  ^self isRoot ifTrue: [ WAUrl new ] ifFalse: [ self parent urlFor: self ]-=JUAMPI=-definition  ^self tag: 'dfn'-=JUAMPI=-createCodec  ^GRNullCodec new-=JUAMPI=-editorClass  ^cache editorClass-=JUAMPI=-menu: arg1  self menu with: arg1-=JUAMPI=-testIsNotFromCrawler  | tmp1 |  tmp1 := self requestContext.  self browserUserAgents do: [:arg1 |  tmp1 request headers at: 'user-agent' put: arg1.        self deny: (strategy isFromCrawler: tmp1) ]-=JUAMPI=-testRemoveRelativeOldest  | tmp1 |  cache := WAHashCache initialSize: 13 maximumSize: 10 maximumAbsoluteAge: 0 maximumRelativeAge: 0 overflowAction: WAHashCache removeRelativeOldest.  1 to: 10 do: [:arg1 |  cache at: arg1 put: arg1 greaseString ].  1 to: 9 do: [:arg1 |  cache at: arg1 ifAbsent: [ self assert: false ] ].  cache at: 11 put: '11'.  1 to: 9 do: [:arg1 |  self assert: (cache at: arg1 ifAbsent: [ self assert: false ]) = arg1 greaseString ].  self assert: (cache at: 11 ifAbsent: [ self assert: false ]) = '11'.  tmp1 := false.  cache at: 10 ifAbsent: [ tmp1 := true ].  self assert: tmp1-=JUAMPI=-sourceSet: arg1  self attributes at: 'srcset' put: arg1-=JUAMPI=-renderObject: arg1 labelled: arg2 on: arg3  arg3 definitionTerm: [ arg3 anchor           callback: [ (WAInspectorHaloPlugin on: arg1 for: self) execute ];           with: arg2 ].  arg3 definitionData: (self safePrintString: arg1)-=JUAMPI=-fullStackUrl  ^self urlForDebugAction: '_fullStack'-=JUAMPI=-parents  ^Array with: WARequestHandlingConfiguration instance with: WACacheConfiguration instance-=JUAMPI=-testNotImplemented  | tmp1 |  tmp1 := WAResponseGenerator on: self requestContext.  self requestContext response nextPutAll: 'oops'.  tmp1 notImplemented.  self assertContents: 'Not Implemented'-=JUAMPI=-ambigousExamples  ^#(#('www.seaside.st' '/www.seaside.st') #('http://www.seaside.st:443/' 'http://www.seaside.st:443/') #('https://www.seaside.st:80/' 'https://www.seaside.st:80/') #('http://www.seaside.st:/' 'http://www.seaside.st/') #('http://' '/') #('http://@' '/') #('http://@www.seaside.st/' 'http://@www.seaside.st/') #('http://:lukas@www.seaside.st/' 'http://:lukas@www.seaside.st/') #('http://lukas:@www.seaside.st/' 'http://lukas:@www.seaside.st/') #('http://www.seaside.st' 'http://www.seaside.st/') #('http://www.seaside.st//' 'http://www.seaside.st/') #('http://www.seaside.st/.' 'http://www.seaside.st/') #('http://www.seaside.st/./' 'http://www.seaside.st/') #('http://www.seaside.st/..' 'http://www.seaside.st/') #('http://www.seaside.st/../' 'http://www.seaside.st/') #('http://www.seaside.st/?' 'http://www.seaside.st/') #('http://www.seaside.st/??' 'http://www.seaside.st/?%3F') #('http://www.seaside.st/?=2' 'http://www.seaside.st/') #('http://www.seaside.st/?&' 'http://www.seaside.st/') #('http://www.seaside.st/?1==' 'http://www.seaside.st/?1=%3D') #('http://www.seaside.st/?1=2&' 'http://www.seaside.st/?1=2') #('http://www.seaside.st/#' 'http://www.seaside.st/') #('http://www.seaside.st/##' 'http://www.seaside.st/#%23') #('http://www.seaside.st/#?a=b' 'http://www.seaside.st/#%3Fa%3Db'))-=JUAMPI=-start: arg1  self attributes at: 'start' put: arg1-=JUAMPI=-document: arg1 mimeType: arg2  self document: (arg1 seasideMimeDocument           mimeType: arg2;           yourself)-=JUAMPI=-createRegistry  ^WADispatcher new register: (WARedirectingApplication new           sessionClass: WATestSession;           cache: WAUnidirectionalCache new;           yourself) at: self registryName-=JUAMPI=-from  ^from-=JUAMPI=-width: arg1  self attributes at: 'width' put: arg1-=JUAMPI=-copy  ^self error: 'SystemConfigurations are singletons and should not be copied.'-=JUAMPI=-testContents  file contents: #(83 101 97 115 105 100 101) asByteArray.  self assert: file rawContents = #(83 101 97 115 105 100 101) asByteArray.  self assert: (file contentsDecodedUsing: 'ISO-8859-1') = 'Seaside'-=JUAMPI=-ports: arg1  ports := arg1-=JUAMPI=-urlForAction: arg1  ^self actionUrl withField: (self callbacks store: (WAActionCallback on: arg1))-=JUAMPI=-localAttributeAt: arg1 ifAbsent: arg2  ^arg2 value-=JUAMPI=-destroy  super destroy.  urlEncoder := xmlEncoder := nil-=JUAMPI=-< arg1  ^major < arg1 major or: [ major = arg1 major and: [ minor < arg1 minor ] ]-=JUAMPI=-canAnswer  ^self decorations anySatisfy: [:arg1 |  arg1 isKindOf: WAAnswerHandler ]-=JUAMPI=-initializeWithBlock: arg1  self initialize.  block := arg1-=JUAMPI=-children  ^groups-=JUAMPI=-version: arg1  version := arg1-=JUAMPI=-execute  self handler parent defaultName: self handler name-=JUAMPI=-testPostFields  | tmp1 tmp2 |  tmp1 := WARequest method: 'POST' uri: '/foo?bar=1'.  self     deny: tmp1 isXmlHttpRequest;     assert: tmp1 headers class equals: WAHeaderFields;     assert: tmp1 remoteAddress isNil;     assert: tmp1 isPost;     assert: tmp1 sslSessionId isNil.  tmp2 := Dictionary new.  tmp2 at: 'content-type' put: WAMimeType formUrlencoded greaseString.  tmp1 setHeaders: tmp2.  tmp1 setBody: 'baz=2&bar=3'.  tmp1 setPostFields: (WARequestFields new           at: 'baz' put: '2';           at: 'bar' put: '3';           yourself).  self assert: tmp1 postFields size = 2.  self assert: (tmp1 postFields at: 'baz') = '2'.  self assert: (tmp1 postFields at: 'bar') = '3'.  self assert: tmp1 queryFields size = 1.  self assert: (tmp1 queryFields at: 'bar') = '1'.  self assert: tmp1 fields size = 3.  self assert: (tmp1 fields at: 'bar') = '1'.  self assert: (tmp1 fields at: 'baz') = '2'-=JUAMPI=-renderContentOn: arg1  arg1 paragraph: [ arg1 popupAnchor           callback: [ self batchFunctionalTestLoop ];           with: 'popup'.        arg1 break.        arg1 popupAnchor           extent: 300 @ 300;           callback: [ self batchFunctionalTestLoop ];           with: 'popup with extent'.        arg1 break.        arg1 popupAnchor           position: 100 @ 100;           callback: [ self batchFunctionalTestLoop ];           with: 'popup with position'.        arg1 break.        arg1 popupAnchor           location: true;           callback: [ self batchFunctionalTestLoop ];           with: 'popup with location'.        arg1 break.        arg1 popupAnchor           resizable: false;           callback: [ self batchFunctionalTestLoop ];           with: 'popup not resizable'.        arg1 break.        arg1 popupAnchor           resizable: false;           extent: 300 @ 300;           position: 50 @ 50;           callback: [ self popupCloseTest ];           with: 'popup with close button' ]-=JUAMPI=-newStrategy  ^WAIPSessionTrackingStrategy new-=JUAMPI=-span: arg1  self attributes at: 'span' put: arg1-=JUAMPI=-media: arg1  self attributes at: 'media' put: arg1-=JUAMPI=-start  self application initialContinuationClass new handle: self requestContext-=JUAMPI=-renderContentOn: arg1  self renderExplanationOn: arg1.  self renderSwapParentOn: arg1-=JUAMPI=-testBody  | tmp1 |  tmp1 := WAHtmlCanvas builder render: [:arg1 |  arg1 unorderedList: [ arg1 listItem: 'an item' ] ].  self assert: tmp1 = '<ul><li>an item</li></ul>'-=JUAMPI=-isActionContinuation  ^self class isActionContinuation-=JUAMPI=-verifyBrowserSessionIDFor: arg1  | tmp1 |  tmp1 := arg1 request cookieAt: self browserSessionIDCookieKey.  ^tmp1 notNil and: [ tmp1 value = self browserSessionID ]-=JUAMPI=-seasidePossibleCauses  ^#('you included self in the return value of #children' 'You''re probably missing a return (^) somewhere.')-=JUAMPI=-testEmpty  | tmp1 |  tmp1 := strategy keyFromContext: self requestContext.  self assert: tmp1 isNil-=JUAMPI=-initializeOn: arg1 mimeType: arg2 fileName: arg3  self initialize.  self contents: arg1.  self mimeType: arg2.  self fileName: arg3-=JUAMPI=-dispatcher: arg1  dispatcher := arg1-=JUAMPI=-children  ^Array with: inputElements-=JUAMPI=-select: arg1  self date: arg1.  selectBlock value: arg1-=JUAMPI=-children  ^Array with: trail with: component-=JUAMPI=-ruby  ^self tag: 'ruby'-=JUAMPI=-initializeWithSnapshot: arg1 renderContext: arg2  self initializeWithSnapshot: arg1.  renderContext := arg2-=JUAMPI=-raiseHalt  | tmp1 |  self halt.  tmp1 := self requestContext.  self inform: 'To be displayed' onAnswer: [  ]-=JUAMPI=-renderAcceptCharsetFor: arg1 on: arg2  arg2 definitionTerm: 'Accept-Charset:'.  self renderQualifiedValues: arg1 acceptCharset on: arg2-=JUAMPI=-encodeOn: arg1 usingQuotes: arg2  username isNil ifFalse: [ arg2 ifTrue: [ arg1 nextPut: $" ].        arg1 nextPutAll: username.        arg2 ifTrue: [ arg1 nextPut: $" ].        arg1 nextPutAll: ' <' ].  arg1 nextPutAll: address.  username isNil ifFalse: [ arg1 nextPut: $> ]-=JUAMPI=-type  ^nil-=JUAMPI=-assert: arg1 at: arg2 main: arg3 sub: arg4 quality: arg5  | tmp1 tmp2 |  tmp1 := arg1 at: arg2.  self assert: (tmp1 isKindOf: WAQualifiedValue).  self assert: tmp1 quality = arg5.  tmp2 := tmp1 value.  self assert: (tmp2 isKindOf: WAMimeType).  self assert: tmp2 main = arg3.  self assert: tmp2 sub = arg4-=JUAMPI=-testDoNotCache  self response doNotCache.  self assert: (self response headerAt: 'Pragma') = 'no-cache'.  self assert: (self response headerAt: 'Expires') notNil.  self assert: (self response headerAt: 'Cache-Control') = 'no-cache, max-age=0, must-revalidate, no-store'-=JUAMPI=-renderToolsOn: arg1  arg1 paragraph: [ self canAnswer ifTrue: [ self renderAnsweringToolsOn: arg1 ] ifFalse: [ self renderNotAnsweringToolsOn: arg1 ] ]-=JUAMPI=-cacheEntryRemoved: arg1  (arg1 respondsTo: #unregistered) ifTrue: [ [ arg1 unregistered ] on: Error do: [:arg2 |   ] ]-=JUAMPI=-tableHeading  ^self brush: WATableHeadingTag new-=JUAMPI=-tag  ^'input'-=JUAMPI=-store: arg1  | tmp1 |  [ tmp1 := WAKeyGenerator current keyOfLength: self keySize.  self at: tmp1 put: arg1 overwrite: false ] whileFalse.  ^tmp1-=JUAMPI=-buttons  ^#(save)-=JUAMPI=-sendFailFor: arg1  | tmp1 |  tmp1 := WAEmailMessage from: self from to: self to subject: (self subjectFor: arg1).  tmp1 body: (self bodyFor: arg1).  tmp1 send-=JUAMPI=-visitStringAttribute: arg1  self html textInput     value: (arg1 stringForValue: (self configuration at: arg1 key));     callback: [:arg2 |  self configuration takeValueFromString: arg2 forAttribute: arg1 ]-=JUAMPI=-isCommitted  ^false-=JUAMPI=-buildTable  ^WATableReport new     rowPeriod: 1;     rowColors: #('#eee' 'white');     rows: self notifications;     columns: (Array with: (WAReportColumn selector: #messageText title: 'Deprecated') with: (WAReportColumn selector: #details title: 'Details'));     yourself-=JUAMPI=-dispatchCallback  ^self name: (self storeCallback: WADispatchCallback new)-=JUAMPI=-testCopy  | tmp1 tmp2 |  cache at: 1 put: '1'.  cache at: 2 put: '2'.  tmp1 := cache copy.  tmp1 at: 1 put: '1a'.  tmp1 at: 3 put: '3'.  self assert: (cache at: 1 ifAbsent: [ self assert: false ]) = '1'.  self assert: (cache at: 2 ifAbsent: [ self assert: false ]) = '2'.  tmp2 := false.  cache at: 3 ifAbsent: [ tmp2 := true ].  self assert: tmp2.  self assert: (tmp1 at: 1 ifAbsent: [ self assert: false ]) = '1a'.  self assert: (cache at: 2 ifAbsent: [ self assert: false ]) = '2'.  self assert: (tmp1 at: 3 ifAbsent: [ self assert: false ]) = '3'-=JUAMPI=-cssClass  ^cssClass-=JUAMPI=-span: arg1  self attributes at: 'rbspan' put: arg1-=JUAMPI=-tag  ^'track'-=JUAMPI=-testFragment  url fragment: 'id'.  self assert: url fragment = 'id'.  self assert: url greaseString = '/#id'-=JUAMPI=-created  self status: WAResponse statusCreated-=JUAMPI=-destroy  headers := cookies := nil-=JUAMPI=-discard  ^discard-=JUAMPI=-onReset: arg1  self document scriptGenerator event: 'reset' do: arg1 on: self-=JUAMPI=-imageUpTime  ^DateAndTime now - self imageBootTime-=JUAMPI=-initialize  super initialize.  self reset-=JUAMPI=-onLoadedMetadata: arg1  self document scriptGenerator event: 'loadedmetadata' do: arg1 on: self-=JUAMPI=-main: arg1  main := arg1-=JUAMPI=-renderContentOn: arg1  duration := 0.  referenceDict ifNil: [ referenceDict := self class referenceDict ].  self renderExplanationOn: arg1.  self renderAnchorsOn: arg1.  self renderScriptOn: arg1.  self renderTableOn: arg1.  self renderLineBreaksOn: arg1.  self renderCallbackOn: arg1.  self renderFormOn: arg1.  self renderIdTestOn: arg1.  self renderTextOn: arg1.  self renderHtmlTextOn: arg1.  self renderBreakOn: arg1.  self renderNativeBreakOn: arg1.  arg1 div     class: 'result';     with: 'Seaside Performance Index: ' , duration greaseString-=JUAMPI=-commandLineArgumentsFrom: arg1  | tmp1 |  tmp1 := ((3 to: 1000) collect: [:arg2 |  arg1 vm getSystemAttribute: arg2 ]) select: [:arg2 |  arg2 notNil ].  ^String streamContents: [:arg3 |  tmp1 do: [:arg2 |  arg3 nextPutAll: arg2 ] separatedBy: [ arg3 space ] ]-=JUAMPI=-updateUrl: arg1  super updateUrl: arg1.  (WAVisiblePresenterGuide client: (WAUpdateUrlVisitor url: arg1)) start: self presenter-=JUAMPI=-reversed: arg1  self attributes at: 'reversed' put: arg1-=JUAMPI=-testPageExpired  | tmp1 |  tmp1 := WAResponseGenerator on: self requestContext.  self requestContext response nextPutAll: 'oops'.  tmp1 pageExpired.  self assertContents: 'This page has expired, please use the back-button to navigate to the last valid page.'-=JUAMPI=-description  ^description isNil ifFalse: [ description ] ifTrue: [ self buildDescription ]-=JUAMPI=-renderInline: arg1 key: arg2 on: arg3  self renderInline: arg1 factor: 1 key: arg2 on: arg3-=JUAMPI=-tearDown  super tearDown.  process isNil ifFalse: [ GRPlatform current terminateProcess: process ].  process2 isNil ifFalse: [ GRPlatform current terminateProcess: process2 ].  mutex := nil.  process := nil.  process2 := nil-=JUAMPI=-snapshot  ^snapshot-=JUAMPI=-footer: arg1  self footer with: arg1-=JUAMPI=-visitIntegerAttribute: arg1  self visitNumberAttribute: arg1-=JUAMPI=-renderRowForWeek: arg1 on: arg2  arg2 tableRow: [ 0 to: 6 do: [:arg3 |  self renderCellForDate: (arg1 addDays: arg3) on: arg2 ] ]-=JUAMPI=-challenge: arg1  self attributeAt: 'challenge' put: arg1-=JUAMPI=-script: arg1  self script with: arg1-=JUAMPI=-tableColumnGroup  ^self brush: WATableColumnGroupTag new-=JUAMPI=-getSearchContextFor: arg1  ^self getSearchContextFor: arg1 ifAbsent: [ WAAttributeNotFound signalWithKey: arg1 ]-=JUAMPI=-testAssociationsDo  | tmp1 tmp2 |  one at: 'foo' put: 1.  two at: 'bar' put: 2.  two at: 'foo' put: 3.  tmp1 := OrderedCollection new.  tmp2 := OrderedCollection new.  merged associationsDo: [:arg1 |  tmp1 add: arg1 key.        tmp2 add: arg1 value ].  self assert: tmp1 asArray = #('foo' 'bar' 'foo').  self assert: tmp2 asArray = #(1 2 3)-=JUAMPI=-hasCallback  ^callbackBlock notNil-=JUAMPI=-classesInTheSelectedPackage  ^selectedPackage ifNil: [ #() ] ifNotNil: [ selectedPackage classes ]-=JUAMPI=-testAsMIMEDocumentStream  | tmp1 |  tmp1 := 'dolphin' readStream seasideMimeDocument.  self assert: tmp1 contentType = WAMimeType textPlain.  self assert: tmp1 content = 'dolphin'-=JUAMPI=-closeThisPopup  ^self respond: [:arg1 |  arg1           contentType: WAMimeType textHtml;           nextPutAll: (WAHtmlCanvas builder                 fullDocument: true;                 rootBlock: [:arg2 |  arg2                       title: 'Seaside';                       beHtml5 ];                 render: [:arg3 |  arg3 script: 'window.close();' ]) ]-=JUAMPI=-testRemoveFilter  | tmp1 tmp2 |  handler addFilter: (tmp1 := WARequestFilter new).  handler addFilter: (tmp2 := WARequestFilter new).  self assert: (handler removeFilter: WARequestFilter new) isNil.  self assert: (handler removeFilter: tmp1) = tmp1.  self assert: handler filters size = 1.  self assert: handler filters first = tmp2.  self assert: (handler removeFilter: tmp2) = tmp2.  self assert: handler filters isEmpty.  self assert: (handler removeFilter: tmp2) isNil-=JUAMPI=-renderContentOn: arg1  self actions do: [:arg2 |  arg2 numArgs = 0 ifTrue: [ self renderLink: arg2 on: arg1 ] ifFalse: [ self renderInput: arg2 on: arg1 ] ]-=JUAMPI=-status: arg1 message: arg2  self committedCheck.  super status: arg1 message: arg2-=JUAMPI=-states  ^Array with: current-=JUAMPI=-year: arg1  year := arg1 greaseInteger ifNil: [ 1900 ]-=JUAMPI=-renderContentOn: arg1  arg1 heading: count.  arg1 anchor     callback: [ self increase ];     with: '++'.  arg1 space.  arg1 anchor     callback: [ self decrease ];     with: '--'-=JUAMPI=-newStrategy  ^WACookieForBrowserIPForCrawlerTrackingStrategy new-=JUAMPI=-testActionCallback  | tmp1 tmp2 |  tmp1 := registry store: (WAActionCallback on: [ log add: 1 ]).  tmp2 := registry store: (WAActionCallback on: [ log add: 2 ]).  self should: [ self request: (WARequestFields new                 at: tmp1 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #(1).  self should: [ self request: (WARequestFields new                 at: tmp2 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #(2).  self should: [ self request: (WARequestFields new                 at: tmp2 put: nil;                 at: tmp1 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #(1).  self should: [ self request: (WARequestFields new                 at: tmp1 put: nil;                 at: tmp1 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #(1)-=JUAMPI=-isReversed  ^isReversed-=JUAMPI=-initialize  | tmp1 |  super initialize.  tmp1 := self requestContext charSet.  tmp1 isNil ifTrue: [ self acceptCharset: self defaultUrlCharset ] ifFalse: [ self acceptCharset: tmp1 ]-=JUAMPI=-rawBody  ^body-=JUAMPI=-