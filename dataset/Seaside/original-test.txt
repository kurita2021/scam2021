testEncodedLatin1Url  self assert: (String with: Character space with: (Character codePoint: 233) with: (Character codePoint: 228)) urlEncodedGives: '%20%E9%E4'-=JUAMPI=-addValue: anObject  values add: anObject-=JUAMPI=-testTableColumnGroup  self assert: [:html |  html tableColumnGroup ] gives: '<colgroup></colgroup>'.  self assert: [:html |  html tableColumnGroup           character: '.';           characterOffset: 2 ] gives: '<colgroup char="." charoff="2"></colgroup>'.  self assert: [:html |  html tableColumnGroup           align: 'right';           verticalAlign: 'top' ] gives: '<colgroup align="right" valign="top"></colgroup>'.  self assert: [:html |  html tableColumnGroup           span: 3;           width: '20' ] gives: '<colgroup span="3" width="20"></colgroup>'-=JUAMPI=-next  | nextIndex |  nextIndex := self selectionIndex \\ classes size + 1.  self selected: (classes at: nextIndex)-=JUAMPI=-onContextMenu: anObject  self document scriptGenerator event: 'contextmenu' do: anObject on: self-=JUAMPI=-version  ^version-=JUAMPI=-style  ^self add: (WAStyleElement root: self)-=JUAMPI=-confirm: aString  ^self wait: [:cc |  self confirm: aString onAnswer: cc ]-=JUAMPI=-<= other  ^self quality <= other quality-=JUAMPI=-removeFromRemovals  self expression removals: (self removeAll: self selectedRemovals from: self expression removals)-=JUAMPI=-day: anObject  day := anObject-=JUAMPI=-initializeOn: aStream  self initialize-=JUAMPI=-notFound  self ifResetPossible: [ self response           notFound;           contentType: WAMimeType textHtml ].  self response nextPutAll: (WAHtmlCanvas builder           fullDocument: true;           rootBlock: [:root |  root title: 'Not Found' ];           render: [:html |  html heading: [ html text: 'Error: "'.                    html render: self request url.                    html text: '" not found' ] ])-=JUAMPI=-rawAddAllToPath: aCollectionOfStrings  aCollectionOfStrings do: [:each |  self rawAddToPath: each ]-=JUAMPI=-addTelevision  self addMedia: 'tv'-=JUAMPI=-printMilliSeconds: aNumber  ^aNumber > 2000 ifTrue: [ self printDuration: (Duration milliseconds: aNumber greaseInteger) ] ifFalse: [ aNumber > 2 ifTrue: [ aNumber greaseInteger printString , ' ms' ] ifFalse: [ (GRNumberPrinter new precision: 2) , ' ms' print: aNumber ] ]-=JUAMPI=-application  ^self parent-=JUAMPI=-renderContentOn: aRenderer  self childrenDo: [:each |  aRenderer render: each ]-=JUAMPI=-renderContentOn: html  html select     list: self options;     selected: self selection;     callback: [:value |  self selection: value ]-=JUAMPI=-renderContentOn: html  self renderExplanationOn: html.  html table: [ self renderLabel: 'Codec:' value: self requestContext codec on: html.        self renderLabel: 'Session:' value: self requestContext session on: html.        self renderLabel: 'Application:' value: self requestContext application on: html.        self renderLabel: 'Request:' value: self requestContext request on: html.        self renderLabel: 'Response:' value: self requestContext response on: html.        self renderRequestHandlersOn: html.        self renderPropertiesOn: html ]-=JUAMPI=-renderConfigurationOn: html  html form: [ html paragraph: [ self renderTypeOn: html.              html space.              self renderStartOn: html.              html space.              self renderReversedOn: html.              html space.              html submitButton ] ]-=JUAMPI=-hash  ^self host hash bitXor: self path hash-=JUAMPI=-stream  ^contentsStream-=JUAMPI=-unableToResumeResponse  | content |  content := WAHtmlCanvas builder     fullDocument: true;     rootBlock: [:root |  root title: 'Unable to proceed' ];     render: [:html |  html heading           level1;           with: 'Unable to proceed - hit the back button, and try again'.        html paragraph: 'Some exceptions cannot be resumed. You will usually see this page if you hit Proceed while debugging one of these exceptions. Your request was aborted but you can retry it by refreshing the page.' ].  self requestContext respond: [:response |  response           internalError;           contentType: self application contentType;           nextPutAll: content ]-=JUAMPI=-cellspacing: anInteger  self attributes at: 'cellspacing' put: anInteger-=JUAMPI=-testHandleFileRequest  | response |  self requestContextWithUrl: '/root/files/WATestingFiles/sample.js'.  self requestContext consumer     next;     next.  response := self responseAfter: [ handler handle: self requestContext ].  self assert: response status = 200.  self assert: response contentType main = 'application'.  self assert: response contentType sub = 'javascript'.  self assert: response contents = WATestingFiles new sampleJs-=JUAMPI=-utf16beString  ^self asString: #(0 220 0 98 0 232 0 114 0 115 0 116 0 114 0 238 0 241 0 103 0 233)-=JUAMPI=-stringForValue: anObject  ^anObject isNil ifFalse: [ anObject greaseString ]-=JUAMPI=-testEncodedXmlUnicde  | lineSeparator paragraphSeparator snowMan string |  lineSeparator := Character codePoint: 16r2028.  paragraphSeparator := Character codePoint: 16r2028.  paragraphSeparator := Character codePoint: 16r2028.  snowMan := Character codePoint: 16r2603.  string := (String with: lineSeparator) , (String with: paragraphSeparator) , (String with: snowMan).  self assert: string xmlEncodedGives: string-=JUAMPI=-preferenceAt: aSymbol  ^self configuration at: aSymbol-=JUAMPI=-builder  ^super builder     resourceUrl: (WAUrl absolute: self resourceBaseUrl);     yourself-=JUAMPI=-batchSize: aSize  batcher batchSize: aSize-=JUAMPI=-updateRoot: aRoot  super updateRoot: aRoot.  aRoot stylesheet url: WAExamplesLibrary / #todoCss.  aRoot javascript url: JQDeploymentLibrary / #jQueryJs-=JUAMPI=-childrenOf: aNode  | children |  children := self childrenBlock value: aNode.  ^children ifNil: [ Array new ]-=JUAMPI=-testAddAllFilesIn  | workingDirectory directory library |  workingDirectory := FileSystem disk workingDirectory.  workingDirectory = FileSystem root ifTrue: [ workingDirectory := FileLocator imageDirectory ].  directory := workingDirectory / 'XXXUsedBySeasideTests'.  GRPlatform current ensureExistenceOfFolder: directory pathString.  [ [ (directory / '.Seaside_Store') ensureCreateFile.  (directory / 'foo') ensureCreateFile.  GRPlatform current doSilently: [ library := WAFileLibrary subclass: #XXXTestFileLibrary instanceVariableNames: '' classVariableNames: '' poolDictionaries: '' category: 'Uncategorized'.        [ library addAllFilesIn: directory fullName.        self assert: library selectors size = 1 ] ensure: [ library removeFromSystem ] ] ] ensure: [ directory children do: [:each |  each delete ] ] ] ensure: [ directory delete ]-=JUAMPI=-removeAll: aRemoveCollection from: aCollection  ^aCollection reject: [:each |  aRemoveCollection includes: each ]-=JUAMPI=-parseProperty  | name value |  name := self parseString.  self expectChar: $:.  value := self parseValue.  ^self createProperty: name with: value-=JUAMPI=-nextId  ^lastId := 'id' , self callbacks advanceKey-=JUAMPI=-testSettingRegularPath  | cookie |  cookie := WACookie new     key: 'name';     value: 'homer';     path: '/springfield/powerplant';     yourself.  self assert: cookie path equals: '/springfield/powerplant'.  self assert: cookie pathUnencoded equals: '/springfield/powerplant'.  self assert: cookie pathEncoded equals: '/springfield/powerplant'-=JUAMPI=-onVolumeChange: anObject  self document scriptGenerator event: 'volumechange' do: anObject on: self-=JUAMPI=-testRefreshAfterLocation  self response refreshAfter: 3 seconds location: 'http://www.seaside.st/'.  self assertLines: #('HTTP/1.1 200 OK' 'Refresh: 3; http://www.seaside.st/' 'Content-Length: 0' '')-=JUAMPI=-openOn: aDocument  super openOn: aDocument.  self writePreambleOn: aDocument-=JUAMPI=-month  ^month-=JUAMPI=-renderConfigurationOn: html  self subclassResponsibility-=JUAMPI=-addCc: anEmailAddress  ^self cc add: anEmailAddress-=JUAMPI=-pathStringSafeUnencoded  | stream |  stream := WriteStream on: (String new: self pathStringUnencodedSize).  self pathUnencodedOn: stream.  ^stream contents-=JUAMPI=-keyFromContext: aRequestContext  self subclassResponsibility-=JUAMPI=-renderGroup: aBlock named: aName on: html  html div     class: 'group';     with: [ html div           class: 'groupTitle';           with: [ html label: aName.              self renderActionsOn: html ].        self collapsed ifFalse: [ self showHelp ifTrue: [ html div                       class: 'help';                       with: [ html code: (self class helpTextFor: group) ] ] ifFalse: [ html div                       class: 'groupContent';                       with: aBlock ] ] ]-=JUAMPI=-renderButtonsOn: html  html paragraph: [ dialog ifTrue: [ html submitButton on: #ok of: self ].        html submitButton on: #apply of: self.        html cancelButton on: #cancel of: self ]-=JUAMPI=-isServerRunning  ^self serverInstance isRunning-=JUAMPI=-testDeleteSessionCookieDomain  | context request response cookie |  request := self requestWithMethod: 'GET'.  request setCookies: (Array with: (WARequestCookie key: '_s' value: 'goner')).  response := WABufferedResponse new.  context := WARequestContext request: request response: response.  [ handler handle: context ] on: WAResponseNotification do: [:notification |   ].  self assert: response status = 302.  self assert: response cookies size = 1.  cookie := response cookies first.  self assert: cookie domain = 'www.seaside.st'-=JUAMPI=-attributeAt: aSymbol ifAbsent: aBlock  ^self allAttributes at: aSymbol ifAbsent: aBlock-=JUAMPI=-flush  -=JUAMPI=-classesWithManyInstances  ^Array streamContents: [:stream |  Smalltalk globals keysAndValuesDo: [:key :value |  ((value isKindOf: Class) and: [ key == value name ]) ifTrue: [ | class |                    class := Smalltalk globals at: key.                    (self shouldConsider: class) ifTrue: [ stream nextPut: class ] ] ] ]-=JUAMPI=-testUrlOf  self assert: (WATestingFiles / #samplePng) greaseString = '/files/WATestingFiles/sample.png'-=JUAMPI=-request: aRequestString label: aLabelString  ^self wait: [:cc |  self request: aRequestString label: aLabelString onAnswer: cc ]-=JUAMPI=-tableData  ^self brush: WATableDataTag new-=JUAMPI=-browserSessionIDCookieKey  ^'seaside_browser_session'-=JUAMPI=-size  ^dictionary size-=JUAMPI=-ensureId  ^self attributes at: 'id' ifAbsentPut: [ canvas nextId ]-=JUAMPI=-buildDescription  | d |  d := WAConfigurationDescription new.  self describeOn: d.  ^description := d-=JUAMPI=-renderContentOn: html  self renderExplanationOn: html.  self renderLinksOn: html-=JUAMPI=-document  ^document-=JUAMPI=-nextPutAll: aString  self subclassResponsibility-=JUAMPI=-actionUrl  ^actionUrl-=JUAMPI=-testLanguageName  | locale |  locale := WALocale fromString: 'de'.  self assert: locale languageName = 'German'.  locale := WALocale fromString: 'gsw'.  self assert: locale languageName = 'Swiss German; Alemannic; Alsatian'-=JUAMPI=-cookies  ^self requestContext request cookies-=JUAMPI=-testTakeServerParametersFromRequestBase  | request |  request := (WARequest method: 'GET' uri: (WAUrl new           scheme: 'https';           yourself))     setHeaders: (Dictionary new           at: 'host' put: 'www.thehost.com:1337';           yourself);     yourself.  url takeServerParametersFromRequest: request.  self assert: url greaseString = 'https://www.thehost.com:1337/'-=JUAMPI=-renderRow: anObject index: aNumber on: html  self renderHeadingForRow: anObject on: html.  self datesDo: [:date |  self renderCellForDate: date row: anObject index: aNumber on: html ] separatedBy: [ self renderHeadingSpacerOn: html ]-=JUAMPI=-handleFiltered: aRequestContext  aRequestContext request isPrefetch ifTrue: [ self handlePrefetch: aRequestContext ] ifFalse: [ (self isImplemented: aRequestContext request method) ifTrue: [ super handleFiltered: aRequestContext ] ifFalse: [ aRequestContext responseGenerator                 notImplemented;                 respond ] ]-=JUAMPI=-testWithoutValue  self should: [ WACurrentRequestContext value ] raise: WARequestContextNotFound-=JUAMPI=-addHaloVisitor: aHaloVisitor  visitor := visitor addHaloVisitor: aHaloVisitor-=JUAMPI=-<= otherVersion  ^self = otherVersion or: [ self < otherVersion ]-=JUAMPI=-renderContentOn: html  html table     cellspacing: 0;     cellpadding: 0;     style: 'width: 100%';     with: [ html tableRow: [ html tableData                 verticalAlign: 'top';                 style: 'padding: 4px; width: 250px;';                 with: [ self renderDispatcherOn: html ].              html tableData                 verticalAlign: 'top';                 style: 'padding: 4px';                 with: [ self renderEditorOn: html ] ] ]-=JUAMPI=-next  ^path removeFirst-=JUAMPI=-testNoFieldCookieHandlerPresent  | response context key |  registry := self createRegistryWithCookiesEnabled.  key := self registerNewHandler.  context := self createRequestContextWithFieldKey: nil cookieKey: key.  response := self dispatch: context to: registry.  self assertNoCookies: response.  self assertDispatched: response-=JUAMPI=-handle: aRequestContext  aRequestContext push: self during: [ self filter handleFiltered: aRequestContext ]-=JUAMPI=-addCallback  self hasCallback ifFalse: [ canvas flush.        ^self ].  canvas hiddenInput     callback: [ callbackBlock value: self setValueWithNewTime ];     with: nil-=JUAMPI=-index: aNumber  valueBlock := [:row |  row at: aNumber ]-=JUAMPI=-absoluteExamples  ^#('http://www.seaside.st/' 'http://www.seaside.st:8080/' 'http://lukas@www.seaside.st/' 'http://lukas:renggli@www.seaside.st/' 'http://www.seaside.st/resources' 'http://www.seaside.st/styles/favicon.png' 'http://www.seaside.st/%24%26%2B%2C%2F%3A%3B%3D%3F%40' 'http://www.seaside.st/#top' 'http://www.seaside.st/styles#top' 'http://www.seaside.st/about/screenshots?_c' 'http://www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn' 'http://www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ' 'http://www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ&_n&47' 'http://www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ&_n&47#149361951' 'http://www.seaside.st/;jsessionid=42?redirectcounter=1' 'http://www.seaside.st/seaside/files;old/WAStandardFiles;key1=value1,value3;key2=value2/seaside.jpg;jsessionid=42?redirectcounter=1' 'http://www.seaside.st/seaside/WAStandardFiles;session%3Aid=42?redirectcounter=1' 'http://lukas:renggli@www.seaside.st/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ&_n&47#149361951' 'http://lukas:renggli@www.seaside.st:8080/about/screenshots?_s=XrkNBpErXTKlVRhn&_k=lZWXfESZ&_n&47#149361951')-=JUAMPI=-states  ^Array with: self-=JUAMPI=-at: aKey put: anObject  | present value |  present := false.  value := WABulkReapingCacheEntry value: anObject.  dictionary at: aKey ifAbsentPut: [ present := true.        value ].  present ifTrue: [ ^anObject ].  dictionary at: aKey put: value.  ^anObject-=JUAMPI=-requestFor: aNativeRequest  ^(WARequest method: (self requestMethodFor: aNativeRequest) uri: (self requestUrlFor: aNativeRequest) version: (self requestVersionFor: aNativeRequest))     setHeaders: (self requestHeadersFor: aNativeRequest);     setBody: (self requestBodyFor: aNativeRequest);     setPostFields: (self requestFieldsFor: aNativeRequest);     setCookies: (self requestCookiesFor: aNativeRequest);     setRemoteAddress: (self requestAddressFor: aNativeRequest);     setSslSessionId: (self sslSessionIdFor: aNativeRequest);     yourself-=JUAMPI=-children  ^Array with: navigation-=JUAMPI=-testForm  | handler context |  self formClassExists ifFalse: [ ^self ].  handler := WADocumentHandler document: self sampleForm mimeType: self sampleForm defaultMimeType fileName: nil.  context := WARequestContext request: WARequest new response: WABufferedResponse new.  [ handler handle: context ] on: WAResponseNotification do: [:n |   ].  self assert: context response notNil-=JUAMPI=-initializeOn: aStream  super initializeOn: aStream.  contentsStream := aStream-=JUAMPI=-inlineWithFileName: aString  aString notNil ifTrue: [ self headerAt: 'Content-Disposition' put: 'inline; filename="' , aString greaseString , '"' ]-=JUAMPI=-testAddKeyOfSessionToUrlCookieAlreadyPresent  | context uri cookie1 |  context := self requestContext.  cookie1 := WARequestCookie key: strategy keyCookieName value: 'The_Metaphor'.  context request setCookies: (Array with: cookie1).  uri := context request uri copy.  strategy addKey: 'The_Metaphor' toUrl: uri.  self assert: uri greaseString = '/1/2'-=JUAMPI=-startRow  ^rowSelectionStart min: rowSelectionEnd-=JUAMPI=-postCopy  super postCopy.  expressions := expressions copy.  parents := parents copy-=JUAMPI=-newHandler  ^WARegistry new-=JUAMPI=-verifyRequest: aRequest  ^self authenticator verifyPassword: aRequest password forUser: aRequest user-=JUAMPI=-addKey: aString toContext: aRequestContext  ^(self strategyFor: aRequestContext) addKey: aString toContext: aRequestContext-=JUAMPI=-removeExpressionAt: aSymbol  ^self removeExpressionAt: aSymbol ifAbsent: [ nil ]-=JUAMPI=-jumpToAnchor: aString  | actionContinuation |  actionContinuation := self requestContext handlers detect: [:each |  each isActionContinuation ] ifNone: [ WAIllegalStateException signal: 'You can only send #jumpToAnchor: from within a callback' ].  actionContinuation jumpToAnchor: aString-=JUAMPI=-testExpirePrinting  | cookie |  cookie := WACookie key: 'foo' value: 'bar'.  cookie expiry: (DateAndTime year: 2003 day: 4 hour: 5 minute: 6 second: 7 offset: Duration zero).  self assert: cookie rfc6265String = 'foo=bar; expires=Sat, 04-Jan-2003 05:06:07 GMT; path=/'-=JUAMPI=-setUp  handler := WALegacyRedirectionHandler new-=JUAMPI=-realm  ^realm ifNil: [ realm := 'Seaside' ]-=JUAMPI=-deployFiles  GRPlatform current ensureExistenceOfFolder: self name.  self fileSelectors do: [:each |  | folderInfo |        folderInfo := self asFileAndFoldername: each.        GRPlatform current ensureExistenceOfFolder: folderInfo first.        GRPlatform current write: (self fileResourceOf: each) contents value toFile: folderInfo second inFolder: folderInfo first ]-=JUAMPI=-onSelect: anObject  self document scriptGenerator event: 'select' do: anObject on: self-=JUAMPI=-addXmlNamespaces  self htmlAttributes     at: 'xmlns' put: 'http://www.w3.org/1999/xhtml';     at: 'xml:lang' put: 'en';     at: 'lang' put: 'en'-=JUAMPI=-summary  ^self tag: 'summary'-=JUAMPI=-context  ^context-=JUAMPI=-visitPainter: aPainter  aPainter updateRoot: self root-=JUAMPI=-value: anObject  value := anObject-=JUAMPI=-libraries  ^(self preferenceAt: #libraries) collect: [:each |  each value ]-=JUAMPI=-handleFiltered: aRequestContext  self responseForContext: aRequestContext-=JUAMPI=-delay  ^delay ifNil: [ 1 ]-=JUAMPI=-createRequest  ^WARequest new-=JUAMPI=-maximumRelativeAge: aStringOrAnInteger  maximumRelativeAge := aStringOrAnInteger asUnsignedInteger-=JUAMPI=-valueForField: anObject  ^anObject-=JUAMPI=-children  ^super children copyWith: cacheEditor-=JUAMPI=-allPresentersDo: aBlock  (WAAllPresenterGuide client: (WAPluggablePresenterVisitor block: aBlock)) start: self-=JUAMPI=-low: anInteger  self attributeAt: 'low' put: anInteger-=JUAMPI=-initialize  super initialize.  ipStrategy := WAIPSessionTrackingStrategy new.  cookieStrategy := WACookieOnlySessionTrackingStrategy new-=JUAMPI=-initialize  super initialize.  self     rows: 'auto';     columns: 'auto'-=JUAMPI=-dateAndTime: anObject  dateSelector date: anObject asDate.  timeSelector time: anObject asTime-=JUAMPI=-subscript  ^self tag: 'sub'-=JUAMPI=-destroy  self shouldDestroy ifTrue: [ self request destroy.        self response destroy.        handlers := request := response := codec := properties := nil ]-=JUAMPI=-defaultConfiguration  ^WAUserConfiguration new     addParent: WARequestHandlingConfiguration instance;     yourself-=JUAMPI=-type  ^'range'-=JUAMPI=-renderRow: aHandler named: aString on: html  html tableRow: [ html tableData: [ self renderRowName: aHandler named: aString on: html ].        html tableData: [ self renderRowDescription: aHandler on: html ] ]-=JUAMPI=-resume: anException  self open: anException.  ^self basicResume: anException-=JUAMPI=-canStop: aServerAdaptor  ^aServerAdaptor isStopped not-=JUAMPI=-renderContext  ^WARenderContext new     actionUrl: WAUrl new;     document: (WAHtmlDocument on: (WriteStream on: String new));     yourself-=JUAMPI=-initialRequest: aRequest  super initialRequest: aRequest.  self requestContext consumer nextIfPresentDo: [:className |  classes do: [:each |  each name greaseString = className ifTrue: [ self selected: each ] ] ]-=JUAMPI=-deleteCookieAt: aKeyString  self deleteCookie: (WACookie key: aKeyString value: '')-=JUAMPI=-startDate: aDate  self clearSelection.  super startDate: aDate-=JUAMPI=-renderSpacerRowOn: html  html div     class: 'dialog-spacer';     with: [ html space ]-=JUAMPI=-attributes: anObject  attributes := anObject-=JUAMPI=-canSelect: aDate  ^canSelectBlock value: aDate-=JUAMPI=-lineBreakOpportunity: aBlock  self lineBreakOpportunity with: aBlock-=JUAMPI=-gone  self status: WAResponse statusGone-=JUAMPI=-initialize  super initialize.  self urlencoded: 'urlencoded'.  self multipart: 'multipart'.  self get: 'get'-=JUAMPI=-setHeaders: headerDictionary  headers := headerDictionary-=JUAMPI=-valueWithArguments: anArray  anArray size = 1 ifFalse: [ ^GRInvalidArgumentCount signal: 'Continuations can only be resumed with one argument.' ].  self value: anArray first-=JUAMPI=-beSubmit  type := 'submit'-=JUAMPI=-priority  ^200-=JUAMPI=-pathElementsIn: aString do: aOneArgumentBlock  GRPlatform subStringsIn: aString splitBy: $/ do: aOneArgumentBlock-=JUAMPI=-lastId  ^lastId-=JUAMPI=-clear  dictionary do: [:value |  self cacheEntryRemoved: value value ].  dictionary removeAll-=JUAMPI=-initializeWithUrl: aUrl  self initialize.  url := aUrl-=JUAMPI=-serverPort: anInteger  self preferenceAt: #serverPort put: anInteger-=JUAMPI=-initialize  super initialize.  self altText: ''-=JUAMPI=-memorySvg  ^'<?xml version="1.0" encoding="UTF-8" standalone="no"?><!-- Created with Inkscape (http://www.inkscape.org/) --><svg   xmlns:dc="http://purl.org/dc/elements/1.1/"   xmlns:cc="http://creativecommons.org/ns#"   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"   xmlns:svg="http://www.w3.org/2000/svg"   xmlns="http://www.w3.org/2000/svg"   xmlns:xlink="http://www.w3.org/1999/xlink"   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"   width="48px"   height="48px"   id="svg1306"   sodipodi:version="0.32"   inkscape:version="0.46"   sodipodi:docbase="/home/jimmac/src/cvs/tango-icon-theme/scalable/apps"   sodipodi:docname="utilities-system-monitor.svg"   inkscape:output_extension="org.inkscape.output.svg.inkscape">  <defs     id="defs1308">    <inkscape:perspective       sodipodi:type="inkscape:persp3d"       inkscape:vp_x="0 : 24 : 1"       inkscape:vp_y="0 : 1000 : 0"       inkscape:vp_z="48 : 24 : 1"       inkscape:persp3d-origin="24 : 16 : 1"       id="perspective69" />    <radialGradient       inkscape:collect="always"       xlink:href="#linearGradient5060"       id="radialGradient5031"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(-2.774389,0,0,1.969706,112.7623,-872.8854)"       cx="605.71429"       cy="486.64789"       fx="605.71429"       fy="486.64789"       r="117.14286" />    <linearGradient       inkscape:collect="always"       id="linearGradient5060">      <stop         style="stop-color:black;stop-opacity:1;"         offset="0"         id="stop5062" />      <stop         style="stop-color:black;stop-opacity:0;"         offset="1"         id="stop5064" />    </linearGradient>    <radialGradient       inkscape:collect="always"       xlink:href="#linearGradient5060"       id="radialGradient5029"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(2.774389,0,0,1.969706,-1891.633,-872.8854)"       cx="605.71429"       cy="486.64789"       fx="605.71429"       fy="486.64789"       r="117.14286" />    <linearGradient       id="linearGradient5048">      <stop         style="stop-color:black;stop-opacity:0;"         offset="0"         id="stop5050" />      <stop         id="stop5056"         offset="0.5"         style="stop-color:black;stop-opacity:1;" />      <stop         style="stop-color:black;stop-opacity:0;"         offset="1"         id="stop5052" />    </linearGradient>    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient5048"       id="linearGradient5027"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(2.774389,0,0,1.969706,-1892.179,-872.8854)"       x1="302.85715"       y1="366.64789"       x2="302.85715"       y2="609.50507" />    <linearGradient       inkscape:collect="always"       id="linearGradient2223">      <stop         style="stop-color:#ffffff;stop-opacity:1;"         offset="0"         id="stop2225" />      <stop         style="stop-color:#ffffff;stop-opacity:0;"         offset="1"         id="stop2229" />    </linearGradient>    <linearGradient       id="linearGradient2222">      <stop         style="stop-color:#5187d6;stop-opacity:1;"         offset="0"         id="stop2224" />      <stop         style="stop-color:#1e4580;stop-opacity:1;"         offset="1"         id="stop2227" />    </linearGradient>    <linearGradient       id="linearGradient3090">      <stop         style="stop-color:#626c07;stop-opacity:1;"         offset="0"         id="stop3092" />      <stop         style="stop-color:#313603;stop-opacity:1;"         offset="1"         id="stop3094" />    </linearGradient>    <linearGradient       inkscape:collect="always"       id="linearGradient2238">      <stop         style="stop-color:#ffffff;stop-opacity:1;"         offset="0"         id="stop2240" />      <stop         style="stop-color:#ffffff;stop-opacity:0;"         offset="1"         id="stop2242" />    </linearGradient>    <linearGradient       id="linearGradient2224">      <stop         style="stop-color:#32342f;stop-opacity:0.54639173;"         offset="0.0000000"         id="stop2226" />      <stop         style="stop-color:#32342f;stop-opacity:0;"         offset="1"         id="stop2228" />    </linearGradient>    <linearGradient       id="linearGradient2214">      <stop         style="stop-color:#a9aaa7;stop-opacity:1.0000000;"         offset="0.0000000"         id="stop2216" />      <stop         style="stop-color:#676964;stop-opacity:1.0000000;"         offset="1.0000000"         id="stop2218" />    </linearGradient>    <linearGradient       id="linearGradient2206">      <stop         style="stop-color:#c3c6c0;stop-opacity:1.0000000;"         offset="0.0000000"         id="stop2208" />      <stop         style="stop-color:#e8eae6;stop-opacity:1.0000000;"         offset="1.0000000"         id="stop2210" />    </linearGradient>    <linearGradient       id="linearGradient2198">      <stop         style="stop-color:#32342f;stop-opacity:1;"         offset="0"         id="stop2200" />      <stop         style="stop-color:#171816;stop-opacity:1.0000000;"         offset="1.0000000"         id="stop2202" />    </linearGradient>    <linearGradient       inkscape:collect="always"       id="linearGradient2180">      <stop         style="stop-color:#ffffff;stop-opacity:1;"         offset="0"         id="stop2182" />      <stop         style="stop-color:#ffffff;stop-opacity:0;"         offset="1"         id="stop2184" />    </linearGradient>    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2206"       id="linearGradient2212"       x1="25.861118"       y1="26.133587"       x2="18.300278"       y2="19.567596"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(0.952387,0.000000,0.000000,1.018339,1.142599,-1.941627)" />    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2214"       id="linearGradient2220"       x1="0.0012142062"       y1="24.012266"       x2="47.998765"       y2="24.012266"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(0.952387,0.000000,0.000000,1.018339,1.142599,-1.941627)" />    <radialGradient       inkscape:collect="always"       xlink:href="#linearGradient2224"       id="radialGradient2230"       cx="24.041630"       cy="42.242130"       fx="24.041630"       fy="42.242130"       r="17.576654"       gradientTransform="matrix(1.000000,0.000000,0.000000,0.304598,-5.757924e-16,29.37527)"       gradientUnits="userSpaceOnUse" />    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2238"       id="linearGradient2244"       x1="20.338758"       y1="19.636894"       x2="46.092255"       y2="39.708324"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(0.952387,0.000000,0.000000,1.015657,1.142599,-0.876325)" />    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2180"       id="linearGradient1340"       gradientUnits="userSpaceOnUse"       gradientTransform="matrix(3.809547,0.000000,0.000000,1.750325,-16.00036,-15.78719)"       x1="8.8207808"       y1="12.53757"       x2="12.499243"       y2="24.238262" />    <radialGradient       inkscape:collect="always"       xlink:href="#linearGradient2222"       id="radialGradient2229"       cx="23.994133"       cy="32.266911"       fx="23.994133"       fy="32.266911"       r="19.088932"       gradientTransform="matrix(1.768625,-1.961257e-23,1.552064e-23,1.387102,-18.44248,-15.29268)"       gradientUnits="userSpaceOnUse" />    <linearGradient       inkscape:collect="always"       xlink:href="#linearGradient2223"       id="linearGradient2231"       x1="35.694206"       y1="37.333858"       x2="15.044075"       y2="5.9588566"       gradientUnits="userSpaceOnUse" />  </defs>  <sodipodi:namedview     id="base"     pagecolor="#ffffff"     bordercolor="#666666"     borderopacity="0.25490196"     inkscape:pageopacity="0.0"     inkscape:pageshadow="2"     inkscape:zoom="1"     inkscape:cx="-105.4283"     inkscape:cy="21.335249"     inkscape:current-layer="layer1"     showgrid="false"     inkscape:grid-bbox="true"     inkscape:document-units="px"     inkscape:window-width="1064"     inkscape:window-height="782"     inkscape:window-x="370"     inkscape:window-y="66"     inkscape:showpageshadow="false"     fill="#204a87" />  <metadata     id="metadata1311">    <rdf:RDF>      <cc:Work         rdf:about="">        <dc:format>image/svg+xml</dc:format>        <dc:type           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />        <dc:title>System Monitor</dc:title>        <dc:date>2005-10-10</dc:date>        <dc:creator>          <cc:Agent>            <dc:title>Andreas Nilsson</dc:title>          </cc:Agent>        </dc:creator>        <dc:subject>          <rdf:Bag>            <rdf:li>system</rdf:li>            <rdf:li>monitor</rdf:li>            <rdf:li>performance</rdf:li>          </rdf:Bag>        </dc:subject>        <cc:license           rdf:resource="http://creativecommons.org/licenses/publicdomain/" />        <dc:contributor>          <cc:Agent>            <dc:title>Jakub Steiner</dc:title>          </cc:Agent>        </dc:contributor>      </cc:Work>      <cc:License         rdf:about="http://creativecommons.org/licenses/publicdomain/">        <cc:permits           rdf:resource="http://creativecommons.org/ns#Reproduction" />        <cc:permits           rdf:resource="http://creativecommons.org/ns#Distribution" />        <cc:permits           rdf:resource="http://creativecommons.org/ns#DerivativeWorks" />      </cc:License>    </rdf:RDF>  </metadata>  <g     id="layer1"     inkscape:label="Layer 1"     inkscape:groupmode="layer">    <g       id="g5022"       transform="matrix(2.454499e-2,0,0,2.086758e-2,45.89369,40.09109)">      <rect         y="-150.69685"         x="-1559.2523"         height="478.35718"         width="1339.6335"         id="rect4173"         style="opacity:0.40206185;color:black;fill:url(#linearGradient5027);fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible" />      <path         sodipodi:nodetypes="cccc"         id="path5058"         d="M -219.61876,-150.68038 C -219.61876,-150.68038 -219.61876,327.65041 -219.61876,327.65041 C -76.744594,328.55086 125.78146,220.48075 125.78138,88.454235 C 125.78138,-43.572302 -33.655436,-150.68036 -219.61876,-150.68038 z "         style="opacity:0.40206185;color:black;fill:url(#radialGradient5029);fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible" />      <path         style="opacity:0.40206185;color:black;fill:url(#radialGradient5031);fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"         d="M -1559.2523,-150.68038 C -1559.2523,-150.68038 -1559.2523,327.65041 -1559.2523,327.65041 C -1702.1265,328.55086 -1904.6525,220.48075 -1904.6525,88.454235 C -1904.6525,-43.572302 -1745.2157,-150.68036 -1559.2523,-150.68038 z "         id="path5018"         sodipodi:nodetypes="cccc" />    </g>    <rect       style="opacity:1;fill:url(#linearGradient2212);fill-opacity:1;fill-rule:evenodd;stroke:url(#linearGradient2220);stroke-width:0.9999997;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"       id="rect1316"       width="44.759838"       height="41.701817"       x="1.6199486"       y="1.6600797"       rx="4.5659914"       ry="4.5659928" />    <rect       style="opacity:1;fill:url(#radialGradient2229);fill-opacity:1;fill-rule:evenodd;stroke:#173562;stroke-width:0.99999982;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"       id="rect1314"       width="37.177864"       height="28.954594"       x="5.4052019"       y="5.4815545"       rx="1.6946707"       ry="1.694671" />    <path       style="opacity:1;fill:#ecffd9;fill-opacity:1;fill-rule:evenodd;stroke:#c3ea9b;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:0.41618497"       d="M 12.390689,20.935247 L 6.3688614,20.935247 L 6.3688614,22.152253 L 14.087646,22.152253 L 15.493568,16.239132 L 18.956082,29.936652 L 22.164804,19.116952 L 25.059348,25.028755 L 28.946308,21.516786 L 41.654736,21.516786 L 41.654736,19.457141 L 28.505235,19.457141 L 25.335019,22.596741 L 22.059557,15.937588 L 19.049723,24.112486 L 15.78119,11.248712 L 12.390689,20.935247 z "       id="path2188"       sodipodi:nodetypes="ccccccccccccccccc" />    <rect       style="opacity:1;fill:none;fill-opacity:1;fill-rule:evenodd;stroke:url(#linearGradient2244);stroke-width:0.99999982;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"       id="rect2232"       width="42.894741"       height="39.646549"       x="2.553669"       y="2.6544337"       rx="4.1303334"       ry="4.1303344" />    <path       sodipodi:nodetypes="ccccccccccccccccc"       id="path3088"       d="M 11.515689,20.012278 L 6.3688614,20.012278 L 6.3688614,23.061029 L 14.962646,22.936029 L 15.618568,19.893387 L 18.963229,32.601726 L 22.539804,21.135091 L 25.059348,26.551191 L 29.321308,22.442609 L 41.654736,22.317609 L 40.904736,18.408071 L 28.505235,18.283071 L 25.460019,21.456026 L 22.059557,13.665616 L 19.424723,20.604266 L 15.90619,8.333659 L 11.515689,20.012278 z "       style="opacity:0.38068183;fill:#ecffd9;fill-opacity:1;fill-rule:evenodd;stroke:#c3ea9b;stroke-width:1.00000036;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.41618497" />    <path       style="opacity:0.43181817;fill:url(#linearGradient1340);fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"       d="M 6.84375,6.96875 L 6.84375,15.795073 C 10.513653,16.483179 14.582567,16.875 18.875,16.875 C 27.810295,16.875 35.812258,15.21019 41.15625,12.596829 L 41.15625,6.96875 L 6.84375,6.96875 z "       id="rect2178"       sodipodi:nodetypes="ccsccc" />    <g       id="g3126"       style="opacity:0.07954544;fill:#000000;fill-opacity:1;stroke:#000000;stroke-opacity:1"       transform="translate(0.187500,0.687500)">      <path         style="opacity:1;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"         d="M 39.125,37.8125 L 38.0625,37.34375 C 37.805688,37.204184 37.500156,37.125 37.1875,37.125 C 36.187,37.125 35.375,37.937 35.375,38.9375 C 35.375,39.938 36.187,40.75 37.1875,40.75 C 38.156734,40.75 38.951426,39.988481 39,39.03125 C 39.000392,39.02353 38.999705,39.007745 39,39 L 39.125,37.8125 z "         id="path3120"         sodipodi:nodetypes="ccsssscc" />      <path         sodipodi:nodetypes="ccsssscc"         id="path3122"         d="M 28.992526,37.544659 L 28.893139,38.709836 C 28.855813,38.999729 28.892396,39.313228 29.005385,39.604754 C 29.366952,40.537636 30.417519,41.001313 31.350402,40.639747 C 32.283284,40.27818 32.746961,39.227613 32.385394,38.29473 C 32.035127,37.391001 31.037884,36.925219 30.127792,37.225858 C 30.120452,37.228282 30.105982,37.234627 30.098654,37.237151 L 28.992526,37.544659 z "         style="opacity:1;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible" />      <path         style="opacity:1;color:#000000;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"         d="M 25.5,37.8125 L 24.5625,37.34375 C 24.305688,37.204184 24.000156,37.125 23.6875,37.125 C 22.687,37.125 21.875,37.937 21.875,38.9375 C 21.875,39.938 22.687,40.75 23.6875,40.75 C 24.656734,40.75 25.451426,39.988481 25.5,39.03125 C 25.500392,39.02353 25.499705,39.007745 25.5,39 L 25.5,37.8125 z "         id="path3124"         sodipodi:nodetypes="ccsssscc" />    </g>    <path       style="opacity:1;color:#000000;fill:#e0e2df;fill-opacity:1;fill-rule:nonzero;stroke:#9b9d99;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"       d="M 39.125,37.8125 L 38.0625,37.34375 C 37.805688,37.204184 37.500156,37.125 37.1875,37.125 C 36.187,37.125 35.375,37.937 35.375,38.9375 C 35.375,39.938 36.187,40.75 37.1875,40.75 C 38.156734,40.75 38.951426,39.988481 39,39.03125 C 39.000392,39.02353 38.999705,39.007745 39,39 L 39.125,37.8125 z "       id="path3111"       sodipodi:nodetypes="ccsssscc" />    <path       sodipodi:nodetypes="ccsssscc"       id="path3116"       d="M 28.992526,37.544659 L 28.893139,38.709836 C 28.855813,38.999729 28.892396,39.313228 29.005385,39.604754 C 29.366952,40.537636 30.417519,41.001313 31.350402,40.639747 C 32.283284,40.27818 32.746961,39.227613 32.385394,38.29473 C 32.035127,37.391001 31.037884,36.925219 30.127792,37.225858 C 30.120452,37.228282 30.105982,37.234627 30.098654,37.237151 L 28.992526,37.544659 z "       style="opacity:1;color:#000000;fill:#e0e2df;fill-opacity:1;fill-rule:nonzero;stroke:#9b9d99;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible" />    <path       style="opacity:1;color:#000000;fill:#e0e2df;fill-opacity:1;fill-rule:nonzero;stroke:#9b9d99;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;marker:none;marker-start:none;marker-mid:none;marker-end:none;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;visibility:visible;display:inline;overflow:visible"       d="M 25.5,37.8125 L 24.5625,37.34375 C 24.305688,37.204184 24.000156,37.125 23.6875,37.125 C 22.687,37.125 21.875,37.937 21.875,38.9375 C 21.875,39.938 22.687,40.75 23.6875,40.75 C 24.656734,40.75 25.451426,39.988481 25.5,39.03125 C 25.500392,39.02353 25.499705,39.007745 25.5,39 L 25.5,37.8125 z "       id="path3118"       sodipodi:nodetypes="ccsssscc" />    <rect       ry="2.5696716"       rx="2.5696716"       y="4.635767"       x="4.3192058"       height="30.646179"       width="39.349869"       id="rect2221"       style="opacity:0.57386364;fill:none;fill-opacity:1;fill-rule:evenodd;stroke:url(#linearGradient2231);stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />  </g></svg>'-=JUAMPI=-selectedRemovals  ^(selectionsCurrent select: [:each |  each key = #remove ]) collect: [:assoc |  assoc value ]-=JUAMPI=-renderCellForDate: aDate row: anObject index: aNumber on: html  html tableData: [ html space ]-=JUAMPI=-testHolder  | original snapshot1 snapshot2 snapshot3 |  original := WAValueHolder new.  snapshot1 := original snapshotCopy.  original contents: 1.  snapshot2 := original snapshotCopy.  original contents: 2.  snapshot3 := original snapshotCopy.  original restoreFromSnapshot: snapshot1.  self assert: original contents isNil.  original restoreFromSnapshot: snapshot2.  self assert: original contents equals: 1.  original restoreFromSnapshot: snapshot3.  self assert: original contents equals: 2-=JUAMPI=-printOn: aStream  super printOn: aStream.  aStream     nextPutAll: ' contents: ';     print: self contents-=JUAMPI=-date  (self privateIsValidDay: day monthNumber: month year: year) ifFalse: [ self error: 'Invalid date' ].  ^self dateClass year: year month: month day: day-=JUAMPI=-allSelectors  ^(class class selectors select: [:each |  each beginsWithSubCollection: self selectorPrefix ]) sorted-=JUAMPI=-sourceSet: aString  self attributes at: 'srcset' put: aString-=JUAMPI=-pathParameterAt: anIndex key: aKey ifAbsent: aZeroArgumentBlock  ^self privatePathParameterMapAt: anIndex ifPresentDo: [:parameters |  parameters at: aKey ifAbsent: aZeroArgumentBlock ] ifAbsent: aZeroArgumentBlock-=JUAMPI=-potentialFilters  ^WAConfiguredRequestFilter allSubclasses-=JUAMPI=-visitStringAttribute: anAttribute  self visitAttribute: anAttribute-=JUAMPI=-initialize  super initialize.  tree := WATree new     root: Collection;     labelBlock: [:class |  class name ];     childrenBlock: [:class |  class subclasses ];     selectBlock: [:class |  selected := class name ];     canSelectBlock: [:class |  class subclasses notEmpty ];     yourself-=JUAMPI=-hash  ^self document hash-=JUAMPI=-makePlainTextAndPerform: aSelector  self ifResetPossible: [ | mimeType response |        response := self response.        response perform: aSelector.        mimeType := WAMimeType textPlain.        mimeType charset: self requestContext charSet.        response contentType: mimeType ]-=JUAMPI=-context  ^context-=JUAMPI=-initialize  super initialize.  expressions := Dictionary new.  parents := OrderedCollection new-=JUAMPI=-testCookieAfterCommit  self response flush.  self should: [ self response addCookie: WACookie new ] raise: WAIllegalStateException-=JUAMPI=-count  ^512-=JUAMPI=-callbacks  ^self context callbacks-=JUAMPI=-testPathEncoding  | cookies cookie |  cookies := WARequestCookie fromString: '$Version="1";                 Customer="WILE_E_COYOTE"; $Path="/%20"' codec: GRNullCodec new.  self assert: cookies size = 1.  cookie := cookies first.  self assert: cookie path = '/ '.  self assert: cookie pathUnencoded = '/ '.  self assert: cookie pathEncoded = '/%20'-=JUAMPI=-renderContentOn: html  html header: [ html heading           level1;           with: [ html anchor                 url: 'http://www.elharo.com/blog';                 with: 'Mokka mit Schlag' ] ].  html section: [ html article: [ html heading                 level2;                 with: [ html anchor                       url: '/blog/birding/2007/04/23/spring-comes-and-goes-in-sussex-county/';                       with: 'Spring Comes (and Goes) in Sussex County' ].              html paragraph: 'Yesterday I joined the Brooklyn Bird Club for our annual trip to Western New Jersey, specifically Hyper Humus, a relatively recently discovered hot spot. It started out as a nice winter morning when we arrived at the site at 7:30 A.M., progressed to Spring around 10:00 A.M., and reached early summer by 10:15.' ].        html article: [ html heading                 level2;                 with: [ html anchor                       url: '/blog/birding/2007/04/23/but-does-it-count-for-your-life-list/';                       with: 'But does it count for your life list?' ].              html paragraph: [ html text: 'Seems you can now go '.                    html anchor                       url: 'http://www.wired.com/science/discoveries/news/ 2007/04/cone_sf';                       with: 'bird watching via the Internet'.                    html text: '. I haven''t been able to test it out yet (20 user limit apparently) but this is certainly cool. Personally, I can''t imagine it replacing actually being out in the field by any small amount. On the other hand, I''ve always found it quite sad to meet senior birders who are no longer able to hold binoculars steady or get to the park. I can imagine this might be of some interest to them. At least one elderly birder did a big year on TV, after he could no longer get out so much. This certainly tops that.' ] ] ].  html navigation: [ html anchor           url: '/blog/page/2/';           with: '<< Previous Entries' ].  html navigation: [ html unorderedList: [ html listItem: [ html heading                       level2;                       with: 'Info'.                    html unorderedList: [ html listItem: [ html anchor                                   url: '/blog/comment-policy/';                                   with: 'Comment Policy' ].                          html listItem: [ html anchor                                   url: '/blog/todo-list/';                                   with: 'Todo List' ] ] ].              html listItem: [ html heading                       level2;                       with: 'Archives'.                    html unorderedList: [ html listItem: [ html anchor                                   url: '/blog/2007/04/';                                   with: 'April 2007' ].                          html listItem: [ html anchor                                   url: '/blog/2007/02/';                                   with: 'February 2007' ] ] ].              html listItem: [ html anchor                       url: '/blog/2007/01/';                       with: 'January 2007' ] ] ].  html aside: [ html heading level3 with: '.xf-value'.        html paragraph: [ html text: 'The '.              html code: '.xf-value'.              html text: ' selector used here styles the input field value but not its label. This is actually inconsistent with the current CSS3 draft. The example really should use the '.              html code: '::value'.              html text: 'pseudo-class instead like so:' ].        html preformatted: 'input::value { width: 20em; }#ccnumber::value { width: 18em }#zip::value { width: 12em }#state::value { width: 3em  }'.        html paragraph: 'However, Firefox doesn''t yet support this syntax' ].  html footer: [ html paragraph: 'Copyright 2007 Elliotte Rusty Harold' ]-=JUAMPI=-testNoMarkerOnCall  | captured seen |  captured := false.  seen := false.  self should: [ self callcc: [:cc |  captured := true ].        seen := true ] raise: Error.  self deny: captured.  self deny: seen-=JUAMPI=-writeLoadScriptsOn: aDocument  self loadScripts do: [:each |  aDocument stream javascript: each.        aDocument nextPut: $; ]-=JUAMPI=-mainJpg  ^#(255 216 255 224 0 16 74 70 73 70 0 1 1 1 0 72 0 72 0 0 255 225 0 22 69 120 105 102 0 0 77 77 0 42 0 0 0 8 0 0 0 0 0 0 255 219 0 67 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 255 219 0 67 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 255 192 0 17 8 0 4 2 152 3 1 34 0 2 17 1 3 17 1 255 196 0 24 0 1 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 7 9 10 255 196 0 38 16 0 2 3 0 1 1 8 3 1 0 0 0 0 0 0 0 0 1 17 81 145 7 2 6 8 9 40 49 54 116 195 65 103 129 183 255 196 0 20 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 196 0 20 17 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 218 0 12 3 1 0 2 17 3 17 0 63 0 235 191 191 103 181 250 190 7 87 216 85 254 17 73 62 9 229 249 83 230 63 181 191 230 188 74 0 26 177 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 94 137 47 225 32 0 0 0 0 0 132 253 84 145 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 132 42 88 128 1 10 150 33 10 150 32 0 66 165 136 66 165 136 0 16 169 98 16 169 98 0 4 42 88 140 168 241 117 73 112 55 16 66 75 204 143 100 255 0 31 173 121 108 0 44 254 226 126 215 233 248 29 63 88 0 15 255 217) asByteArray-=JUAMPI=-type  ^'number'-=JUAMPI=-isValid  ^validationError isNil-=JUAMPI=-renderDetailsOn: html  html heading     level2;     with: '<details>'.  html details: [ html summary: '[Sibley, 2000]'.        html paragraph: 'Sibley, David Allen, The Sibley Guide to Birds, (New York: Chanticleer Press, 2000) p. 247' ]-=JUAMPI=-writeDiscardOn: aStream  (self discard notNil and: [ self discard ]) ifTrue: [ aStream nextPutAll: '; Discard' ]-=JUAMPI=-contents: aString  contents := GRPlatform current convertToSmalltalkNewlines: aString-=JUAMPI=-urlForDocument: anObject mimeType: mimeType fileName: fileName  | handler |  handler := WADocumentHandler document: anObject mimeType: mimeType fileName: fileName.  ^self requestContext session register: handler-=JUAMPI=-beHidden  self hidden: true-=JUAMPI=-renderColumnsOn: html  html div     class: 'columns';     with: [ self columns do: [:each |  html form                 class: 'column';                 with: [ | array |                    array := self model perform: (each , 'List') asSymbol.                    html div: [ html select                             size: 10;                             list: array;                             attributeAt: 'onchange' put: 'submit()';                             selected: (array at: (self model perform: (each , 'ListIndex') asSymbol) ifAbsent: [ nil ]);                             callback: [:item |  self model perform: (each , 'ListIndex:') asSymbol with: (array indexOf: item) ] ] ] ] ]-=JUAMPI=-seasideMimeType  ^self-=JUAMPI=-top: anInteger  features at: #top put: anInteger-=JUAMPI=-boolean: aSymbol  ^self addAttribute: (WABooleanAttribute key: aSymbol)-=JUAMPI=-editMemoryVMParameterAt: anInteger named: aString  self show: ((WAVMParameterEditor paramterIndex: anInteger)           addMessage: aString;           yourself)-=JUAMPI=-notFound  | response |  self makePlainTextAndPerform: #notFound.  response := self response.  self request url pathUnencodedOn: response.  response nextPutAll: ' not found'-=JUAMPI=-hash  ^(self mimeType hash bitXor: self fileName hash) bitXor: self contents hash-=JUAMPI=-expectedMimeType  ^WAMimeType textHtml-=JUAMPI=-initialize  super initialize.  self initializeFields-=JUAMPI=-tabIndex: aString  self attributes at: 'tabindex' put: aString-=JUAMPI=-toggleHelp  self showHelp: self showHelp not.  self showHelp ifTrue: [ self collapsed: false ]-=JUAMPI=-openTag: aString attributes: anAttributes closed: aBoolean  stream     nextPut: $<;     nextPutAll: aString.  anAttributes encodeOn: self.  aBoolean ifTrue: [ stream nextPut: $/ ].  stream nextPut: $>-=JUAMPI=-testCantReset  | resetPossible |  resetPossible := self response     status: WAResponse statusNotFound;     attachmentWithFileName: 'upload.csv';     nextPutAll: 'the content';     resetIfPossible.  self deny: resetPossible.  self assertLines: #('HTTP/1.1 404 Not Found' 'Content-Disposition: attachment; filename="upload.csv"' '' 'the content')-=JUAMPI=-testBlockTemps  | y |  #(1 2 3) do: [:i |  | x |        x := i.        tmp ifNil: [ tmp2 := self callcc: [:cc |  tmp := cc.                    [:q |   ] ] ].        tmp2 value: x.        x := 17 ].  y := self callcc: [:cc |  tmp value: cc.        42 ].  self assert: y = 1-=JUAMPI=-associationsDo: aBlock  delegates do: [:each |  each associationsDo: aBlock ]-=JUAMPI=-classListIndex  ^(self classesInTheSelectedPackage sorted: [:a :b |  a name <= b name ]) indexOf: selectedClass-=JUAMPI=-renderFigureOn: html  html heading     level2;     with: '<figure>'.  html figure: [ html image           url: WATestingFiles / #samplePng;           altText: 'sample'.        html figureCaption: 'A Sample Icon' ]-=JUAMPI=-hash  ^self main hash bitXor: self sub hash-=JUAMPI=-colorForDate: aDate rowIndex: aNumber  ^(self hasSelection and: [ self selectionContainsDate: aDate rowIndex: aNumber ]) ifTrue: [ 'lightgrey' ] ifFalse: [ 'white' ]-=JUAMPI=-asSpecCommand  ^super asSpecCommand     iconName: #smallInspectIt;     yourself-=JUAMPI=-testAbsoluteUrlForResourceWithoutBase  | context |  context := WARenderContext new.  context resourceUrl: nil.  self assert: (context absoluteUrlForResource: nil) isNil.  self assert: ((context absoluteUrlForResource: 'bar') isKindOf: WAUrl).  self assert: (context absoluteUrlForResource: 'bar') greaseString = '/bar'.  self assert: ((context absoluteUrlForResource: '/bar') isKindOf: WAUrl).  self assert: (context absoluteUrlForResource: '/bar') greaseString = '/bar'.  self assert: ((context absoluteUrlForResource: '') isKindOf: WAUrl).  self assert: (context absoluteUrlForResource: '') greaseString = '/'.  self assert: ((context absoluteUrlForResource: 'http://localhost/foo') isKindOf: WAUrl).  self assert: (context absoluteUrlForResource: 'http://localhost/foo') greaseString = 'http://localhost/foo'-=JUAMPI=-renderValuesOn: html  | incrementalGCs tenures parameters fullGCs fullGCTime incrementalGCTime |  parameters := SmalltalkImage current vm getParameters.  fullGCs := parameters at: 7.  fullGCTime := parameters at: 8.  incrementalGCs := parameters at: 9.  incrementalGCTime := parameters at: 10.  tenures := parameters at: 11.  self renderLabel: 'Full GCs' value: fullGCs value: (self printMilliSeconds: fullGCTime) value: (self printMilliSeconds: fullGCTime dividedBy: fullGCs) on: html.  self renderLabel: 'Incremental GCs' value: incrementalGCs value: (self printMilliSeconds: incrementalGCTime) value: (self printMilliSeconds: incrementalGCTime dividedBy: incrementalGCs) on: html.  self renderLabel: 'Tenures' value: tenures on: html.  tenures isZero ifFalse: [ self renderLabel: 'Avg. GCs/tenure' value: (incrementalGCs / tenures) greaseInteger on: html ]-=JUAMPI=-forbidden  | response |  self makePlainTextAndPerform: #forbidden.  response := self response.  response nextPutAll: 'Error: you are forbidden to access "'.  self request url pathUnencodedOn: response.  response nextPutAll: '"'-=JUAMPI=-newSession  ^self sessionClass new     configuration: (WAUserConfiguration new           addParent: self configuration;           yourself);     yourself-=JUAMPI=-accept: aVisitor  aVisitor visitPainter: self-=JUAMPI=-renderHeadingOn: html  html div     class: 'header';     with: [ html heading           level1;           class: 'welcome';           with: self title.        html heading           level2;           class: 'congrats';           with: 'Congratulations, you have a working Seaside environment.' ]-=JUAMPI=-meta  ^self add: (WAMetaElement root: self)-=JUAMPI=-unhandledExceptionClass  ^Exception-=JUAMPI=-printOn: aStream  super printOn: aStream.  aStream     nextPutAll: ' cacheDuration: ';     print: self cacheDuration.  aStream     nextPutAll: ' filepath: ';     print: self filepath.  aStream     nextPutAll: ' mimeType: ';     print: self mimeType.  aStream     nextPutAll: ' contents: ';     print: (self contents greaseString truncateWithElipsisTo: 100)-=JUAMPI=-testAtIfAbsent  one at: 'foo' put: 1.  two at: 'bar' put: 2.  self assert: (merged at: 'foo' ifAbsent: [ true ]) = 1.  self assert: (merged at: 'bar' ifAbsent: [ true ]) = 2.  two at: 'foo' put: 3.  self assert: (merged at: 'foo' ifAbsent: [ true ]) = 1.  self assert: (merged at: 'zork' ifAbsent: [ true ])-=JUAMPI=-binary  self subclassResponsibility-=JUAMPI=-renderSubItemsOn: html  super renderSubItemsOn: html.  html render: cacheEditor-=JUAMPI=-testMimeType  | library |  library := WATestingMetadataFileLibrary default.  self assert: (library mimetypeOf: #imgglyphiconshalflingsPng) = WAMimeType imagePng.  self assert: (library mimetypeOf: #jsbootstrapJs) = 'application/javascript' seasideMimeType-=JUAMPI=-handleAnswer: anObject continueWith: aBlock  (self validate: anObject) ifTrue: [ aBlock value ]-=JUAMPI=-labels: aBlock  labelBlock := aBlock-=JUAMPI=-renderRadioButtonsCustomOn: html  self renderLabel: 'Radiogroup (Custom)' input: [ html radioGroup: [:group |  self elements do: [:each |  html label: [ html radioButton                             group: group;                             selected: radioCustom = each;                             callback: [ radioCustom := each ].                          html text: each ].                    html break ] ] ] output: radioCustom printString on: html-=JUAMPI=-renderContentOn: html  html table     class: 'DateTable';     with: [ html tableRow: [ self renderMonthHeadingsOn: html ].        html tableRow: [ self renderDayHeadingsOn: html ].        rows keysAndValuesDo: [:index :each |  html tableRow: [ self renderRow: each index: index on: html ] ] ]-=JUAMPI=-rows: aCollection  self clearSelection.  super rows: aCollection-=JUAMPI=-createRequest  ^WARequest method: 'GET' uri: '/1/2'-=JUAMPI=-testMapCallback  | key |  key := registry store: (WAMapCallback on: [:v |  log add: v ]).  self shouldnt: [ self request: (WARequestFields new                 at: key put: '?1,2';                 yourself) ] raise: WARenderNotification.  self assertLog: (Array with: 1 @ 2).  self shouldnt: [ self request: (WARequestFields new                 at: key put: '?1,23';                 yourself) ] raise: WARenderNotification.  self assertLog: (Array with: 1 @ 23).  self shouldnt: [ self request: (WARequestFields new                 at: key put: '?12,34';                 yourself) ] raise: WARenderNotification.  self assertLog: (Array with: 12 @ 34).  self shouldnt: [ self request: (WARequestFields new                 at: key put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: key put: '';                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: key put: '1,2';                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: key put: '?1';                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: key put: '?1,';                 yourself) ] raise: WARenderNotification.  self shouldnt: [ self request: (WARequestFields new                 at: key put: '?1x2';                 yourself) ] raise: WARenderNotification.  self assertLog: #().  self shouldnt: [ self request: (WARequestFields new                 at: key put: '?a,b';                 yourself) ] raise: WARenderNotification.  self assertLog: #()-=JUAMPI=-ensure  [ self go ] ensure: [ self inform: 'ensure' ]-=JUAMPI=-limit  ^limit ifNil: [ limit := self defaultLimit min: self frameCount ]-=JUAMPI=-testAsFileAndFoldername  | library |  library := WATestingMetadataFileLibrary default.  self assert: (library asFileAndFoldername: #mainCss) first equals: library name-=JUAMPI=-showHelp  self model plusButtonHit-=JUAMPI=-exceptionClass  ^exceptionClass ifNil: [ exceptionClass := WAValidationNotification ]-=JUAMPI=-renderMonthHeadingOn: html  html form: [ html div: [ html select                 list: (1 to: 12);                 on: #monthIndex of: self;                 labels: [:index |  Date nameOfMonth: index ].              html textInput                 maxLength: 4;                 on: #year of: self.              html submitButton text: 'Refresh' ] ]-=JUAMPI=-date: aDate  day := aDate dayOfMonth.  month := aDate monthIndex.  year := aDate year-=JUAMPI=-initialize  super initialize.  properties := Dictionary new.  self hasAdvancedAttributes: self hasAdvancedAttributesDefault.  self displayAdvancedAttributes: false.  self collapsed: self collapsedByDefault.  self showHelp: false-=JUAMPI=-value  ^value-=JUAMPI=-evaluate  ^self object class compilerClass new evaluate: input in: thisContext to: self object-=JUAMPI=-stop: aServerAdaptor  (self canStop: aServerAdaptor) ifTrue: [ aServerAdaptor basicStop ]-=JUAMPI=-onRender: aBlock  renderBlock := aBlock-=JUAMPI=-columns: anArray  columns := anArray-=JUAMPI=-percent: aDecimal  ^GRSequentialPrinter new , (GRNumberPrinter new           separator: $.;           precision: 2;           accuracy: 0.1;           yourself) , ' %' print: aDecimal * 100-=JUAMPI=-sessionIdFromContext: aRequestContext  ^aRequestContext request forwardedFor ifNil: [ aRequestContext request remoteAddress ]-=JUAMPI=-updateStates: aSnapshot  super updateStates: aSnapshot.  decoration isNil ifFalse: [ aSnapshot register: decoration ]-=JUAMPI=-nextPutAllFast: aByteString  | lastIndex nextIndex |  lastIndex := 1.  nextIndex := ByteString findFirstInString: aByteString inSet: table startingAt: lastIndex.  nextIndex = 0 ifTrue: [ ^stream nextPutAll: aByteString ].  [ nextIndex > lastIndex ifTrue: [ stream greaseNext: nextIndex - lastIndex putAll: aByteString startingAt: lastIndex ].  delegate nextPut: (aByteString at: nextIndex).  lastIndex := nextIndex + 1.  nextIndex := ByteString findFirstInString: aByteString inSet: table startingAt: lastIndex.  nextIndex = 0 ] whileFalse.  stream greaseNext: aByteString size - lastIndex + 1 putAll: aByteString startingAt: lastIndex-=JUAMPI=-isModify  ^self expression notNil and: [ self isOverride not ]-=JUAMPI=-minutes: anIntegerOrString  minutes := anIntegerOrString greaseInteger ifNil: [ 0 ]-=JUAMPI=-document: anObject mimeType: aMimeString  self document: anObject mimeType: aMimeString fileName: nil-=JUAMPI=-openBrush  super openBrush.  key jsonOn: canvas.  self document stream nextPutAll: ': '-=JUAMPI=-starting  status := #starting-=JUAMPI=-renderContentOn: html  self renderHeadingOn: html.  self renderDispatcherOn: html-=JUAMPI=-accept: aVisitor  aVisitor visitPasswordAttribute: self-=JUAMPI=-size  ^self rawContents size-=JUAMPI=-parseNumberInteger  | number |  number := 0.  [ stream atEnd not and: [ stream peek isDigit ] ] whileTrue: [ number := 10 * number + (stream next greaseInteger - 48) ].  ^number-=JUAMPI=-testStore  | generator |  generator := WAPrecomputedKeyGenerator keys: #(1 1 1 2 2 2 3).  WAKeyGenerator use: generator during: [ self assert: (cache store: 'key1') = 1.        self assert: (cache store: 'key2') = 2.        self assert: (cache store: 'key3') = 3 ]-=JUAMPI=-respond  WAResponseNotification signal-=JUAMPI=-remove: anObject  self subclassResponsibility-=JUAMPI=-port  ^port-=JUAMPI=-renderFormOn: html  groups do: [:each |  html render: each ]-=JUAMPI=-logger  ^(JSLogger context: self context)     rendererClass: self species;     yourself-=JUAMPI=-processes  ^(Process allSubInstances reject: [:each |  each isTerminated or: [ each = Processor activeProcess ] ]) sorted: [:a :b |  a priority >= b priority ]-=JUAMPI=-selection  ^selection-=JUAMPI=-charset: aString  self attributes at: 'charset' put: aString-=JUAMPI=-tag  ^'script'-=JUAMPI=-value: anInteger  self attributeAt: 'value' put: anInteger-=JUAMPI=-destroy  super destroy.  bufferedStream := nil.  externalStream := nil-=JUAMPI=-renderEntityTableFootOn: html  html tableFoot: [ html tableRow: [ html tableData                 align: 'center';                 colSpan: 7;                 with: '5 entities shown' ] ]-=JUAMPI=-callback: aBlock  self name: (self storeCallback: (WAValueCallback on: aBlock)).  self value: self value-=JUAMPI=-postCopyForRenderContext: aRenderContext  super postCopyForRenderContext: aRenderContext.  renderContext := aRenderContext-=JUAMPI=-renderPartsOn: html  self renderHaltOn: html.  self renderErrorOn: html.  self renderPostErrorOn: html.  self renderRenderErrorOn: html.  self renderResumableErrorOn: html.  self renderWarningOn: html.  self renderDeprecatedOn: html-=JUAMPI=-defaultConfiguration  self subclassResponsibility-=JUAMPI=-second: anObject  second := anObject-=JUAMPI=-renderContentOn: html  html render: self delegate-=JUAMPI=-testCanResetIfNoBody  | resetPossible |  resetPossible := self response     status: WAResponse statusNotFound;     attachmentWithFileName: 'upload.csv';     resetIfPossible.  self assert: resetPossible.  self assertLines: #('HTTP/1.1 200 OK' 'Content-Length: 0' '')-=JUAMPI=-hasTotal: aBoolean  hasTotal := aBoolean-=JUAMPI=-describeOn: config  (config string: #login)     group: #authentication;     comment: 'The username for this application.'.  (config password: #passwordHash)     group: #authentication;     comment: 'The password for this application.';     label: 'Password'-=JUAMPI=-renderPhaseContinuationClasses  ^self continuationClasses select: [:each |  each isRenderLoopContinuation and: [ each isRenderContinuation ] ]-=JUAMPI=-assert: aBlock gives: aString  | stream |  aBlock value: (attributes := WAHtmlAttributes new).  (WAHtmlDocument on: (stream := WriteStream on: String new) codec: self requestContext codec) print: attributes.  self assert: stream contents = aString description: 'Expected ' , aString printString , ', but got ' , stream contents printString resumable: true-=JUAMPI=-renderValuesOn: html  self processes do: [:each |  self renderProcess: each on: html ]-=JUAMPI=-at: aKey append: aValue separator: aSeparator  aValue isNil ifFalse: [ | current |        current := self at: aKey ifAbsentPut: [ aValue ].        current ~~ aValue ifTrue: [ current isConcatenatedHtmlAttributeValue ifTrue: [ current addValue: aValue ] ifFalse: [ self at: aKey put: (WAConcatenatedHtmlAttributeValue separator: aSeparator value: current value: aValue) ] ] ]-=JUAMPI=-text: anObject  self flush.  super text: anObject-=JUAMPI=-selection  ^selection contents-=JUAMPI=-handlerClass  ^WAHtmlFileHandlerListing-=JUAMPI=-search: anObject  search := anObject-=JUAMPI=-isAttributeInheritedOn: aConfiguration  ^attributeInheritors includes: aConfiguration-=JUAMPI=-addTo: anEmailAddress  ^self to add: anEmailAddress-=JUAMPI=-optimum: anInteger  self attributeAt: 'optimum' put: anInteger-=JUAMPI=-ruby: aBlock  self ruby with: aBlock-=JUAMPI=-filter: aFilter  filter := aFilter-=JUAMPI=-tag  ^'time'-=JUAMPI=-writeSameSiteOn: aStream  sameSite isNil ifTrue: [ ^self ].  aStream     nextPutAll: '; SameSite=';     nextPutAll: sameSite-=JUAMPI=-writeVersionOn: aStream  aStream nextPutAll: '; Version='.  aStream print: self version-=JUAMPI=-setEmptyPage  editor := WADispatcherEmptyPage on: self-=JUAMPI=-handleExceptionsDuring: aBlock  ^aBlock on: self do: [:exception |  [ self handleException: exception ] on: Error do: [:error |  self internalError: error ] ]-=JUAMPI=-children  ^Array with: self component-=JUAMPI=-testLinkElementWithContent  self assertRoot: [:html |  html stylesheet add: 'div > em { color: blue; }' ] gives: '<title></title><style type="text/css">div > em { color: blue; }</style>'.  self assertRoot: [:html |  html stylesheet add: 'E[foo$="bar"]' ] gives: '<title></title><style type="text/css">E[foo$="bar"]</style>'-=JUAMPI=-renderHeaderOn: html  html heading     level2;     with: '<header>'.  html header: [ html paragraph: 'Welcome to...'.        html heading           level1;           with: 'Voidwars!' ]-=JUAMPI=-renderExplanationOn: html  html paragraph: [ html text: 'This test serves three purposes:'.        html orderedList: [ html listItem: 'First it is a regression test, earlier versions of Seaside could only handle a limited number of callbacks per page. The oldest links (low numbers) would use their callback. Clicking on any link should display this number with a button.'.              html listItem: 'Second it serves as a raw rendering speed benchmark.'.              html listItem: 'Third it tests WASession >> #jumpToAnchor:. After confirming the number you should return to the page and be automatically at the place where the link is.' ] ]-=JUAMPI=-childrenBlock: aBlock  childrenBlock := aBlock-=JUAMPI=-testCompileByteArrayWithCacheSource  | library data file source expected |  self useCompileUseNewCompiler: false during: [ self deny: GRPharoPlatform current useByteArrayLiterals.        library := WATestingFiles default.        data := (1 to: 255) asByteArray.        file := WAFile new           contentType: WAMimeType imageJpeg;           contents: data;           fileName: 'demo.jpeg';           yourself.        library addFile: file.        [ source := WATestingFiles sourceCodeAt: #demoJpeg.        expected := 'demoJpeg	^ #(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255) asByteArray'.        self assert: source greaseString = expected ] ensure: [ library removeFile: file fileName ] ]-=JUAMPI=-addField: aKey value: aValue  aKey isEmpty ifFalse: [ self queryFields at: aKey add: aValue ]-=JUAMPI=-parse  | result |  result := self     whitespace;     parseValue.  self whitespace.  stream atEnd ifFalse: [ self error: 'end of input expected' ].  ^result-=JUAMPI=-months  ^1 to: 12-=JUAMPI=-accept: aVisitor  aVisitor visitComponent: self-=JUAMPI=-bePrevious  self relationship: 'previous'-=JUAMPI=-registerPassenger: anObject named: aString  | callback |  callback := JSPassenger new.  callback     setKey: aString callbacks: callbacks;     setObject: anObject.  callbacks at: (callback convertKey: aString) put: callback.  ^aString-=JUAMPI=-contents  ^contents-=JUAMPI=-level4  level := 4-=JUAMPI=-register: aServerAdaptor  ^adaptors add: aServerAdaptor-=JUAMPI=-postCopy  super postCopy.  document := document copy-=JUAMPI=-minutes  ^minutes-=JUAMPI=-sampleForm  ^(Smalltalk classNamed: #Form) extent: 16 @ 16 depth: 1 fromArray: #(0 0 0 50331648 25165824 12582912 281018368 415236096 264241152 132120576 7340032 3670016 1572864 0 0 0) offset: 0 @ 0-=JUAMPI=-testDictionary  | original snapshot1 snapshot2 snapshot3 snapshot4 |  original := Dictionary new.  original     at: 1 put: #a;     at: 2 put: #b.  snapshot1 := original snapshotCopy.  original at: 3 put: #c.  snapshot2 := original snapshotCopy.  original at: 3 put: #d.  snapshot3 := original snapshotCopy.  original removeKey: 1.  snapshot4 := original snapshotCopy.  original restoreFromSnapshot: snapshot1.  self assert: original size equals: 2.  self assert: (original at: 1 ifAbsent: [  ]) equals: #a.  self assert: (original at: 2 ifAbsent: [  ]) equals: #b.  self assert: (original at: 3 ifAbsent: [  ]) isNil.  self assert: (original at: 4 ifAbsent: [  ]) isNil.  original restoreFromSnapshot: snapshot2.  self assert: (original at: 1 ifAbsent: [  ]) equals: #a.  self assert: (original at: 2 ifAbsent: [  ]) equals: #b.  self assert: (original at: 3 ifAbsent: [  ]) equals: #c.  self assert: (original at: 4 ifAbsent: [  ]) isNil.  original restoreFromSnapshot: snapshot3.  self assert: (original at: 1 ifAbsent: [  ]) equals: #a.  self assert: (original at: 2 ifAbsent: [  ]) equals: #b.  self assert: (original at: 3 ifAbsent: [  ]) equals: #d.  self assert: (original at: 4 ifAbsent: [  ]) isNil.  original restoreFromSnapshot: snapshot4.  self assert: (original at: 1 ifAbsent: [  ]) isNil.  self assert: (original at: 2 ifAbsent: [  ]) equals: #b.  self assert: (original at: 3 ifAbsent: [  ]) equals: #d.  self assert: (original at: 4 ifAbsent: [  ]) isNil.  original at: 2 put: #!.  original restoreFromSnapshot: snapshot4.  self assert: (original at: 1 ifAbsent: [  ]) isNil.  self assert: (original at: 2 ifAbsent: [  ]) equals: #b.  self assert: (original at: 3 ifAbsent: [  ]) equals: #d.  self assert: (original at: 4 ifAbsent: [  ]) isNil-=JUAMPI=-renderResumeOn: html  html form: [ html text: 'UI Process is suspended. '.        html submitButton           callback: [ self resume ];           text: 'Resume' ]-=JUAMPI=-testNextKey  self assert: registry nextKey = '1'.  registry increaseKey.  self assert: registry nextKey = '2'.  self assert: registry nextKey = '2'-=JUAMPI=-initialize  super initialize.  self label: ''-=JUAMPI=-contentType  | contentType |  contentType := self headerAt: 'content-type'.  ^contentType isNil ifFalse: [ WAMimeType fromString: contentType ]-=JUAMPI=-initialize  super initialize.  configuration := self defaultConfiguration.  filter := WAValueHolder with: self-=JUAMPI=-testStringWithFilename  self createAndVerifyTextDocumentNamed: 'toolbar.css' hasAttachment: 'attachment; filename="toolbar.css"'-=JUAMPI=-onMouseUp: anObject  self document scriptGenerator event: 'mouseup' do: anObject on: self-=JUAMPI=-renderMouseClickOn: html  html div: [ html map           title: 'Click here';           callback: [:point |  self click: point + self offset ];           with: [ html image form: self form ] ]-=JUAMPI=-renderYearNavigationOn: html  html span     class: 'calendarPrevious';     with: [ html anchor           callback: [ self year: self year - 1 ];           with: self year - 1 ].  html space.  html span     class: 'calendarNext';     with: [ html anchor           callback: [ self year: self year + 1 ];           with: self year + 1 ]-=JUAMPI=-datesDo: aBlock separatedBy: monthlyBlock  | month |  month := datesCache first monthIndex.  datesCache do: [:date |  date monthIndex = month ifFalse: [ month := date monthIndex.              monthlyBlock value ].        aBlock value: date ].  monthlyBlock value-=JUAMPI=-priority  ^400-=JUAMPI=-execute  self adaptor ifNotNil: [:adaptor |  adaptor isRunning ifFalse: [ ^self ].        WebBrowser openOn: 'http://localhost:' , adaptor port asString ]-=JUAMPI=-initialize  super initialize.  semaphore := GRPlatform current semaphoreClass forMutualExclusion.  owner := GRPlatform current newTransientValueHolder-=JUAMPI=-updateRoot: anHtmlRoot  super updateRoot: anHtmlRoot.  WAToolFiles default updateRoot: anHtmlRoot.  WADevelopmentFiles default updateRoot: anHtmlRoot-=JUAMPI=-testHandleListing  | response |  self requestContextWithUrl: '/root/files/WATestingFiles/'.  requestContext consumer     next;     next.  response := self responseAfter: [ handler handle: self requestContext ].  self assertListing: response.  self requestContextWithUrl: '/root/files/WATestingFiles'.  requestContext consumer     next;     next.  response := self responseAfter: [ handler handle: self requestContext ].  self assertListing: response.  self requestContextWithUrl: '/root/files/'.  requestContext consumer     next;     next.  response := self responseAfter: [ handler handle: self requestContext ].  self assertListing: response.  self requestContextWithUrl: '/root/files'.  requestContext consumer     next;     next.  response := self responseAfter: [ handler handle: self requestContext ].  self assertListing: response-=JUAMPI=-renderContentOn: html  html paragraph: [ html text: 'You can see your component in action here: '.        html anchor           target: '_blank';           url: '/' , self componentName;           with: '/' , self componentName ].  html paragraph: [ html           text: 'Now go find the class ';           code: self componentName;           text: ' in your Smalltalk image. First, try changing the displayed text by changing the ';           code: '#renderContentOn:';           text: ' method. Then you can experiment further based on what you''ve seen in the examples and what you read in the '.        html anchor           url: 'http://book.seaside.st/';           with: 'documentation.' ].  html paragraph: [ html text: 'Want to '.        html anchor           callback: [ self answer ];           with: 'create another component'.        html text: '?' ]-=JUAMPI=-collapsed: aBoolean  ^self propertyAt: #collapsed put: aBoolean-=JUAMPI=-attributeAt: aString put: anObject  ^self attributes at: aString put: anObject-=JUAMPI=-renderKeyGeneratorOn: html  html form: [ html keyGenerator callback: [:k |  key := k ].        html submitButton ]-=JUAMPI=-name  ^self class name greaseString-=JUAMPI=-testCopy  | copy absent |  cache at: 1 put: '1'.  cache at: 2 put: '2'.  copy := cache copy.  copy at: 1 put: '1a'.  copy at: 3 put: '3'.  self assert: (cache at: 1 ifAbsent: [ self assert: false ]) = '1'.  self assert: (cache at: 2 ifAbsent: [ self assert: false ]) = '2'.  absent := false.  cache at: 3 ifAbsent: [ absent := true ].  self assert: absent.  self assert: (copy at: 1 ifAbsent: [ self assert: false ]) = '1a'.  self assert: (cache at: 2 ifAbsent: [ self assert: false ]) = '2'.  self assert: (copy at: 3 ifAbsent: [ self assert: false ]) = '3'-=JUAMPI=-headers  ^headers-=JUAMPI=-testHeadersAtPut  self assert: (self response headerAt: 'foo' put: 'bar') = 'bar'.  self assert: (self response headerAt: 'foo') = 'bar'.  self assert: (self response headerAt: 'foo' put: 'zork') = 'zork'.  self assert: (self response headerAt: 'foo') = 'zork'.  self assert: self response headers size = 1-=JUAMPI=-testAddToPathWithLeadingSlash  url addToPath: '/files/WAStandardFiles/seaside.jpg'.  self assert: url path size = 3.  self assert: url path first = 'files'.  self assert: url path second = 'WAStandardFiles'.  self assert: url path third = 'seaside.jpg'.  self assert: url greaseString = '/files/WAStandardFiles/seaside.jpg'-=JUAMPI=-priority  ^900-=JUAMPI=-renderExplanationOn: html  html paragraph: 'This tests whether the sever adapter correctly passes the tailing slash of the request URL to the request context.'.  html paragraph: 'Click each of the links below, and the status should change from "not run" to "success".'-=JUAMPI=-childrenDo: aBlock  self cache keysAndValuesDo: [:key :value |  aBlock value: value ]-=JUAMPI=-isHtml  ^false-=JUAMPI=-callback: aNiladicValuable  aNiladicValuable argumentCount > 0 ifTrue: [ GRInvalidArgumentCount signal: 'Buttons expect a niladic callback.' ].  self name: (self storeCallback: (WAActionCallback on: aNiladicValuable))-=JUAMPI=-testHandler  | filter1 filter2 |  filter1 := handler addFilter: WARequestFilter new.  filter2 := handler addFilter: WARequestFilter new.  self assert: handler handler = handler.  self assert: filter1 handler = handler.  self assert: filter2 handler = handler-=JUAMPI=-onCut: anObject  self document scriptGenerator event: 'cut' do: anObject on: self-=JUAMPI=-title  ^'Task'-=JUAMPI=-renderChooseCheeseCodeOn: html  html preformatted     class: #codeSample;     with: [ html span           class: #patternUnary;           with: 'chooseCheese'.        html break.        html span           class: #instanceVar;           with: '    cheese'.        html text: ' := '.        html span           class: #self;           with: 'self'.        html break.        html text: '        chooseFrom: '.        html span           class: #symbol;           with: '#'.        html text: '( '.        html span           class: #string;           with: '''Greyerzer'' ''Tilsiter'' ''Sbrinz'''.        html text: ' )'.        html break.        html text: '        caption: '.        html span           class: #string;           with: '''What''''s your favorite cheese?'''.        html text: '.'.        html break.        html span           class: #instanceVar;           with: '    cheese'.        html text: ' isNil ifTrue: [ '.        html span           class: #self;           with: 'self'.        html text: ' chooseCheese ]' ]-=JUAMPI=-endDateSelection  ^dateSelectionStart isNil ifFalse: [ dateSelectionStart max: dateSelectionEnd ]-=JUAMPI=-renderContentOn: html  html anchor     class: self cssClass;     url: (html actionUrl withField: 'terminate');     with: self label-=JUAMPI=-raiseWarning  self notify: 'Test Warning'.  self inform: 'To be displayed' onAnswer: [  ]-=JUAMPI=-includes: anObject  ^byValue includesKey: anObject-=JUAMPI=-form: aForm  self extent: aForm extent.  self document: aForm-=JUAMPI=-user  | authorization |  ^(authorization := self authorization) isNil ifFalse: [ authorization copyUpTo: $: ]-=JUAMPI=-initializeWithException: anException  self initialize.  exception := anException-=JUAMPI=-cssClass  ^'wa-action'-=JUAMPI=-defaultAction: aBlock  defaultAction := aBlock-=JUAMPI=-valueFromString: aString  ^aString isEmptyOrNil ifFalse: [ WAUrl absolute: aString ]-=JUAMPI=-marked  ^self tag: 'mark'-=JUAMPI=-renderCookiesRequiredStatementOn: html  html text: 'Sorry, but this application requires cookies to be enabled'-=JUAMPI=-acceptDecorated: aVisitor  aVisitor visitDecorationsOfComponent: self-=JUAMPI=-showTask  selection contents notNil ifTrue: [ self show: selection contents new ]-=JUAMPI=-testByteArrayWithoutFilename  self createAndVerifyBinaryDocumentNamed: nil hasAttachment: nil-=JUAMPI=-chooseObject: anObject named: aString  path pushSegment: anObject name: aString.  selected := nil-=JUAMPI=-ie  self addToCondition: ' IE'-=JUAMPI=-input: aString  input := aString-=JUAMPI=-httpVersion  ^'HTTP/1.1'-=JUAMPI=-initialize  super initialize.  self input: 'a text'-=JUAMPI=-bePopup  self type: 'popup'-=JUAMPI=-document: aString fileName: fileName  self document: aString mimeType: self typeOrNil fileName: fileName-=JUAMPI=-expectedLibrariesContents  ^handler libraries first name-=JUAMPI=-sample  ^self tag: 'samp'-=JUAMPI=-source: aBlock  self source with: aBlock-=JUAMPI=-renderExplanationOn: html  html paragraph: 'The purpose of this test is to make sure WAContext and WACurrentContext work correctly. For each label you should see the print string of one or several matching objects. For the ''Request Handlers'' the first object should be a WASession or subclass, the second a WAApplication and then one or several WADispatchers matching the path.'-=JUAMPI=-logon  user isEmptyOrNil ifTrue: [ self inform: 'Nope !' onAnswer: [  ] ] ifFalse: [ state := #ON.        test ifTrue: [ self inform: 'Logged on' onAnswer: [  ] ] ]-=JUAMPI=-initialize  super initialize.  handlers := WABidirectionalCache new-=JUAMPI=-onKeyPress: anObject  self document scriptGenerator event: 'keypress' do: anObject on: self-=JUAMPI=-type  ^'text'-=JUAMPI=-renderBreakOn: canvas  self renderInline: [:html |  html break ] factor: 1 / 50 key: #seasideBR on: canvas-=JUAMPI=-stream  self subclassResponsibility-=JUAMPI=-handler  ^handler-=JUAMPI=-parents  ^#()-=JUAMPI=-valueFor: anObject  ^self valuesAt: self nextKey put: anObject-=JUAMPI=-configuration  ^configuration-=JUAMPI=-testAsMIMEDocumentByteArray  | document content |  document := WABlockMimeDocument onBlock: [ #(1 2 3 4) asByteArray ].  self assert: document contentType = WAMimeType applicationOctetStream.  content := document content.  self assert: content size = 4.  self assert: content class = ByteArray.  1 to: 4 do: [:index |  self assert: (content at: index) = index ]-=JUAMPI=-render: anObject  self flush.  super render: anObject-=JUAMPI=-at: aSymbol putClass: aClass  ^self at: aSymbol put: (GRPlatform current bindingOf: aClass)-=JUAMPI=-show: aComponent  self show: aComponent onAnswer: [:value |   ]-=JUAMPI=-testNoMarkerOnValue  | kk captured seen |  captured := false.  seen := false.  self shouldnt: [ self markDiscardingResultOf: [ | value |              value := self callcc: [:cc |  kk := cc.                    captured := true ].              seen := true.              value ] ] raise: Error.  self assert: captured.  self assert: seen.  captured := false.  seen := false.  self assert: (kk value: 123) = 123.  self deny: captured.  self assert: seen-=JUAMPI=-handleDefault: aRequestContext  self handle: aRequestContext registering: self newSession-=JUAMPI=-numArgs  self subclassResponsibility-=JUAMPI=-toggleUIProcess  | uiProcess |  uiProcess := self uiProcess.  uiProcess isSuspended ifTrue: [ uiProcess resume ] ifFalse: [ uiProcess suspend ]-=JUAMPI=-selected: aClass  current contents: aClass new.  (current contents respondsTo: #parent:) ifTrue: [ current contents parent: self ]-=JUAMPI=-children  ^Array with: self componentCreator-=JUAMPI=-testAtPut  1 to: 100 do: [:i |  | absent mapped |        absent := false.        cache at: i ifAbsent: [ absent := true ].        self assert: absent.        mapped := cache at: i put: i greaseString.        self assert: mapped = i greaseString.        mapped := cache at: i ifAbsent: [ self assert: false ].        self assert: mapped = i greaseString ]-=JUAMPI=-beUp  self relationship: 'up'-=JUAMPI=-renderExplanationOn: html  html paragraph: [ html text: 'This is a functional test for WATree.'.        html orderedList: [ html listItem: 'Clicking on ''+'' should expand a node'.              html listItem: 'Clicking on ''-'' should collapse a node'.              html listItem: 'Clicking on a node should display its name after ''Selected:'''.              html listItem: 'Leaf nodes should not be clickable' ] ]-=JUAMPI=-buildTable  ^WATableReport new     rows: instances values;     columns: (Array with: (WAReportColumn new                 title: 'Class';                 selector: #name;                 sortBlock: [:a :b |  a < b ];                 yourself) with: (WAReportColumn new                 title: 'Instances';                 selector: #count;                 sortBlock: [:a :b |  a > b ];                 cssClass: 'right';                 hasTotal: true;                 yourself) with: (WAReportColumn new                 title: 'Total Size';                 selector: #size;                 sortBlock: [:a :b |  a > b ];                 formatBlock: [:each |  formatter print: each ];                 cssClass: 'right';                 hasTotal: true;                 yourself));     yourself-=JUAMPI=-describeOn: config  (config list: #fileHandlerListingClass)     beAdvanced;     options: [ self listingClasses ];     default: WAForbiddenFileHandlerListing.  (config url: #resourceBaseUrl)     group: #server;     comment: 'Sets the base URL for generated URLs.'.  (config boolean: #useXSendfile)     beAdvanced;     group: #server;     comment: 'Sets whether to use the X-Sendfile header to stream file library contents.';     default: false.  (config string: #xSendfileBaseDirectory)     beAdvanced;     group: #server;     comment: 'The directory in which the deployed file libraries are.'-=JUAMPI=-initializeWithSeparator: aSeparator value: anFirstObject value: aSecondObject  self initialize.  separator := aSeparator.  values := OrderedCollection new: 4.  values add: anFirstObject.  values add: aSecondObject-=JUAMPI=-value  ^value-=JUAMPI=-clearAttribute: anAttribute  self configuration removeExpressionAt: anAttribute key-=JUAMPI=-form  ^zoom ifFalse: [ Display copy ] ifTrue: [ self topWindow imageForm ]-=JUAMPI=-initialize  super initialize.  count := 1-=JUAMPI=-handler: anObject  handler := anObject-=JUAMPI=-source: html visitor: aPainterVisitor  | context |  html div     class: 'wa-halo-source';     with: [ context := html context copy.        context disableHalos.        context document: (WAPrettyPrintedDocument context: html context).        (WARenderVisitor context: context) start: self root.        context document close ]-=JUAMPI=-renderActionsOn: html  html paragraph: [ html anchor           callback: [ self authentication ];           with: 'Basic Authentication'.        html text: ' (admin/seaside)'.        html break.        html anchor           callback: [ self protectorByRemoteAddress ];           with: 'Session Protector by remote address'.        html break.        html anchor           callback: [ self protectorByBrowserSessionCookie ];           with: 'Session Protector by session cookie' ].  html horizontalRule.  html paragraph: self children-=JUAMPI=-multiplier  ^multiplier-=JUAMPI=-initializeWithClient: aPainterVisitor  self initialize.  client := aPainterVisitor-=JUAMPI=-input: aString  input := aString-=JUAMPI=-removeDelegation  self delegations notEmpty ifTrue: [ self removeDecoration: self delegations first ]-=JUAMPI=-at: aSymbol addAll: additions removeAll: removals  ^self storeExpression: ((WAAddRemoveExpression key: aSymbol)           additions: additions;           removals: removals;           yourself) forAttribute: (self attributeAt: aSymbol)-=JUAMPI=-children  ^Array with: batcher-=JUAMPI=-onLoadedData: anObject  self document scriptGenerator event: 'loadeddata' do: anObject on: self-=JUAMPI=-register: anObject  anObject isNil ifFalse: [ objects at: anObject put: anObject snapshotCopy ]-=JUAMPI=-demoJpegContent  ^#(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255) asByteArray-=JUAMPI=-addKey: aString toContext: aRequestContext  self subclassResponsibility-=JUAMPI=-renderContentOn: html  | last selected |  last := nil.  html div     class: 'trail';     with: [ root visiblePresentersDo: [:each |  (each isDecoration and: [ each isDelegation ]) ifTrue: [ (each decoratedComponent respondsTo: #trailName) ifTrue: [ last := each.                          html anchor                             callback: [ each remove ];                             with: (each decoratedComponent perform: #trailName).                          html span                             class: 'separator';                             with: self separator ] ] ].        selected := last isNil ifTrue: [ root ] ifFalse: [ last delegate ].        (selected respondsTo: #trailName) ifTrue: [ html text: (selected perform: #trailName) ] ]-=JUAMPI=-testRfc1  | accept |  accept := WAAccept fromString: 'audio/*; q=0.2, audio/basic'.  self assert: accept size = 2.  self assert: accept at: 1 main: 'audio' sub: '*' quality: 0.2.  self assert: accept at: 2 main: 'audio' sub: 'basic' quality: 1.0-=JUAMPI=-openingConditionClass  ^WAOpeningConditionalComment-=JUAMPI=-testAddKeyToUrl  | context uri |  context := self requestContext.  uri := context request uri copy.  strategy addKey: 'The_Metaphor' toUrl: uri.  self assert: uri greaseString = '/catspajamassc2?_s=The_Metaphor'-=JUAMPI=-configurationComponent  ^WAHandlerEditor on: self-=JUAMPI=-codetype: aString  self attributes at: 'codetype' put: aString-=JUAMPI=-withLineBreaksAndUrls: aString  | stream |  aString ifNil: [ ^self ].  stream := aString readStream.  [ stream atEnd ] whileFalse: [ self withUrls: stream nextLine.        stream atEnd ifFalse: [ self break ] ]-=JUAMPI=-with: aString  self attributes at: 'type' ifAbsentPut: [ 'text/javascript' ].  super with: [ aString isNil ifFalse: [ self document nextPutAll: aString greaseString ] ]-=JUAMPI=-addParent: aConfiguration  (self parents includes: aConfiguration) ifTrue: [ ^aConfiguration ].  (self canAddParent: aConfiguration) ifTrue: [ self clearSearchContexts.        parents add: aConfiguration ] ifFalse: [ WAConfigurationError signal: 'Cannot add this configuration as a parent. Would this cause a circular ancestry graph?' ].  ^aConfiguration-=JUAMPI=-label  ^self brush: WALabelTag new-=JUAMPI=-initializeOn: aDispatcher  self initialize.  dispatcher := aDispatcher-=JUAMPI=-openBrush  self document openArray-=JUAMPI=-initialize  super initialize.  self     name: 'Remove adaptor';     description: 'Remove the currently selected seaside adaptor'-=JUAMPI=-isResumable  ^false-=JUAMPI=-responseForLibraries  context respond: [:response |  response contentType: WAMimeType textPlain.        handler libraries do: [:each |  response stream                 nextPutAll: each name;                 crlf ] ]-=JUAMPI=-renderConfigurationOn: html  | selectedLib |  selectedLib := WAValueHolder new.  html form: [ html table: [ html tableRow: [ html tableData: [ html select                             list: self libraries;                             callback: [:value |  selectedLib contents: value ];                             size: 10 ].                    html tableData: [ html anchor                             title: 'Configure selected file library';                             class: 'large';                             onClick: 'return submitForm(this)';                             callback: [ selectedLib contents isNil ifFalse: [ self configureLibrary: selectedLib contents default ] ];                             with: 'Configure' ] ] ] ]-=JUAMPI=-value: anObject with: aListTag  self selected: (aListTag isSelected: anObject).  self value: (aListTag valueFor: anObject)-=JUAMPI=-table: aBlock  self table with: aBlock-=JUAMPI=-testEquals  | first second |  first := WAMimeType fromString: 'text/html'.  second := WAMimeType fromString: 'text/html'.  self assert: first = second.  self assert: first hash = second hash.  second charset: 'utf-8'.  self assert: first = second.  self assert: first hash = second hash.  first charset: 'iso-8859-1'.  self assert: first = second.  self assert: first hash = second hash.  second := WAMimeType fromString: 'text/xml'.  self deny: first = second-=JUAMPI=-isOptional  ^isOptional-=JUAMPI=-radioButton: aBlock  ^self radioButton with: aBlock-=JUAMPI=-respond  WAResponseNotification signal-=JUAMPI=-scrollbars: aBoolean  features at: #scrollbars put: aBoolean-=JUAMPI=-table  ^table ifNil: [ table := self buildTable ]-=JUAMPI=-type: aMimeType  self attributeAt: 'type' put: aMimeType-=JUAMPI=-basicUrl  ^self isRoot ifTrue: [ WAUrl new ] ifFalse: [ self parent urlFor: self ]-=JUAMPI=-definition  ^self tag: 'dfn'-=JUAMPI=-createCodec  ^GRNullCodec new-=JUAMPI=-editorClass  ^cache editorClass-=JUAMPI=-menu: aBlock  self menu with: aBlock-=JUAMPI=-testIsNotFromCrawler  | context |  context := self requestContext.  self browserUserAgents do: [:each |  context request headers at: 'user-agent' put: each.        self deny: (strategy isFromCrawler: context) ]-=JUAMPI=-testRemoveRelativeOldest  | tenMissing |  cache := WAHashCache initialSize: 13 maximumSize: 10 maximumAbsoluteAge: 0 maximumRelativeAge: 0 overflowAction: WAHashCache removeRelativeOldest.  1 to: 10 do: [:i |  cache at: i put: i greaseString ].  1 to: 9 do: [:i |  cache at: i ifAbsent: [ self assert: false ] ].  cache at: 11 put: '11'.  1 to: 9 do: [:i |  self assert: (cache at: i ifAbsent: [ self assert: false ]) = i greaseString ].  self assert: (cache at: 11 ifAbsent: [ self assert: false ]) = '11'.  tenMissing := false.  cache at: 10 ifAbsent: [ tenMissing := true ].  self assert: tenMissing-=JUAMPI=-sourceSet: aString  self attributes at: 'srcset' put: aString-=JUAMPI=-renderObject: anObject labelled: aString on: html  html definitionTerm: [ html anchor           callback: [ (WAInspectorHaloPlugin on: anObject for: self) execute ];           with: aString ].  html definitionData: (self safePrintString: anObject)-=JUAMPI=-fullStackUrl  ^self urlForDebugAction: '_fullStack'-=JUAMPI=-parents  ^Array with: WARequestHandlingConfiguration instance with: WACacheConfiguration instance-=JUAMPI=-testNotImplemented  | generator |  generator := WAResponseGenerator on: self requestContext.  self requestContext response nextPutAll: 'oops'.  generator notImplemented.  self assertContents: 'Not Implemented'-=JUAMPI=-ambigousExamples  ^#(#('www.seaside.st' '/www.seaside.st') #('http://www.seaside.st:443/' 'http://www.seaside.st:443/') #('https://www.seaside.st:80/' 'https://www.seaside.st:80/') #('http://www.seaside.st:/' 'http://www.seaside.st/') #('http://' '/') #('http://@' '/') #('http://@www.seaside.st/' 'http://@www.seaside.st/') #('http://:lukas@www.seaside.st/' 'http://:lukas@www.seaside.st/') #('http://lukas:@www.seaside.st/' 'http://lukas:@www.seaside.st/') #('http://www.seaside.st' 'http://www.seaside.st/') #('http://www.seaside.st//' 'http://www.seaside.st/') #('http://www.seaside.st/.' 'http://www.seaside.st/') #('http://www.seaside.st/./' 'http://www.seaside.st/') #('http://www.seaside.st/..' 'http://www.seaside.st/') #('http://www.seaside.st/../' 'http://www.seaside.st/') #('http://www.seaside.st/?' 'http://www.seaside.st/') #('http://www.seaside.st/??' 'http://www.seaside.st/?%3F') #('http://www.seaside.st/?=2' 'http://www.seaside.st/') #('http://www.seaside.st/?&' 'http://www.seaside.st/') #('http://www.seaside.st/?1==' 'http://www.seaside.st/?1=%3D') #('http://www.seaside.st/?1=2&' 'http://www.seaside.st/?1=2') #('http://www.seaside.st/#' 'http://www.seaside.st/') #('http://www.seaside.st/##' 'http://www.seaside.st/#%23') #('http://www.seaside.st/#?a=b' 'http://www.seaside.st/#%3Fa%3Db'))-=JUAMPI=-start: anInteger  self attributes at: 'start' put: anInteger-=JUAMPI=-document: anObject mimeType: aMimeType  self document: (anObject seasideMimeDocument           mimeType: aMimeType;           yourself)-=JUAMPI=-createRegistry  ^WADispatcher new register: (WARedirectingApplication new           sessionClass: WATestSession;           cache: WAUnidirectionalCache new;           yourself) at: self registryName-=JUAMPI=-from  ^from-=JUAMPI=-width: anInteger  self attributes at: 'width' put: anInteger-=JUAMPI=-copy  ^self error: 'SystemConfigurations are singletons and should not be copied.'-=JUAMPI=-testContents  file contents: #(83 101 97 115 105 100 101) asByteArray.  self assert: file rawContents = #(83 101 97 115 105 100 101) asByteArray.  self assert: (file contentsDecodedUsing: 'ISO-8859-1') = 'Seaside'-=JUAMPI=-ports: aCollection  ports := aCollection-=JUAMPI=-urlForAction: aBlock  ^self actionUrl withField: (self callbacks store: (WAActionCallback on: aBlock))-=JUAMPI=-localAttributeAt: aSymbol ifAbsent: absentBlock  ^absentBlock value-=JUAMPI=-destroy  super destroy.  urlEncoder := xmlEncoder := nil-=JUAMPI=-< otherVersion  ^major < otherVersion major or: [ major = otherVersion major and: [ minor < otherVersion minor ] ]-=JUAMPI=-canAnswer  ^self decorations anySatisfy: [:each |  each isKindOf: WAAnswerHandler ]-=JUAMPI=-initializeWithBlock: aBlock  self initialize.  block := aBlock-=JUAMPI=-children  ^groups-=JUAMPI=-version: aVersion  version := aVersion-=JUAMPI=-execute  self handler parent defaultName: self handler name-=JUAMPI=-testPostFields  | request headers |  request := WARequest method: 'POST' uri: '/foo?bar=1'.  self     deny: request isXmlHttpRequest;     assert: request headers class equals: WAHeaderFields;     assert: request remoteAddress isNil;     assert: request isPost;     assert: request sslSessionId isNil.  headers := Dictionary new.  headers at: 'content-type' put: WAMimeType formUrlencoded greaseString.  request setHeaders: headers.  request setBody: 'baz=2&bar=3'.  request setPostFields: (WARequestFields new           at: 'baz' put: '2';           at: 'bar' put: '3';           yourself).  self assert: request postFields size = 2.  self assert: (request postFields at: 'baz') = '2'.  self assert: (request postFields at: 'bar') = '3'.  self assert: request queryFields size = 1.  self assert: (request queryFields at: 'bar') = '1'.  self assert: request fields size = 3.  self assert: (request fields at: 'bar') = '1'.  self assert: (request fields at: 'baz') = '2'-=JUAMPI=-renderContentOn: html  html paragraph: [ html popupAnchor           callback: [ self batchFunctionalTestLoop ];           with: 'popup'.        html break.        html popupAnchor           extent: 300 @ 300;           callback: [ self batchFunctionalTestLoop ];           with: 'popup with extent'.        html break.        html popupAnchor           position: 100 @ 100;           callback: [ self batchFunctionalTestLoop ];           with: 'popup with position'.        html break.        html popupAnchor           location: true;           callback: [ self batchFunctionalTestLoop ];           with: 'popup with location'.        html break.        html popupAnchor           resizable: false;           callback: [ self batchFunctionalTestLoop ];           with: 'popup not resizable'.        html break.        html popupAnchor           resizable: false;           extent: 300 @ 300;           position: 50 @ 50;           callback: [ self popupCloseTest ];           with: 'popup with close button' ]-=JUAMPI=-newStrategy  ^WAIPSessionTrackingStrategy new-=JUAMPI=-span: anInteger  self attributes at: 'span' put: anInteger-=JUAMPI=-media: aString  self attributes at: 'media' put: aString-=JUAMPI=-start  self application initialContinuationClass new handle: self requestContext-=JUAMPI=-renderContentOn: html  self renderExplanationOn: html.  self renderSwapParentOn: html-=JUAMPI=-testBody  | actual |  actual := WAHtmlCanvas builder render: [:html |  html unorderedList: [ html listItem: 'an item' ] ].  self assert: actual = '<ul><li>an item</li></ul>'-=JUAMPI=-isActionContinuation  ^self class isActionContinuation-=JUAMPI=-verifyBrowserSessionIDFor: requestContext  | cookie |  cookie := requestContext request cookieAt: self browserSessionIDCookieKey.  ^cookie notNil and: [ cookie value = self browserSessionID ]-=JUAMPI=-seasidePossibleCauses  ^#('you included self in the return value of #children' 'You''re probably missing a return (^) somewhere.')-=JUAMPI=-testEmpty  | key |  key := strategy keyFromContext: self requestContext.  self assert: key isNil-=JUAMPI=-initializeOn: aCollection mimeType: aMimeType fileName: aString  self initialize.  self contents: aCollection.  self mimeType: aMimeType.  self fileName: aString-=JUAMPI=-dispatcher: anObject  dispatcher := anObject-=JUAMPI=-children  ^Array with: inputElements-=JUAMPI=-select: aDate  self date: aDate.  selectBlock value: aDate-=JUAMPI=-children  ^Array with: trail with: component-=JUAMPI=-ruby  ^self tag: 'ruby'-=JUAMPI=-initializeWithSnapshot: aSnapshot renderContext: aRenderContext  self initializeWithSnapshot: aSnapshot.  renderContext := aRenderContext-=JUAMPI=-raiseHalt  | context |  self halt.  context := self requestContext.  self inform: 'To be displayed' onAnswer: [  ]-=JUAMPI=-renderAcceptCharsetFor: aRequest on: html  html definitionTerm: 'Accept-Charset:'.  self renderQualifiedValues: aRequest acceptCharset on: html-=JUAMPI=-encodeOn: aStream usingQuotes: aBoolean  username isNil ifFalse: [ aBoolean ifTrue: [ aStream nextPut: $" ].        aStream nextPutAll: username.        aBoolean ifTrue: [ aStream nextPut: $" ].        aStream nextPutAll: ' <' ].  aStream nextPutAll: address.  username isNil ifFalse: [ aStream nextPut: $> ]-=JUAMPI=-type  ^nil-=JUAMPI=-assert: anArray at: anInteger main: aMainString sub: aSubString quality: aFloat  | value mimeType |  value := anArray at: anInteger.  self assert: (value isKindOf: WAQualifiedValue).  self assert: value quality = aFloat.  mimeType := value value.  self assert: (mimeType isKindOf: WAMimeType).  self assert: mimeType main = aMainString.  self assert: mimeType sub = aSubString-=JUAMPI=-testDoNotCache  self response doNotCache.  self assert: (self response headerAt: 'Pragma') = 'no-cache'.  self assert: (self response headerAt: 'Expires') notNil.  self assert: (self response headerAt: 'Cache-Control') = 'no-cache, max-age=0, must-revalidate, no-store'-=JUAMPI=-renderToolsOn: html  html paragraph: [ self canAnswer ifTrue: [ self renderAnsweringToolsOn: html ] ifFalse: [ self renderNotAnsweringToolsOn: html ] ]-=JUAMPI=-cacheEntryRemoved: anObject  (anObject respondsTo: #unregistered) ifTrue: [ [ anObject unregistered ] on: Error do: [:e |   ] ]-=JUAMPI=-tableHeading  ^self brush: WATableHeadingTag new-=JUAMPI=-tag  ^'input'-=JUAMPI=-store: anObject  | candidateKey |  [ candidateKey := WAKeyGenerator current keyOfLength: self keySize.  self at: candidateKey put: anObject overwrite: false ] whileFalse.  ^candidateKey-=JUAMPI=-buttons  ^#(save)-=JUAMPI=-sendFailFor: anError  | message |  message := WAEmailMessage from: self from to: self to subject: (self subjectFor: anError).  message body: (self bodyFor: anError).  message send-=JUAMPI=-visitStringAttribute: anAttribute  self html textInput     value: (anAttribute stringForValue: (self configuration at: anAttribute key));     callback: [:value |  self configuration takeValueFromString: value forAttribute: anAttribute ]-=JUAMPI=-isCommitted  ^false-=JUAMPI=-buildTable  ^WATableReport new     rowPeriod: 1;     rowColors: #('#eee' 'white');     rows: self notifications;     columns: (Array with: (WAReportColumn selector: #messageText title: 'Deprecated') with: (WAReportColumn selector: #details title: 'Details'));     yourself-=JUAMPI=-dispatchCallback  ^self name: (self storeCallback: WADispatchCallback new)-=JUAMPI=-testCopy  | copy absent |  cache at: 1 put: '1'.  cache at: 2 put: '2'.  copy := cache copy.  copy at: 1 put: '1a'.  copy at: 3 put: '3'.  self assert: (cache at: 1 ifAbsent: [ self assert: false ]) = '1'.  self assert: (cache at: 2 ifAbsent: [ self assert: false ]) = '2'.  absent := false.  cache at: 3 ifAbsent: [ absent := true ].  self assert: absent.  self assert: (copy at: 1 ifAbsent: [ self assert: false ]) = '1a'.  self assert: (cache at: 2 ifAbsent: [ self assert: false ]) = '2'.  self assert: (copy at: 3 ifAbsent: [ self assert: false ]) = '3'-=JUAMPI=-cssClass  ^cssClass-=JUAMPI=-span: anInteger  self attributes at: 'rbspan' put: anInteger-=JUAMPI=-tag  ^'track'-=JUAMPI=-testFragment  url fragment: 'id'.  self assert: url fragment = 'id'.  self assert: url greaseString = '/#id'-=JUAMPI=-created  self status: WAResponse statusCreated-=JUAMPI=-destroy  headers := cookies := nil-=JUAMPI=-discard  ^discard-=JUAMPI=-onReset: anObject  self document scriptGenerator event: 'reset' do: anObject on: self-=JUAMPI=-imageUpTime  ^DateAndTime now - self imageBootTime-=JUAMPI=-initialize  super initialize.  self reset-=JUAMPI=-onLoadedMetadata: anObject  self document scriptGenerator event: 'loadedmetadata' do: anObject on: self-=JUAMPI=-main: aString  main := aString-=JUAMPI=-renderContentOn: html  duration := 0.  referenceDict ifNil: [ referenceDict := self class referenceDict ].  self renderExplanationOn: html.  self renderAnchorsOn: html.  self renderScriptOn: html.  self renderTableOn: html.  self renderLineBreaksOn: html.  self renderCallbackOn: html.  self renderFormOn: html.  self renderIdTestOn: html.  self renderTextOn: html.  self renderHtmlTextOn: html.  self renderBreakOn: html.  self renderNativeBreakOn: html.  html div     class: 'result';     with: 'Seaside Performance Index: ' , duration greaseString-=JUAMPI=-commandLineArgumentsFrom: aSmalltalkImage  | options |  options := ((3 to: 1000) collect: [:each |  aSmalltalkImage vm getSystemAttribute: each ]) select: [:each |  each notNil ].  ^String streamContents: [:stream |  options do: [:each |  stream nextPutAll: each ] separatedBy: [ stream space ] ]-=JUAMPI=-updateUrl: aUrl  super updateUrl: aUrl.  (WAVisiblePresenterGuide client: (WAUpdateUrlVisitor url: aUrl)) start: self presenter-=JUAMPI=-reversed: aBoolean  self attributes at: 'reversed' put: aBoolean-=JUAMPI=-testPageExpired  | generator |  generator := WAResponseGenerator on: self requestContext.  self requestContext response nextPutAll: 'oops'.  generator pageExpired.  self assertContents: 'This page has expired, please use the back-button to navigate to the last valid page.'-=JUAMPI=-description  ^description isNil ifFalse: [ description ] ifTrue: [ self buildDescription ]-=JUAMPI=-renderInline: aBlock key: key on: html  self renderInline: aBlock factor: 1 key: key on: html-=JUAMPI=-tearDown  super tearDown.  process isNil ifFalse: [ GRPlatform current terminateProcess: process ].  process2 isNil ifFalse: [ GRPlatform current terminateProcess: process2 ].  mutex := nil.  process := nil.  process2 := nil-=JUAMPI=-snapshot  ^snapshot-=JUAMPI=-footer: aBlock  self footer with: aBlock-=JUAMPI=-visitIntegerAttribute: anAttribute  self visitNumberAttribute: anAttribute-=JUAMPI=-renderRowForWeek: initialDay on: html  html tableRow: [ 0 to: 6 do: [:each |  self renderCellForDate: (initialDay addDays: each) on: html ] ]-=JUAMPI=-challenge: aString  self attributeAt: 'challenge' put: aString-=JUAMPI=-script: aStringOrJSObject  self script with: aStringOrJSObject-=JUAMPI=-tableColumnGroup  ^self brush: WATableColumnGroupTag new-=JUAMPI=-getSearchContextFor: aSymbol  ^self getSearchContextFor: aSymbol ifAbsent: [ WAAttributeNotFound signalWithKey: aSymbol ]-=JUAMPI=-testAssociationsDo  | keys values |  one at: 'foo' put: 1.  two at: 'bar' put: 2.  two at: 'foo' put: 3.  keys := OrderedCollection new.  values := OrderedCollection new.  merged associationsDo: [:assoc |  keys add: assoc key.        values add: assoc value ].  self assert: keys asArray = #('foo' 'bar' 'foo').  self assert: values asArray = #(1 2 3)-=JUAMPI=-hasCallback  ^callbackBlock notNil-=JUAMPI=-classesInTheSelectedPackage  ^selectedPackage ifNil: [ #() ] ifNotNil: [ selectedPackage classes ]-=JUAMPI=-testAsMIMEDocumentStream  | document |  document := 'dolphin' readStream seasideMimeDocument.  self assert: document contentType = WAMimeType textPlain.  self assert: document content = 'dolphin'-=JUAMPI=-closeThisPopup  ^self respond: [:resp |  resp           contentType: WAMimeType textHtml;           nextPutAll: (WAHtmlCanvas builder                 fullDocument: true;                 rootBlock: [:root |  root                       title: 'Seaside';                       beHtml5 ];                 render: [:html |  html script: 'window.close();' ]) ]-=JUAMPI=-testRemoveFilter  | filter1 filter2 |  handler addFilter: (filter1 := WARequestFilter new).  handler addFilter: (filter2 := WARequestFilter new).  self assert: (handler removeFilter: WARequestFilter new) isNil.  self assert: (handler removeFilter: filter1) = filter1.  self assert: handler filters size = 1.  self assert: handler filters first = filter2.  self assert: (handler removeFilter: filter2) = filter2.  self assert: handler filters isEmpty.  self assert: (handler removeFilter: filter2) isNil-=JUAMPI=-renderContentOn: html  self actions do: [:symbol |  symbol numArgs = 0 ifTrue: [ self renderLink: symbol on: html ] ifFalse: [ self renderInput: symbol on: html ] ]-=JUAMPI=-status: aNumber message: aString  self committedCheck.  super status: aNumber message: aString-=JUAMPI=-states  ^Array with: current-=JUAMPI=-year: anIntegerOrString  year := anIntegerOrString greaseInteger ifNil: [ 1900 ]-=JUAMPI=-renderContentOn: html  html heading: count.  html anchor     callback: [ self increase ];     with: '++'.  html space.  html anchor     callback: [ self decrease ];     with: '--'-=JUAMPI=-newStrategy  ^WACookieForBrowserIPForCrawlerTrackingStrategy new-=JUAMPI=-testActionCallback  | key1 key2 |  key1 := registry store: (WAActionCallback on: [ log add: 1 ]).  key2 := registry store: (WAActionCallback on: [ log add: 2 ]).  self should: [ self request: (WARequestFields new                 at: key1 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #(1).  self should: [ self request: (WARequestFields new                 at: key2 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #(2).  self should: [ self request: (WARequestFields new                 at: key2 put: nil;                 at: key1 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #(1).  self should: [ self request: (WARequestFields new                 at: key1 put: nil;                 at: key1 put: nil;                 yourself) ] raise: WARenderNotification.  self assertLog: #(1)-=JUAMPI=-isReversed  ^isReversed-=JUAMPI=-initialize  | charSet |  super initialize.  charSet := self requestContext charSet.  charSet isNil ifTrue: [ self acceptCharset: self defaultUrlCharset ] ifFalse: [ self acceptCharset: charSet ]-=JUAMPI=-rawBody  ^body-=JUAMPI=-